{"repository_name":"ph-core","body":"# ph-core\n\nPhase is a family of scientific computing libraries written for Crystal. This repository\nimplements Phase's core functionality - generic multidimensional arrays, tensors, and other\ngeneral-purpose utilities.\n\n## Core Principles\n\nOur primary motivation is to make scientific computing enjoyable, and we do that by putting **user experience above all else**. Phase only requires that you add it to your `shard.yml` - there are no C libraries you have to install.\n\nWe also aim to keep our contribution useful by making Phase as **modular and well-contained** as possible. Writing a serious scientific computing library is a large undertaking. Because ph-core is small and modular, it should still be useful and expansible even after core maintainers leave.\n\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     ph-core:\n       github: in-phase/ph-core\n   ```\n\n2. Run `shards install`\n\n## Usage\n\n```crystal\nrequire \"ph-core\"\n```\n\nTODO: Write usage instructions here\n\n## Development\n\nTODO: Write development instructions here\n\n## Contributing\n\n1. Fork it (<https://github.com/in-phase/ph-core/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n- [Emily Love](https://github.com/emgineering) - co-author\n- [Seth Hinz](https://github.com/shinzlet) - co-author","program":{"html_id":"ph-core/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"ph-core","program":true,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"ph-core/Complex","path":"Complex.html","kind":"struct","full_name":"Complex","name":"Complex","abstract":false,"superclass":{"html_id":"ph-core/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"ph-core/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"ph-core/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"ph-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/patches/complex.cr","line_number":6,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/patches/complex.cr#L6"}],"repository_name":"ph-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"this patch makes it possible to operate elementwise on a Number and an NArray (in that order)\ne.g.\n``` 5 + NArray.new([1,2,3]) #=> [6,7,8] ```","summary":"<p>this patch makes it possible to operate elementwise on a Number and an NArray (in that order) e.g.</p>","class_methods":[],"constructors":[],"instance_methods":[{"html_id":"%(other:MultiIndexable(U))forallU-instance-method","name":"%","doc":"Invokes `#%` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code>#%</code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/complex.cr","line_number":7,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/patches/complex.cr#L7"},"def":{"name":"%","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self % elem\nend"}},{"html_id":"&(other:MultiIndexable(U))forallU-instance-method","name":"&","doc":"Invokes `#&` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Complex.html#&(other:MultiIndexable(U))forallU-instance-method\">#&</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/complex.cr","line_number":7,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/patches/complex.cr#L7"},"def":{"name":"&","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self & elem\nend"}},{"html_id":"&**(other:MultiIndexable(U))forallU-instance-method","name":"&**","doc":"Invokes `#&**` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Complex.html#&**(other:MultiIndexable(U))forallU-instance-method\">#&**</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/complex.cr","line_number":7,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/patches/complex.cr#L7"},"def":{"name":"&**","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self &** elem\nend"}},{"html_id":"&+(other:MultiIndexable(U))forallU-instance-method","name":"&+","doc":"Invokes `#&+` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Complex.html#&+(other:MultiIndexable(U))forallU-instance-method\">#&+</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/complex.cr","line_number":7,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/patches/complex.cr#L7"},"def":{"name":"&+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self &+ elem\nend"}},{"html_id":"&-(other:MultiIndexable(U))forallU-instance-method","name":"&-","doc":"Invokes `#&-` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Complex.html#&-(other:MultiIndexable(U))forallU-instance-method\">#&-</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/complex.cr","line_number":7,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/patches/complex.cr#L7"},"def":{"name":"&-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self &- elem\nend"}},{"html_id":"*(other:MultiIndexable(U))forallU-instance-method","name":"*","doc":"Invokes `#*` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Complex.html#*(other:MultiIndexable(U))forallU-instance-method\">#*</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/complex.cr","line_number":7,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/patches/complex.cr#L7"},"def":{"name":"*","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self * elem\nend"}},{"html_id":"**(other:MultiIndexable(U))forallU-instance-method","name":"**","doc":"Invokes `#**` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Complex.html#**(other:MultiIndexable(U))forallU-instance-method\">#**</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/complex.cr","line_number":7,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/patches/complex.cr#L7"},"def":{"name":"**","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self ** elem\nend"}},{"html_id":"+(other:MultiIndexable(U))forallU-instance-method","name":"+","doc":"Invokes `#+` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Complex.html#+(other:MultiIndexable(U))forallU-instance-method\">#+</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/complex.cr","line_number":7,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/patches/complex.cr#L7"},"def":{"name":"+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self + elem\nend"}},{"html_id":"-(other:MultiIndexable(U))forallU-instance-method","name":"-","doc":"Invokes `#-` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Complex.html#-(other:MultiIndexable(U))forallU-instance-method\">#-</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/complex.cr","line_number":7,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/patches/complex.cr#L7"},"def":{"name":"-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self - elem\nend"}},{"html_id":"/(other:MultiIndexable(U))forallU-instance-method","name":"/","doc":"Invokes `#/` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Complex.html#/(other:MultiIndexable(U))forallU-instance-method\">#/</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/complex.cr","line_number":7,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/patches/complex.cr#L7"},"def":{"name":"/","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self / elem\nend"}},{"html_id":"//(other:MultiIndexable(U))forallU-instance-method","name":"//","doc":"Invokes `#//` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Complex.html#//(other:MultiIndexable(U))forallU-instance-method\">#//</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/complex.cr","line_number":7,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/patches/complex.cr#L7"},"def":{"name":"//","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self // elem\nend"}},{"html_id":"<(other:MultiIndexable(U))forallU-instance-method","name":"<","doc":"Invokes `#<` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Complex.html#%3C(other:MultiIndexable(U))forallU-instance-method\">#<</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/complex.cr","line_number":7,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/patches/complex.cr#L7"},"def":{"name":"<","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self < elem\nend"}},{"html_id":"<=(other:MultiIndexable(U))forallU-instance-method","name":"<=","doc":"Invokes `#<=` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Complex.html#%3C=(other:MultiIndexable(U))forallU-instance-method\">#<=</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/complex.cr","line_number":7,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/patches/complex.cr#L7"},"def":{"name":"<=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self <= elem\nend"}},{"html_id":">(other:MultiIndexable(U))forallU-instance-method","name":">","doc":"Invokes `#>` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Complex.html#%3E(other:MultiIndexable(U))forallU-instance-method\">#></a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/complex.cr","line_number":7,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/patches/complex.cr#L7"},"def":{"name":">","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self > elem\nend"}},{"html_id":">=(other:MultiIndexable(U))forallU-instance-method","name":">=","doc":"Invokes `#>=` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Complex.html#%3E=(other:MultiIndexable(U))forallU-instance-method\">#>=</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/complex.cr","line_number":7,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/patches/complex.cr#L7"},"def":{"name":">=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self >= elem\nend"}},{"html_id":"^(other:MultiIndexable(U))forallU-instance-method","name":"^","doc":"Invokes `#^` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Complex.html#%5E(other:MultiIndexable(U))forallU-instance-method\">#^</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/complex.cr","line_number":7,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/patches/complex.cr#L7"},"def":{"name":"^","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self ^ elem\nend"}},{"html_id":"eq(other:MultiIndexable(U)):MultiIndexable(Bool)forallU-instance-method","name":"eq","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) : MultiIndexable(Bool) forall U","args_html":"(other : MultiIndexable(U)) : MultiIndexable(Bool) forall U","location":{"filename":"src/patches/complex.cr","line_number":19,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/patches/complex.cr#L19"},"def":{"name":"eq","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"MultiIndexable(Bool)","visibility":"Public","body":"other.map do |elem|\n  self == elem\nend"}},{"html_id":"|(other:MultiIndexable(U))forallU-instance-method","name":"|","doc":"Invokes `#|` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Complex.html#%7C(other:MultiIndexable(U))forallU-instance-method\">#|</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/complex.cr","line_number":7,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/patches/complex.cr#L7"},"def":{"name":"|","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self | elem\nend"}}],"macros":[],"types":[]},{"html_id":"ph-core/Number","path":"Number.html","kind":"struct","full_name":"Number","name":"Number","abstract":true,"superclass":{"html_id":"ph-core/Value","kind":"struct","full_name":"Value","name":"Value"},"ancestors":[{"html_id":"ph-core/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"ph-core/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"},{"html_id":"ph-core/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"ph-core/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"ph-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/patches/number.cr","line_number":4,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/patches/number.cr#L4"}],"repository_name":"ph-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"ph-core/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"ph-core/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"ph-core/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"this patch makes it possible to operate elementwise on a Number and an NArray (in that order)\r\ne.g.\r\n``` 5 + NArray.new([1,2,3]) #=> [6,7,8] ```\r","summary":"<p>this patch makes it possible to operate elementwise on a Number and an NArray (in that order)\r e.g.</p>","class_methods":[],"constructors":[],"instance_methods":[{"html_id":"%(other:MultiIndexable(U))forallU-instance-method","name":"%","doc":"Invokes `#%` element-wise between `self` and *other*, returning\r\nan `NArray` that contains the results.\r","summary":"<p>Invokes <code>#%</code> element-wise between <code>self</code> and <em>other</em>, returning\r an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/number.cr","line_number":5,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/patches/number.cr#L5"},"def":{"name":"%","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self % elem\nend"}},{"html_id":"&(other:MultiIndexable(U))forallU-instance-method","name":"&","doc":"Invokes `#&` element-wise between `self` and *other*, returning\r\nan `NArray` that contains the results.\r","summary":"<p>Invokes <code><a href=\"Number.html#&(other:MultiIndexable(U))forallU-instance-method\">#&</a></code> element-wise between <code>self</code> and <em>other</em>, returning\r an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/number.cr","line_number":5,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/patches/number.cr#L5"},"def":{"name":"&","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self & elem\nend"}},{"html_id":"&**(other:MultiIndexable(U))forallU-instance-method","name":"&**","doc":"Invokes `#&**` element-wise between `self` and *other*, returning\r\nan `NArray` that contains the results.\r","summary":"<p>Invokes <code><a href=\"Number.html#&**(other:MultiIndexable(U))forallU-instance-method\">#&**</a></code> element-wise between <code>self</code> and <em>other</em>, returning\r an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/number.cr","line_number":5,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/patches/number.cr#L5"},"def":{"name":"&**","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self &** elem\nend"}},{"html_id":"&+(other:MultiIndexable(U))forallU-instance-method","name":"&+","doc":"Invokes `#&+` element-wise between `self` and *other*, returning\r\nan `NArray` that contains the results.\r","summary":"<p>Invokes <code><a href=\"Number.html#&+(other:MultiIndexable(U))forallU-instance-method\">#&+</a></code> element-wise between <code>self</code> and <em>other</em>, returning\r an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/number.cr","line_number":5,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/patches/number.cr#L5"},"def":{"name":"&+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self &+ elem\nend"}},{"html_id":"&-(other:MultiIndexable(U))forallU-instance-method","name":"&-","doc":"Invokes `#&-` element-wise between `self` and *other*, returning\r\nan `NArray` that contains the results.\r","summary":"<p>Invokes <code><a href=\"Number.html#&-(other:MultiIndexable(U))forallU-instance-method\">#&-</a></code> element-wise between <code>self</code> and <em>other</em>, returning\r an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/number.cr","line_number":5,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/patches/number.cr#L5"},"def":{"name":"&-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self &- elem\nend"}},{"html_id":"*(other:MultiIndexable(U))forallU-instance-method","name":"*","doc":"Invokes `#*` element-wise between `self` and *other*, returning\r\nan `NArray` that contains the results.\r","summary":"<p>Invokes <code><a href=\"Number.html#*(other:MultiIndexable(U))forallU-instance-method\">#*</a></code> element-wise between <code>self</code> and <em>other</em>, returning\r an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/number.cr","line_number":5,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/patches/number.cr#L5"},"def":{"name":"*","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self * elem\nend"}},{"html_id":"**(other:MultiIndexable(U))forallU-instance-method","name":"**","doc":"Invokes `#**` element-wise between `self` and *other*, returning\r\nan `NArray` that contains the results.\r","summary":"<p>Invokes <code><a href=\"Number.html#**(other:MultiIndexable(U))forallU-instance-method\">#**</a></code> element-wise between <code>self</code> and <em>other</em>, returning\r an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/number.cr","line_number":5,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/patches/number.cr#L5"},"def":{"name":"**","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self ** elem\nend"}},{"html_id":"+(other:MultiIndexable(U))forallU-instance-method","name":"+","doc":"Invokes `#+` element-wise between `self` and *other*, returning\r\nan `NArray` that contains the results.\r","summary":"<p>Invokes <code><a href=\"Number.html#+(other:MultiIndexable(U))forallU-instance-method\">#+</a></code> element-wise between <code>self</code> and <em>other</em>, returning\r an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/number.cr","line_number":5,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/patches/number.cr#L5"},"def":{"name":"+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self + elem\nend"}},{"html_id":"-(other:MultiIndexable(U))forallU-instance-method","name":"-","doc":"Invokes `#-` element-wise between `self` and *other*, returning\r\nan `NArray` that contains the results.\r","summary":"<p>Invokes <code><a href=\"Number.html#-(other:MultiIndexable(U))forallU-instance-method\">#-</a></code> element-wise between <code>self</code> and <em>other</em>, returning\r an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/number.cr","line_number":5,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/patches/number.cr#L5"},"def":{"name":"-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self - elem\nend"}},{"html_id":"/(other:MultiIndexable(U))forallU-instance-method","name":"/","doc":"Invokes `#/` element-wise between `self` and *other*, returning\r\nan `NArray` that contains the results.\r","summary":"<p>Invokes <code><a href=\"Number.html#/(other:MultiIndexable(U))forallU-instance-method\">#/</a></code> element-wise between <code>self</code> and <em>other</em>, returning\r an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/number.cr","line_number":5,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/patches/number.cr#L5"},"def":{"name":"/","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self / elem\nend"}},{"html_id":"//(other:MultiIndexable(U))forallU-instance-method","name":"//","doc":"Invokes `#//` element-wise between `self` and *other*, returning\r\nan `NArray` that contains the results.\r","summary":"<p>Invokes <code><a href=\"Number.html#//(other:MultiIndexable(U))forallU-instance-method\">#//</a></code> element-wise between <code>self</code> and <em>other</em>, returning\r an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/number.cr","line_number":5,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/patches/number.cr#L5"},"def":{"name":"//","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self // elem\nend"}},{"html_id":"<(other:MultiIndexable(U))forallU-instance-method","name":"<","doc":"Invokes `#<` element-wise between `self` and *other*, returning\r\nan `NArray` that contains the results.\r","summary":"<p>Invokes <code><a href=\"Number.html#%3C(other:MultiIndexable(U))forallU-instance-method\">#<</a></code> element-wise between <code>self</code> and <em>other</em>, returning\r an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/number.cr","line_number":5,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/patches/number.cr#L5"},"def":{"name":"<","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self < elem\nend"}},{"html_id":"<=(other:MultiIndexable(U))forallU-instance-method","name":"<=","doc":"Invokes `#<=` element-wise between `self` and *other*, returning\r\nan `NArray` that contains the results.\r","summary":"<p>Invokes <code><a href=\"Number.html#%3C=(other:MultiIndexable(U))forallU-instance-method\">#<=</a></code> element-wise between <code>self</code> and <em>other</em>, returning\r an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/number.cr","line_number":5,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/patches/number.cr#L5"},"def":{"name":"<=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self <= elem\nend"}},{"html_id":">(other:MultiIndexable(U))forallU-instance-method","name":">","doc":"Invokes `#>` element-wise between `self` and *other*, returning\r\nan `NArray` that contains the results.\r","summary":"<p>Invokes <code><a href=\"Number.html#%3E(other:MultiIndexable(U))forallU-instance-method\">#></a></code> element-wise between <code>self</code> and <em>other</em>, returning\r an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/number.cr","line_number":5,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/patches/number.cr#L5"},"def":{"name":">","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self > elem\nend"}},{"html_id":">=(other:MultiIndexable(U))forallU-instance-method","name":">=","doc":"Invokes `#>=` element-wise between `self` and *other*, returning\r\nan `NArray` that contains the results.\r","summary":"<p>Invokes <code><a href=\"Number.html#%3E=(other:MultiIndexable(U))forallU-instance-method\">#>=</a></code> element-wise between <code>self</code> and <em>other</em>, returning\r an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/number.cr","line_number":5,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/patches/number.cr#L5"},"def":{"name":">=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self >= elem\nend"}},{"html_id":"^(other:MultiIndexable(U))forallU-instance-method","name":"^","doc":"Invokes `#^` element-wise between `self` and *other*, returning\r\nan `NArray` that contains the results.\r","summary":"<p>Invokes <code><a href=\"Number.html#%5E(other:MultiIndexable(U))forallU-instance-method\">#^</a></code> element-wise between <code>self</code> and <em>other</em>, returning\r an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/number.cr","line_number":5,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/patches/number.cr#L5"},"def":{"name":"^","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self ^ elem\nend"}},{"html_id":"eq(other:MultiIndexable(U)):MultiIndexable(Bool)forallU-instance-method","name":"eq","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) : MultiIndexable(Bool) forall U","args_html":"(other : MultiIndexable(U)) : MultiIndexable(Bool) forall U","location":{"filename":"src/patches/number.cr","line_number":17,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/patches/number.cr#L17"},"def":{"name":"eq","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"MultiIndexable(Bool)","visibility":"Public","body":"other.map do |elem|\n  self == elem\nend"}},{"html_id":"|(other:MultiIndexable(U))forallU-instance-method","name":"|","doc":"Invokes `#|` element-wise between `self` and *other*, returning\r\nan `NArray` that contains the results.\r","summary":"<p>Invokes <code><a href=\"Number.html#%7C(other:MultiIndexable(U))forallU-instance-method\">#|</a></code> element-wise between <code>self</code> and <em>other</em>, returning\r an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/number.cr","line_number":5,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/patches/number.cr#L5"},"def":{"name":"|","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self | elem\nend"}}],"macros":[],"types":[]},{"html_id":"ph-core/Phase","path":"Phase.html","kind":"module","full_name":"Phase","name":"Phase","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/cartesian_product.cr","line_number":3,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/cartesian_product.cr#L3"},{"filename":"src/coord_util.cr","line_number":1,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/coord_util.cr#L1"},{"filename":"src/exceptions/exceptions.cr","line_number":1,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/exceptions/exceptions.cr#L1"},{"filename":"src/formatter/formatter.cr","line_number":6,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/formatter.cr#L6"},{"filename":"src/index_region.cr","line_number":5,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/index_region.cr#L5"},{"filename":"src/iterators/chunk_iterator.cr","line_number":3,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/chunk_iterator.cr#L3"},{"filename":"src/iterators/chunk_region_iterator.cr","line_number":3,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/chunk_region_iterator.cr#L3"},{"filename":"src/iterators/colex_iterator.cr","line_number":3,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/colex_iterator.cr#L3"},{"filename":"src/iterators/coord_iterator.cr","line_number":1,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/coord_iterator.cr#L1"},{"filename":"src/iterators/elem_coord_iterator.cr","line_number":3,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/elem_coord_iterator.cr#L3"},{"filename":"src/iterators/elem_iterator.cr","line_number":3,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/elem_iterator.cr#L3"},{"filename":"src/iterators/general_coord_iterator.cr","line_number":3,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/general_coord_iterator.cr#L3"},{"filename":"src/iterators/lex_iterator.cr","line_number":3,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/lex_iterator.cr#L3"},{"filename":"src/iterators/region_iterator.cr","line_number":1,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/region_iterator.cr#L1"},{"filename":"src/multi_indexable.cr","line_number":1,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L1"},{"filename":"src/multi_writable.cr","line_number":1,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_writable.cr#L1"},{"filename":"src/n_array.cr","line_number":7,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L7"},{"filename":"src/n_array/buffer_util.cr","line_number":5,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array/buffer_util.cr#L5"},{"filename":"src/ph-core.cr","line_number":35,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/ph-core.cr#L35"},{"filename":"src/proc_view.cr","line_number":1,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/proc_view.cr#L1"},{"filename":"src/readonly_view.cr","line_number":1,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/readonly_view.cr#L1"},{"filename":"src/shape_util.cr","line_number":1,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/shape_util.cr#L1"},{"filename":"src/type_aliases.cr","line_number":1,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/type_aliases.cr#L1"},{"filename":"src/view.cr","line_number":1,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view.cr#L1"},{"filename":"src/view_util/transforms.cr","line_number":1,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view_util/transforms.cr#L1"}],"repository_name":"ph-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.1.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"TODO: Write documentation for `Phase::Core`","summary":"<p><span class=\"flag orange\">TODO</span>  Write documentation for <code>Phase::Core</code></p>","class_methods":[{"html_id":"do_stuff(coord:Array(Int32),cp:CartesianProduct)-class-method","name":"do_stuff","doc":null,"summary":null,"abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Array(Int32)"},{"name":"cp","doc":null,"default_value":"","external_name":"cp","restriction":"CartesianProduct"}],"args_string":"(coord : Array(Int32), cp : CartesianProduct)","args_html":"(coord : Array(Int32), cp : <a href=\"Phase/CartesianProduct.html\">CartesianProduct</a>)","location":{"filename":"src/cartesian_product.cr","line_number":100,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/cartesian_product.cr#L100"},"def":{"name":"do_stuff","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Array(Int32)"},{"name":"cp","doc":null,"default_value":"","external_name":"cp","restriction":"CartesianProduct"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"lists = cp.lists_typed\none = 0\ntwo = 1\ncoord = [one, two]\nvals = lists.map_with_index do |list, dim|\n  list[coord[dim]]\nend\nputs(vals)\n"}},{"html_id":"do_stuff2(coord:Array(Int32),lists)-class-method","name":"do_stuff2","doc":null,"summary":null,"abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Array(Int32)"},{"name":"lists","doc":null,"default_value":"","external_name":"lists","restriction":""}],"args_string":"(coord : Array(Int32), lists)","args_html":"(coord : Array(Int32), lists)","location":{"filename":"src/cartesian_product.cr","line_number":113,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/cartesian_product.cr#L113"},"def":{"name":"do_stuff2","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Array(Int32)"},{"name":"lists","doc":null,"default_value":"","external_name":"lists","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"vals = lists.map_with_index do |list, dim|\n  list[coord[dim]]\nend\nputs(vals)\n"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"ph-core/Phase/CartesianProduct","path":"Phase/CartesianProduct.html","kind":"class","full_name":"Phase::CartesianProduct(*U)","name":"CartesianProduct","abstract":false,"superclass":{"html_id":"ph-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"ph-core/Phase/MultiIndexable","kind":"module","full_name":"Phase::MultiIndexable","name":"MultiIndexable"},{"html_id":"ph-core/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"ph-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"ph-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cartesian_product.cr","line_number":6,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/cartesian_product.cr#L6"}],"repository_name":"ph-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"ph-core/Phase/MultiIndexable","kind":"module","full_name":"Phase::MultiIndexable","name":"MultiIndexable"}],"extended_modules":[],"subclasses":[{"html_id":"ph-core/Phase/SpecificCartesianProduct","kind":"class","full_name":"Phase::SpecificCartesianProduct","name":"SpecificCartesianProduct"}],"including_types":[],"namespace":{"html_id":"ph-core/Phase","kind":"module","full_name":"Phase","name":"Phase"},"doc":"class CartesianProduct(*U) # < MultiIndexable(Tuple(*U))","summary":"<p>class CartesianProduct(<em>U) # &lt; MultiIndexable(Tuple(</em>U))</p>","class_methods":[{"html_id":"make(lists:T)forallT-class-method","name":"make","doc":null,"summary":null,"abstract":false,"args":[{"name":"lists","doc":null,"default_value":"","external_name":"lists","restriction":"T"}],"args_string":"(lists : T) forall T","args_html":"(lists : T) forall T","location":{"filename":"src/cartesian_product.cr","line_number":12,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/cartesian_product.cr#L12"},"def":{"name":"make","args":[{"name":"lists","doc":null,"default_value":"","external_name":"lists","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{% if true %}\n                # We assume T is a Tuple(Array(A), Array(B), ...) etc\n                # and want to construct a CartesianProduct(A,B,...)\n                CartesianProduct( \n                    {% for type in T.type_vars %} {{ type }}.type_vars[0], {% end %} \n                    ).new(lists)\n            {% end %}"}}],"constructors":[{"html_id":"new(lists)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"lists","doc":null,"default_value":"","external_name":"lists","restriction":""}],"args_string":"(lists)","args_html":"(lists)","location":{"filename":"src/cartesian_product.cr","line_number":22,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/cartesian_product.cr#L22"},"def":{"name":"new","args":[{"name":"lists","doc":null,"default_value":"","external_name":"lists","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = CartesianProduct(*U).allocate\n_.initialize(lists)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"get_first(arr)-instance-method","name":"get_first","doc":null,"summary":null,"abstract":false,"args":[{"name":"arr","doc":null,"default_value":"","external_name":"arr","restriction":""}],"args_string":"(arr)","args_html":"(arr)","location":{"filename":"src/cartesian_product.cr","line_number":71,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/cartesian_product.cr#L71"},"def":{"name":"get_first","args":[{"name":"arr","doc":null,"default_value":"","external_name":"arr","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"one = 0\ntwo = 1\ncoord = [one, two]\nlists = lists_typed\nvals = lists.map_with_index do |list, dim|\n  list[coord[dim]]\nend\nputs(vals)\n"}},{"html_id":"lists_typed-instance-method","name":"lists_typed","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/cartesian_product.cr","line_number":27,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/cartesian_product.cr#L27"},"def":{"name":"lists_typed","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{% if true %}\n            @lists.as(Pointer(Tuple( {% for type in U %} Array({{ type }}), {% end %} ))).value\n            {% end %}"}},{"html_id":"shape:Array-instance-method","name":"shape","doc":"I have a suspicion it's because I redefined lists","summary":"<p>I have a suspicion it's because I redefined lists</p>","abstract":false,"args":[],"args_string":" : Array","args_html":" : Array","location":{"filename":"src/cartesian_product.cr","line_number":37,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/cartesian_product.cr#L37"},"def":{"name":"shape","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array","visibility":"Public","body":"@shape.dup"}},{"html_id":"unsafe_fetch_chunk(region:IndexRegion)-instance-method","name":"unsafe_fetch_chunk","doc":"Copies the elements in `region` to a new `{{@type}}`, assuming that `region` is in canonical form and in-bounds for this `{{@type}}`.\nFor full specification of canonical form see `RegionHelpers` documentation. TODO: make this actually happen","summary":"<p>Copies the elements in <code>region</code> to a new <code>{{@type}}</code>, assuming that <code>region</code> is in canonical form and in-bounds for this <code>{{@type}}</code>.</p>","abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"IndexRegion"}],"args_string":"(region : IndexRegion)","args_html":"(region : <a href=\"../Phase/IndexRegion.html\">IndexRegion</a>)","location":{"filename":"src/cartesian_product.cr","line_number":41,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/cartesian_product.cr#L41"},"def":{"name":"unsafe_fetch_chunk","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"IndexRegion"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Hi, not currently working\""}},{"html_id":"unsafe_fetch_element(coord:Coord):U-instance-method","name":"unsafe_fetch_element","doc":"Retrieves the element specified by `coord`, assuming that `coord` is in canonical form and in-bounds for this `{{@type}}`.\nFor full specification of canonical form see `RegionHelpers` documentation. TODO: make this actually happen","summary":"<p>Retrieves the element specified by <code>coord</code>, assuming that <code>coord</code> is in canonical form and in-bounds for this <code>{{@type}}</code>.</p>","abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Coord"}],"args_string":"(coord : Coord) : U","args_html":"(coord : <a href=\"../Phase/Coord.html\">Coord</a>) : U","location":{"filename":"src/cartesian_product.cr","line_number":47,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/cartesian_product.cr#L47"},"def":{"name":"unsafe_fetch_element","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Coord"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"U","visibility":"Public","body":"{% if true %}\n\n\n            lists = @lists.as(Pointer(Tuple( {% for type in U %} Array({{ type }}), {% end %} ))).value\n            vals = lists.map_with_index do |list, dim|\n                list[coord[dim]]\n            end\n            puts vals\n\n            # vals = listsb.map_with_index do |list, dim|\n            #     list[coord[dim]]\n            # end\n            # puts vals\n\n            {% end %}\n{'b', 1}\n"}}],"macros":[],"types":[]},{"html_id":"ph-core/Phase/ChunkAndRegionIterator","path":"Phase/ChunkAndRegionIterator.html","kind":"class","full_name":"Phase::ChunkAndRegionIterator(E, I)","name":"ChunkAndRegionIterator","abstract":false,"superclass":{"html_id":"ph-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"ph-core/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"ph-core/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"ph-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"ph-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/iterators/chunk_region_iterator.cr","line_number":4,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/chunk_region_iterator.cr#L4"}],"repository_name":"ph-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"ph-core/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"ph-core/Phase","kind":"module","full_name":"Phase","name":"Phase"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"html_id":"new(src,chunk_shape,strides=nil,degeneracy=nil,fringe_behaviour:FB=FB::DISCARD,&)-class-method","name":"new","doc":"TODO: change from classes to instances of iter","summary":"<p><span class=\"flag orange\">TODO</span>  change from classes to instances of iter</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"chunk_shape","doc":null,"default_value":"","external_name":"chunk_shape","restriction":""},{"name":"strides","doc":null,"default_value":"nil","external_name":"strides","restriction":""},{"name":"degeneracy","doc":null,"default_value":"nil","external_name":"degeneracy","restriction":""},{"name":"fringe_behaviour","doc":null,"default_value":"FB::DISCARD","external_name":"fringe_behaviour","restriction":"FB"}],"args_string":"(src, chunk_shape, strides = nil, degeneracy = nil, fringe_behaviour : FB = FB::DISCARD, &)","args_html":"(src, chunk_shape, strides = <span class=\"n\">nil</span>, degeneracy = <span class=\"n\">nil</span>, fringe_behaviour : <a href=\"../Phase/ChunkAndRegionIterator/FB.html\">FB</a> = <span class=\"t\">FB</span><span class=\"t\">::</span><span class=\"t\">DISCARD</span>, &)","location":{"filename":"src/iterators/chunk_region_iterator.cr","line_number":15,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/chunk_region_iterator.cr#L15"},"def":{"name":"new","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"chunk_shape","doc":null,"default_value":"","external_name":"chunk_shape","restriction":""},{"name":"strides","doc":null,"default_value":"nil","external_name":"strides","restriction":""},{"name":"degeneracy","doc":null,"default_value":"nil","external_name":"degeneracy","restriction":""},{"name":"fringe_behaviour","doc":null,"default_value":"FB::DISCARD","external_name":"fringe_behaviour","restriction":"FB"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"new(src, RegionIterator.new(src.shape, chunk_shape, strides, degeneracy, fringe_behaviour) do |region|\n  yield region\nend)"}},{"html_id":"new(src:MultiIndexable(E),region_iter:RegionIterator(I))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"MultiIndexable(E)"},{"name":"region_iter","doc":null,"default_value":"","external_name":"region_iter","restriction":"RegionIterator(I)"}],"args_string":"(src : MultiIndexable(E), region_iter : RegionIterator(I))","args_html":"(src : <a href=\"../Phase/MultiIndexable.html\">MultiIndexable</a>(E), region_iter : <a href=\"../Phase/RegionIterator.html\">RegionIterator</a>(I))","location":{"filename":"src/iterators/chunk_region_iterator.cr","line_number":25,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/chunk_region_iterator.cr#L25"},"def":{"name":"new","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"MultiIndexable(E)"},{"name":"region_iter","doc":null,"default_value":"","external_name":"region_iter","restriction":"RegionIterator(I)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = ChunkAndRegionIterator(E, I).allocate\n_.initialize(src, region_iter)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(src,chunk_shape,strides=nil,degeneracy=nil,fringe_behaviour:FB=FB::DISCARD)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"chunk_shape","doc":null,"default_value":"","external_name":"chunk_shape","restriction":""},{"name":"strides","doc":null,"default_value":"nil","external_name":"strides","restriction":""},{"name":"degeneracy","doc":null,"default_value":"nil","external_name":"degeneracy","restriction":""},{"name":"fringe_behaviour","doc":null,"default_value":"FB::DISCARD","external_name":"fringe_behaviour","restriction":"FB"}],"args_string":"(src, chunk_shape, strides = nil, degeneracy = nil, fringe_behaviour : FB = FB::DISCARD)","args_html":"(src, chunk_shape, strides = <span class=\"n\">nil</span>, degeneracy = <span class=\"n\">nil</span>, fringe_behaviour : <a href=\"../Phase/ChunkAndRegionIterator/FB.html\">FB</a> = <span class=\"t\">FB</span><span class=\"t\">::</span><span class=\"t\">DISCARD</span>)","location":{"filename":"src/iterators/chunk_region_iterator.cr","line_number":20,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/chunk_region_iterator.cr#L20"},"def":{"name":"new","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"chunk_shape","doc":null,"default_value":"","external_name":"chunk_shape","restriction":""},{"name":"strides","doc":null,"default_value":"nil","external_name":"strides","restriction":""},{"name":"degeneracy","doc":null,"default_value":"nil","external_name":"degeneracy","restriction":""},{"name":"fringe_behaviour","doc":null,"default_value":"FB::DISCARD","external_name":"fringe_behaviour","restriction":"FB"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(src, RegionIterator.new(src.shape, chunk_shape, strides, degeneracy, fringe_behaviour))"}}],"instance_methods":[{"html_id":"next-instance-method","name":"next","doc":"Returns the next element in this iterator, or `Iterator::Stop::INSTANCE` if there\nare no more elements.","summary":"<p>Returns the next element in this iterator, or <code>Iterator::Stop::INSTANCE</code> if there are no more elements.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/iterators/chunk_region_iterator.cr","line_number":28,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/chunk_region_iterator.cr#L28"},"def":{"name":"next","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case region = @region_iter.next\nwhen Stop\n  return stop\nelse\n  {@src.unsafe_fetch_chunk(region, drop: true), region}\nend"}},{"html_id":"next_value-instance-method","name":"next_value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/iterators/chunk_region_iterator.cr","line_number":37,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/chunk_region_iterator.cr#L37"},"def":{"name":"next_value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case region = @region_iter.next\nwhen Stop\n  return stop\nelse\n  @src.unsafe_fetch_chunk(region)\nend"}},{"html_id":"reset-instance-method","name":"reset","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/iterators/chunk_region_iterator.cr","line_number":46,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/chunk_region_iterator.cr#L46"},"def":{"name":"reset","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@region_iter.reset"}}],"macros":[],"types":[{"html_id":"ph-core/Phase/ChunkAndRegionIterator/FB","path":"Phase/ChunkAndRegionIterator/FB.html","kind":"alias","full_name":"Phase::ChunkAndRegionIterator::FB","name":"FB","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/iterators/chunk_region_iterator.cr","line_number":9,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/chunk_region_iterator.cr#L9"}],"repository_name":"ph-core","program":false,"enum":false,"alias":true,"aliased":"Phase::RegionIterator::FringeBehaviour","aliased_html":"<a href=\"../../Phase/RegionIterator/FringeBehaviour.html\">Phase::RegionIterator::FringeBehaviour</a>","const":false,"constants":[{"id":"ALL_START_POINTS","name":"ALL_START_POINTS","value":"2","doc":null,"summary":null},{"id":"COVER","name":"COVER","value":"1","doc":null,"summary":null},{"id":"DISCARD","name":"DISCARD","value":"0","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"ph-core/Phase/ChunkAndRegionIterator","kind":"class","full_name":"Phase::ChunkAndRegionIterator(E, I)","name":"ChunkAndRegionIterator"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"ph-core/Phase/ChunkIterator","path":"Phase/ChunkIterator.html","kind":"class","full_name":"Phase::ChunkIterator(E, I)","name":"ChunkIterator","abstract":false,"superclass":{"html_id":"ph-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"ph-core/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"ph-core/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"ph-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"ph-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/iterators/chunk_iterator.cr","line_number":4,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/chunk_iterator.cr#L4"}],"repository_name":"ph-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"ph-core/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"ph-core/Phase","kind":"module","full_name":"Phase","name":"Phase"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"html_id":"new(src,chunk_shape,strides=nil,degeneracy=nil,fringe_behaviour:FB=FB::DISCARD)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"chunk_shape","doc":null,"default_value":"","external_name":"chunk_shape","restriction":""},{"name":"strides","doc":null,"default_value":"nil","external_name":"strides","restriction":""},{"name":"degeneracy","doc":null,"default_value":"nil","external_name":"degeneracy","restriction":""},{"name":"fringe_behaviour","doc":null,"default_value":"FB::DISCARD","external_name":"fringe_behaviour","restriction":"FB"}],"args_string":"(src, chunk_shape, strides = nil, degeneracy = nil, fringe_behaviour : FB = FB::DISCARD)","args_html":"(src, chunk_shape, strides = <span class=\"n\">nil</span>, degeneracy = <span class=\"n\">nil</span>, fringe_behaviour : <a href=\"../Phase/ChunkIterator/FB.html\">FB</a> = <span class=\"t\">FB</span><span class=\"t\">::</span><span class=\"t\">DISCARD</span>)","location":{"filename":"src/iterators/chunk_iterator.cr","line_number":19,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/chunk_iterator.cr#L19"},"def":{"name":"new","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"chunk_shape","doc":null,"default_value":"","external_name":"chunk_shape","restriction":""},{"name":"strides","doc":null,"default_value":"nil","external_name":"strides","restriction":""},{"name":"degeneracy","doc":null,"default_value":"nil","external_name":"degeneracy","restriction":""},{"name":"fringe_behaviour","doc":null,"default_value":"FB::DISCARD","external_name":"fringe_behaviour","restriction":"FB"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(ChunkAndRegionIterator.new(src, chunk_shape, strides, degeneracy, fringe_behaviour))"}},{"html_id":"new(chunk_and_region_iterator:ChunkAndRegionIterator(E,I))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"chunk_and_region_iterator","doc":null,"default_value":"","external_name":"chunk_and_region_iterator","restriction":"ChunkAndRegionIterator(E, I)"}],"args_string":"(chunk_and_region_iterator : ChunkAndRegionIterator(E, I))","args_html":"(chunk_and_region_iterator : <a href=\"../Phase/ChunkAndRegionIterator.html\">ChunkAndRegionIterator</a>(E, I))","location":{"filename":"src/iterators/chunk_iterator.cr","line_number":11,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/chunk_iterator.cr#L11"},"def":{"name":"new","args":[{"name":"chunk_and_region_iterator","doc":null,"default_value":"","external_name":"chunk_and_region_iterator","restriction":"ChunkAndRegionIterator(E, I)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = ChunkIterator(E, I).allocate\n_.initialize(chunk_and_region_iterator)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(src,chunk_shape,strides=nil,degeneracy=nil,fringe_behaviour:FB=FB::DISCARD,&)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"chunk_shape","doc":null,"default_value":"","external_name":"chunk_shape","restriction":""},{"name":"strides","doc":null,"default_value":"nil","external_name":"strides","restriction":""},{"name":"degeneracy","doc":null,"default_value":"nil","external_name":"degeneracy","restriction":""},{"name":"fringe_behaviour","doc":null,"default_value":"FB::DISCARD","external_name":"fringe_behaviour","restriction":"FB"}],"args_string":"(src, chunk_shape, strides = nil, degeneracy = nil, fringe_behaviour : FB = FB::DISCARD, &)","args_html":"(src, chunk_shape, strides = <span class=\"n\">nil</span>, degeneracy = <span class=\"n\">nil</span>, fringe_behaviour : <a href=\"../Phase/ChunkIterator/FB.html\">FB</a> = <span class=\"t\">FB</span><span class=\"t\">::</span><span class=\"t\">DISCARD</span>, &)","location":{"filename":"src/iterators/chunk_iterator.cr","line_number":14,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/chunk_iterator.cr#L14"},"def":{"name":"new","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"chunk_shape","doc":null,"default_value":"","external_name":"chunk_shape","restriction":""},{"name":"strides","doc":null,"default_value":"nil","external_name":"strides","restriction":""},{"name":"degeneracy","doc":null,"default_value":"nil","external_name":"degeneracy","restriction":""},{"name":"fringe_behaviour","doc":null,"default_value":"FB::DISCARD","external_name":"fringe_behaviour","restriction":"FB"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"new(ChunkAndRegionIterator.new(src, chunk_shape, strides, degeneracy, fringe_behaviour) do |region|\n  yield region\nend)"}}],"instance_methods":[{"html_id":"next-instance-method","name":"next","doc":"Returns the next element in this iterator, or `Iterator::Stop::INSTANCE` if there\nare no more elements.","summary":"<p>Returns the next element in this iterator, or <code>Iterator::Stop::INSTANCE</code> if there are no more elements.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/iterators/chunk_iterator.cr","line_number":24,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/chunk_iterator.cr#L24"},"def":{"name":"next","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@chunk_and_region_iterator.next_value"}},{"html_id":"reset-instance-method","name":"reset","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/iterators/chunk_iterator.cr","line_number":28,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/chunk_iterator.cr#L28"},"def":{"name":"reset","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@chunk_and_region_iterator.reset"}}],"macros":[],"types":[{"html_id":"ph-core/Phase/ChunkIterator/FB","path":"Phase/ChunkIterator/FB.html","kind":"alias","full_name":"Phase::ChunkIterator::FB","name":"FB","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/iterators/chunk_iterator.cr","line_number":7,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/chunk_iterator.cr#L7"}],"repository_name":"ph-core","program":false,"enum":false,"alias":true,"aliased":"Phase::RegionIterator::FringeBehaviour","aliased_html":"<a href=\"../../Phase/RegionIterator/FringeBehaviour.html\">Phase::RegionIterator::FringeBehaviour</a>","const":false,"constants":[{"id":"ALL_START_POINTS","name":"ALL_START_POINTS","value":"2","doc":null,"summary":null},{"id":"COVER","name":"COVER","value":"1","doc":null,"summary":null},{"id":"DISCARD","name":"DISCARD","value":"0","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"ph-core/Phase/ChunkIterator","kind":"class","full_name":"Phase::ChunkIterator(E, I)","name":"ChunkIterator"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"ph-core/Phase/ColexIterator","path":"Phase/ColexIterator.html","kind":"class","full_name":"Phase::ColexIterator(T)","name":"ColexIterator","abstract":false,"superclass":{"html_id":"ph-core/Phase/CoordIterator","kind":"class","full_name":"Phase::CoordIterator","name":"CoordIterator"},"ancestors":[{"html_id":"ph-core/Phase/CoordIterator","kind":"class","full_name":"Phase::CoordIterator","name":"CoordIterator"},{"html_id":"ph-core/Phase/GeneralCoordIterator","kind":"class","full_name":"Phase::GeneralCoordIterator","name":"GeneralCoordIterator"},{"html_id":"ph-core/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"ph-core/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"ph-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"ph-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/iterators/colex_iterator.cr","line_number":4,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/colex_iterator.cr#L4"}],"repository_name":"ph-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"ph-core/Phase","kind":"module","full_name":"Phase","name":"Phase"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"html_id":"new(region:IndexRegion(T))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"IndexRegion(T)"}],"args_string":"(region : IndexRegion(T))","args_html":"(region : <a href=\"../Phase/IndexRegion.html\">IndexRegion</a>(T))","location":{"filename":"src/iterators/colex_iterator.cr","line_number":6,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/colex_iterator.cr#L6"},"def":{"name":"new","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"IndexRegion(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = ColexIterator(T).allocate\n_.initialize(region)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(region_literal)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"region_literal","doc":null,"default_value":"","external_name":"region_literal","restriction":""}],"args_string":"(region_literal)","args_html":"(region_literal)","location":{"filename":"src/iterators/colex_iterator.cr","line_number":10,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/colex_iterator.cr#L10"},"def":{"name":"new","args":[{"name":"region_literal","doc":null,"default_value":"","external_name":"region_literal","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = ColexIterator(T).allocate\n_.initialize(region_literal)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"advance_coord-instance-method","name":"advance_coord","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/iterators/colex_iterator.cr","line_number":14,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/colex_iterator.cr#L14"},"def":{"name":"advance_coord","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@coord.each_index do |i|\n  if @coord[i] == @last[i]\n    @coord[i] = @first[i]\n    if i == (@coord.size - 1)\n      return stop\n    end\n  else\n    __temp_30 = i\n    @coord[__temp_30] = @coord[__temp_30] + @step[i]\n    break\n  end\nend\n@coord\n"}},{"html_id":"clone-instance-method","name":"clone","doc":"Returns a copy of `self` with all instance variables cloned.","summary":"<p>Returns a copy of <code>self</code> with all instance variables cloned.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/iterators/colex_iterator.cr","line_number":5,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/colex_iterator.cr#L5"},"def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{% if @type < Reference && (!@type.instance_vars.map(&.type).all? do |t|\n  ((((t == ::Bool) || (t == ::Char)) || (t == ::Symbol)) || (t == ::String)) || t < ::Number::Primitive\nend) %}\n        exec_recursive_clone do |hash|\n          clone = {{ @type }}.allocate\n          hash[object_id] = clone.object_id\n          clone.initialize_copy(self)\n          GC.add_finalizer(clone) if clone.responds_to?(:finalize)\n          clone\n        end\n      {% else %}\n        clone = {{ @type }}.allocate\n        clone.initialize_copy(self)\n        GC.add_finalizer(clone) if clone.responds_to?(:finalize)\n        clone\n      {% end %}"}}],"macros":[],"types":[]},{"html_id":"ph-core/Phase/ComposedTransform","path":"Phase/ComposedTransform.html","kind":"struct","full_name":"Phase::ComposedTransform","name":"ComposedTransform","abstract":false,"superclass":{"html_id":"ph-core/Phase/CoordTransform","kind":"struct","full_name":"Phase::CoordTransform","name":"CoordTransform"},"ancestors":[{"html_id":"ph-core/Phase/CoordTransform","kind":"struct","full_name":"Phase::CoordTransform","name":"CoordTransform"},{"html_id":"ph-core/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"ph-core/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"ph-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/view_util/transforms.cr","line_number":26,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view_util/transforms.cr#L26"}],"repository_name":"ph-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"ph-core/Phase","kind":"module","full_name":"Phase","name":"Phase"},"doc":"probably done for now","summary":"<p>probably done for now</p>","class_methods":[{"html_id":"[](*transforms)-class-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"transforms","doc":null,"default_value":"","external_name":"transforms","restriction":""}],"args_string":"(*transforms)","args_html":"(*transforms)","location":{"filename":"src/view_util/transforms.cr","line_number":32,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view_util/transforms.cr#L32"},"def":{"name":"[]","args":[{"name":"transforms","doc":null,"default_value":"","external_name":"transforms","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new((transforms.map do |__arg0|\n  __arg0.as(CoordTransform)\nend).to_a)"}}],"constructors":[{"html_id":"new(transforms=[]ofCoordTransform)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"transforms","doc":null,"default_value":"[] of CoordTransform","external_name":"transforms","restriction":""}],"args_string":"(transforms = [] of CoordTransform)","args_html":"(transforms = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">CoordTransform</span>)","location":{"filename":"src/view_util/transforms.cr","line_number":29,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view_util/transforms.cr#L29"},"def":{"name":"new","args":[{"name":"transforms","doc":null,"default_value":"[] of CoordTransform","external_name":"transforms","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(transforms)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"apply(coord:Array(Int32)):Array(Int32)-instance-method","name":"apply","doc":"TODO: is this in-place? Should it not be?","summary":"<p><span class=\"flag orange\">TODO</span>  is this in-place? Should it not be?</p>","abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Array(Int32)"}],"args_string":"(coord : Array(Int32)) : Array(Int32)","args_html":"(coord : Array(Int32)) : Array(Int32)","location":{"filename":"src/view_util/transforms.cr","line_number":73,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view_util/transforms.cr#L73"},"def":{"name":"apply","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Array(Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"@transforms.reduce(coord) do |coord, trans|\n  trans.apply(coord)\nend"}},{"html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/view_util/transforms.cr","line_number":36,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view_util/transforms.cr#L36"},"def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ComposedTransform.new(@transforms.dup)"}},{"html_id":"compose(t:CoordTransform):ComposedTransform-instance-method","name":"compose","doc":null,"summary":null,"abstract":false,"args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"CoordTransform"}],"args_string":"(t : CoordTransform) : ComposedTransform","args_html":"(t : <a href=\"../Phase/CoordTransform.html\">CoordTransform</a>) : <a href=\"../Phase/ComposedTransform.html\">ComposedTransform</a>","location":{"filename":"src/view_util/transforms.cr","line_number":68,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view_util/transforms.cr#L68"},"def":{"name":"compose","args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"CoordTransform"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ComposedTransform","visibility":"Public","body":"clone.compose!(t)"}},{"html_id":"compose!(t:ComposedTransform)-instance-method","name":"compose!","doc":null,"summary":null,"abstract":false,"args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"ComposedTransform"}],"args_string":"(t : ComposedTransform)","args_html":"(t : <a href=\"../Phase/ComposedTransform.html\">ComposedTransform</a>)","location":{"filename":"src/view_util/transforms.cr","line_number":64,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view_util/transforms.cr#L64"},"def":{"name":"compose!","args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"ComposedTransform"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@transforms = t.transforms + @transforms"}},{"html_id":"compose!(t:CoordTransform)-instance-method","name":"compose!","doc":null,"summary":null,"abstract":false,"args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"CoordTransform"}],"args_string":"(t : CoordTransform)","args_html":"(t : <a href=\"../Phase/CoordTransform.html\">CoordTransform</a>)","location":{"filename":"src/view_util/transforms.cr","line_number":41,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view_util/transforms.cr#L41"},"def":{"name":"compose!","args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"CoordTransform"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@transforms.unshift(t)"}},{"html_id":"transforms-instance-method","name":"transforms","doc":"TODO: see clone","summary":"<p><span class=\"flag orange\">TODO</span>  see clone</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/view_util/transforms.cr","line_number":79,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view_util/transforms.cr#L79"},"def":{"name":"transforms","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@transforms.dup"}}],"macros":[],"types":[]},{"html_id":"ph-core/Phase/Coord","path":"Phase/Coord.html","kind":"alias","full_name":"Phase::Coord","name":"Coord","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/type_aliases.cr","line_number":11,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/type_aliases.cr#L11"}],"repository_name":"ph-core","program":false,"enum":false,"alias":true,"aliased":"Indexable(T)","aliased_html":"Indexable(T)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"ph-core/Phase","kind":"module","full_name":"Phase","name":"Phase"},"doc":"Should be used for return types and type restriction. This will always be\ndefined as loosely as possible","summary":"<p>Should be used for return types and type restriction.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"ph-core/Phase/CoordIterator","path":"Phase/CoordIterator.html","kind":"class","full_name":"Phase::CoordIterator(T)","name":"CoordIterator","abstract":true,"superclass":{"html_id":"ph-core/Phase/GeneralCoordIterator","kind":"class","full_name":"Phase::GeneralCoordIterator","name":"GeneralCoordIterator"},"ancestors":[{"html_id":"ph-core/Phase/GeneralCoordIterator","kind":"class","full_name":"Phase::GeneralCoordIterator","name":"GeneralCoordIterator"},{"html_id":"ph-core/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"ph-core/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"ph-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"ph-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/iterators/coord_iterator.cr","line_number":4,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/coord_iterator.cr#L4"}],"repository_name":"ph-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"ph-core/Phase/ColexIterator","kind":"class","full_name":"Phase::ColexIterator(T)","name":"ColexIterator"},{"html_id":"ph-core/Phase/LexIterator","kind":"class","full_name":"Phase::LexIterator(T)","name":"LexIterator"},{"html_id":"ph-core/Phase/NArray/BufferUtil/IndexedCoordIterator","kind":"class","full_name":"Phase::NArray::BufferUtil::IndexedCoordIterator(I)","name":"IndexedCoordIterator"}],"including_types":[],"namespace":{"html_id":"ph-core/Phase","kind":"module","full_name":"Phase","name":"Phase"},"doc":"Strictly finite regions","summary":"<p>Strictly finite regions</p>","class_methods":[{"html_id":"cover(shape:Shape)-class-method","name":"cover","doc":null,"summary":null,"abstract":false,"args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Shape"}],"args_string":"(shape : Shape)","args_html":"(shape : <a href=\"../Phase/Shape.html\">Shape</a>)","location":{"filename":"src/iterators/coord_iterator.cr","line_number":8,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/coord_iterator.cr#L8"},"def":{"name":"cover","args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Shape"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(IndexRegion.cover(shape))"}}],"constructors":[],"instance_methods":[{"html_id":"reverse-instance-method","name":"reverse","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/iterators/coord_iterator.cr","line_number":30,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/coord_iterator.cr#L30"},"def":{"name":"reverse","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"clone.reverse!"}},{"html_id":"reverse!-instance-method","name":"reverse!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/iterators/coord_iterator.cr","line_number":24,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/coord_iterator.cr#L24"},"def":{"name":"reverse!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@last, @first = @first, @last\n@step.map!(&.-)\nreset\n"}},{"html_id":"size:BigInt-instance-method","name":"size","doc":"Returns the number of elements in the collection.\n\n```\n[1, 2, 3, 4].size # => 4\n```","summary":"<p>Returns the number of elements in the collection.</p>","abstract":false,"args":[],"args_string":" : BigInt","args_html":" : BigInt","location":{"filename":"src/iterators/coord_iterator.cr","line_number":6,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/coord_iterator.cr#L6"},"def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"BigInt","visibility":"Public","body":"@size"}}],"macros":[],"types":[]},{"html_id":"ph-core/Phase/CoordTransform","path":"Phase/CoordTransform.html","kind":"struct","full_name":"Phase::CoordTransform","name":"CoordTransform","abstract":true,"superclass":{"html_id":"ph-core/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"ph-core/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"ph-core/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"ph-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/view_util/transforms.cr","line_number":3,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view_util/transforms.cr#L3"}],"repository_name":"ph-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"ph-core/Phase/ComposedTransform","kind":"struct","full_name":"Phase::ComposedTransform","name":"ComposedTransform"},{"html_id":"ph-core/Phase/IdentityTransform","kind":"struct","full_name":"Phase::IdentityTransform","name":"IdentityTransform"},{"html_id":"ph-core/Phase/PermuteTransform","kind":"struct","full_name":"Phase::PermuteTransform","name":"PermuteTransform"},{"html_id":"ph-core/Phase/RegionTransform","kind":"struct","full_name":"Phase::RegionTransform","name":"RegionTransform"},{"html_id":"ph-core/Phase/ReshapeTransform","kind":"struct","full_name":"Phase::ReshapeTransform","name":"ReshapeTransform"},{"html_id":"ph-core/Phase/ReverseTransform","kind":"struct","full_name":"Phase::ReverseTransform","name":"ReverseTransform"}],"including_types":[],"namespace":{"html_id":"ph-core/Phase","kind":"module","full_name":"Phase","name":"Phase"},"doc":"probably done","summary":"<p>probably done</p>","class_methods":[],"constructors":[{"html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/view_util/transforms.cr","line_number":3,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view_util/transforms.cr#L3"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"html_id":"apply(coord:Array(Int32)):Array(Int32)-instance-method","name":"apply","doc":null,"summary":null,"abstract":true,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Array(Int32)"}],"args_string":"(coord : Array(Int32)) : Array(Int32)","args_html":"(coord : Array(Int32)) : Array(Int32)","location":{"filename":"src/view_util/transforms.cr","line_number":22,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view_util/transforms.cr#L22"},"def":{"name":"apply","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Array(Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":""}},{"html_id":"commutes_with?(t:CoordTransform):Bool-instance-method","name":"commutes_with?","doc":null,"summary":null,"abstract":false,"args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"CoordTransform"}],"args_string":"(t : CoordTransform) : Bool","args_html":"(t : <a href=\"../Phase/CoordTransform.html\">CoordTransform</a>) : Bool","location":{"filename":"src/view_util/transforms.cr","line_number":14,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view_util/transforms.cr#L14"},"def":{"name":"commutes_with?","args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"CoordTransform"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"return commutes.any? do |type|\n  type == t.class\nend || t.commutes.any? do |type|\n  type == self.class\nend"}},{"html_id":"compose(t:CoordTransform):CoordTransform-instance-method","name":"compose","doc":null,"summary":null,"abstract":false,"args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"CoordTransform"}],"args_string":"(t : CoordTransform) : CoordTransform","args_html":"(t : <a href=\"../Phase/CoordTransform.html\">CoordTransform</a>) : <a href=\"../Phase/CoordTransform.html\">CoordTransform</a>","location":{"filename":"src/view_util/transforms.cr","line_number":6,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view_util/transforms.cr#L6"},"def":{"name":"compose","args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"CoordTransform"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"CoordTransform","visibility":"Public","body":"return ComposedTransform[t, self]"}}],"macros":[],"types":[]},{"html_id":"ph-core/Phase/CoordUtil","path":"Phase/CoordUtil.html","kind":"module","full_name":"Phase::CoordUtil","name":"CoordUtil","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/coord_util.cr","line_number":2,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/coord_util.cr#L2"}],"repository_name":"ph-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"ph-core/Phase/CoordUtil","kind":"module","full_name":"Phase::CoordUtil","name":"CoordUtil"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"ph-core/Phase","kind":"module","full_name":"Phase","name":"Phase"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"html_id":"canonicalize_coord(coord,shape):Array(Int32)-instance-method","name":"canonicalize_coord","doc":"Converts a `coord` into canonical form, such that each index in `coord` is positive.\nThrows an `IndexError` if at least one index specified in `coord` is out of range for the\ncorresponding axis of `shape`.","summary":"<p>Converts a <code>coord</code> into canonical form, such that each index in <code>coord</code> is positive.</p>","abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"args_string":"(coord, shape) : Array(Int32)","args_html":"(coord, shape) : Array(Int32)","location":{"filename":"src/coord_util.cr","line_number":48,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/coord_util.cr#L48"},"def":{"name":"canonicalize_coord","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"coord.to_a.map_with_index do |index, axis|\n  (canonicalize_index(index, shape, axis)).to_i32\nend"}},{"html_id":"canonicalize_index(index,shape,axis)-instance-method","name":"canonicalize_index","doc":"Returns the canonical (positive) form of `index` along a particular `axis` of `shape`.\nThrows an `IndexError` if `index` is out of range of `shape` along this axis.","summary":"<p>Returns the canonical (positive) form of <code>index</code> along a particular <code>axis</code> of <code>shape</code>.</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""},{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":""}],"args_string":"(index, shape, axis)","args_html":"(index, shape, axis)","location":{"filename":"src/coord_util.cr","line_number":23,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/coord_util.cr#L23"},"def":{"name":"canonicalize_index","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""},{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"canonicalize_index(index, shape[axis])"}},{"html_id":"canonicalize_index(index,size)-instance-method","name":"canonicalize_index","doc":null,"summary":null,"abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""},{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"args_string":"(index, size)","args_html":"(index, size)","location":{"filename":"src/coord_util.cr","line_number":27,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/coord_util.cr#L27"},"def":{"name":"canonicalize_index","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""},{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if !(has_index?(index, size))\n  raise(IndexError.new(\"Could not canonicalize index: #{index} is not a valid index for an axis of length #{size}.\"))\nend\ncanonicalize_index_unsafe(index, size)\n"}},{"html_id":"has_coord?(coord,shape)-instance-method","name":"has_coord?","doc":"Checks if `coord` is a valid coordinate for an array-like object with dimensions specified by `shape`.\nA coord is a list (Enumerable) of integers specifying an index along each axis in `shape`.","summary":"<p>Checks if <code>coord</code> is a valid coordinate for an array-like object with dimensions specified by <code>shape</code>.</p>","abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"args_string":"(coord, shape)","args_html":"(coord, shape)","location":{"filename":"src/coord_util.cr","line_number":16,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/coord_util.cr#L16"},"def":{"name":"has_coord?","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if coord.size != shape.size\n  return false\nend\ncoord.to_a.map_with_index do |index, axis|\n  has_index?(index, shape, axis)\nend.all?\n"}},{"html_id":"has_index?(index,shape,axis)-instance-method","name":"has_index?","doc":"Checks if `index` is a valid index along `axis` for an array-like object with dimensions specified by `shape`.","summary":"<p>Checks if <code>index</code> is a valid index along <code>axis</code> for an array-like object with dimensions specified by <code>shape</code>.</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""},{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":""}],"args_string":"(index, shape, axis)","args_html":"(index, shape, axis)","location":{"filename":"src/coord_util.cr","line_number":10,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/coord_util.cr#L10"},"def":{"name":"has_index?","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""},{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"has_index?(index, shape[axis])"}},{"html_id":"has_index?(index,size)-instance-method","name":"has_index?","doc":null,"summary":null,"abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""},{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"args_string":"(index, size)","args_html":"(index, size)","location":{"filename":"src/coord_util.cr","line_number":5,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/coord_util.cr#L5"},"def":{"name":"has_index?","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""},{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"index >= (-size) && index < size"}}],"macros":[],"types":[]},{"html_id":"ph-core/Phase/DimensionError","path":"Phase/DimensionError.html","kind":"class","full_name":"Phase::DimensionError","name":"DimensionError","abstract":false,"superclass":{"html_id":"ph-core/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"ph-core/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"ph-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"ph-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/exceptions/exceptions.cr","line_number":2,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/exceptions/exceptions.cr#L2"}],"repository_name":"ph-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"ph-core/Phase","kind":"module","full_name":"Phase","name":"Phase"},"doc":null,"summary":null,"class_methods":[{"html_id":"initialize(message=\"Wrongnumberofdimensionsforthisoperation.\")-class-method","name":"initialize","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"\"Wrong number of dimensions for this operation.\"","external_name":"message","restriction":""}],"args_string":"(message = \"Wrong number of dimensions for this operation.\")","args_html":"(message = <span class=\"s\">&quot;Wrong number of dimensions for this operation.&quot;</span>)","location":{"filename":"src/exceptions/exceptions.cr","line_number":3,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/exceptions/exceptions.cr#L3"},"def":{"name":"initialize","args":[{"name":"message","doc":null,"default_value":"\"Wrong number of dimensions for this operation.\"","external_name":"message","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"super(message)"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"ph-core/Phase/ElemAndCoordIterator","path":"Phase/ElemAndCoordIterator.html","kind":"class","full_name":"Phase::ElemAndCoordIterator(E, I)","name":"ElemAndCoordIterator","abstract":false,"superclass":{"html_id":"ph-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"ph-core/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"ph-core/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"ph-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"ph-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/iterators/elem_coord_iterator.cr","line_number":4,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/elem_coord_iterator.cr#L4"}],"repository_name":"ph-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"ph-core/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"}],"extended_modules":[],"subclasses":[{"html_id":"ph-core/Phase/NArray/BufferUtil/BufferedECIterator","kind":"class","full_name":"Phase::NArray::BufferUtil::BufferedECIterator(T, I)","name":"BufferedECIterator"}],"including_types":[],"namespace":{"html_id":"ph-core/Phase","kind":"module","full_name":"Phase","name":"Phase"},"doc":null,"summary":null,"class_methods":[{"html_id":"of(src,iter:CoordIterator(I))-class-method","name":"of","doc":null,"summary":null,"abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"iter","doc":null,"default_value":"","external_name":"iter","restriction":"CoordIterator(I)"}],"args_string":"(src, iter : CoordIterator(I))","args_html":"(src, iter : <a href=\"../Phase/CoordIterator.html\">CoordIterator</a>(I))","location":{"filename":"src/iterators/elem_coord_iterator.cr","line_number":11,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/elem_coord_iterator.cr#L11"},"def":{"name":"of","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"iter","doc":null,"default_value":"","external_name":"iter","restriction":"CoordIterator(I)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(src, iter)"}},{"html_id":"of(src,region=nil)-class-method","name":"of","doc":null,"summary":null,"abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"region","doc":null,"default_value":"nil","external_name":"region","restriction":""}],"args_string":"(src, region = nil)","args_html":"(src, region = <span class=\"n\">nil</span>)","location":{"filename":"src/iterators/elem_coord_iterator.cr","line_number":15,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/elem_coord_iterator.cr#L15"},"def":{"name":"of","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"region","doc":null,"default_value":"nil","external_name":"region","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if region.nil?\n  iter = LexIterator.cover(src.shape)\nelse\n  iter = LexIterator.new(region)\nend\nnew(src, iter)\n"}}],"constructors":[{"html_id":"new(src:MultiIndexable(E),coord_iter:CoordIterator(I))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"MultiIndexable(E)"},{"name":"coord_iter","doc":null,"default_value":"","external_name":"coord_iter","restriction":"CoordIterator(I)"}],"args_string":"(src : MultiIndexable(E), coord_iter : CoordIterator(I))","args_html":"(src : <a href=\"../Phase/MultiIndexable.html\">MultiIndexable</a>(E), coord_iter : <a href=\"../Phase/CoordIterator.html\">CoordIterator</a>(I))","location":{"filename":"src/iterators/elem_coord_iterator.cr","line_number":24,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/elem_coord_iterator.cr#L24"},"def":{"name":"new","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"MultiIndexable(E)"},{"name":"coord_iter","doc":null,"default_value":"","external_name":"coord_iter","restriction":"CoordIterator(I)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = ElemAndCoordIterator(E, I).allocate\n_.initialize(src, coord_iter)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"coord_iter:CoordIterator(I)-instance-method","name":"coord_iter","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : CoordIterator(I)","args_html":" : <a href=\"../Phase/CoordIterator.html\">CoordIterator</a>(I)","location":{"filename":"src/iterators/elem_coord_iterator.cr","line_number":7,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/elem_coord_iterator.cr#L7"},"def":{"name":"coord_iter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"CoordIterator(I)","visibility":"Public","body":"@coord_iter"}},{"html_id":"next-instance-method","name":"next","doc":"Returns the next element in this iterator, or `Iterator::Stop::INSTANCE` if there\nare no more elements.","summary":"<p>Returns the next element in this iterator, or <code>Iterator::Stop::INSTANCE</code> if there are no more elements.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/iterators/elem_coord_iterator.cr","line_number":35,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/elem_coord_iterator.cr#L35"},"def":{"name":"next","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"coord = @coord_iter.next\nif coord.is_a?(Iterator::Stop)\n  return stop\nend\n{get_element(coord), coord}\n"}},{"html_id":"next_value:E|Iterator::Stop-instance-method","name":"next_value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : E | Iterator::Stop","args_html":" : E | Iterator::Stop","location":{"filename":"src/iterators/elem_coord_iterator.cr","line_number":41,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/elem_coord_iterator.cr#L41"},"def":{"name":"next_value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"E | Iterator::Stop","visibility":"Public","body":"coord = @coord_iter.next\nif coord.is_a?(Iterator::Stop)\n  return stop\nend\nget_element(coord)\n"}},{"html_id":"reset-instance-method","name":"reset","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/iterators/elem_coord_iterator.cr","line_number":27,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/elem_coord_iterator.cr#L27"},"def":{"name":"reset","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@coord_iter.reset"}},{"html_id":"reverse-instance-method","name":"reverse","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/iterators/elem_coord_iterator.cr","line_number":52,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/elem_coord_iterator.cr#L52"},"def":{"name":"reverse","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(typeof(self)).new(@src, @coord_iter.reverse)"}},{"html_id":"reverse!-instance-method","name":"reverse!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/iterators/elem_coord_iterator.cr","line_number":56,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/elem_coord_iterator.cr#L56"},"def":{"name":"reverse!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@coord_iter.reverse!"}},{"html_id":"unsafe_next_value:E-instance-method","name":"unsafe_next_value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : E","args_html":" : E","location":{"filename":"src/iterators/elem_coord_iterator.cr","line_number":47,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/elem_coord_iterator.cr#L47"},"def":{"name":"unsafe_next_value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"E","visibility":"Public","body":"coord = @coord_iter.next.unsafe_as(Array(I))\nget_element(coord)\n"}}],"macros":[],"types":[]},{"html_id":"ph-core/Phase/ElemIterator","path":"Phase/ElemIterator.html","kind":"class","full_name":"Phase::ElemIterator(E, I)","name":"ElemIterator","abstract":false,"superclass":{"html_id":"ph-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"ph-core/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"ph-core/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"ph-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"ph-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/iterators/elem_iterator.cr","line_number":4,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/elem_iterator.cr#L4"}],"repository_name":"ph-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"ph-core/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"ph-core/Phase","kind":"module","full_name":"Phase","name":"Phase"},"doc":null,"summary":null,"class_methods":[{"html_id":"of(src,iter:CoordIterator)-class-method","name":"of","doc":null,"summary":null,"abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"iter","doc":null,"default_value":"","external_name":"iter","restriction":"CoordIterator"}],"args_string":"(src, iter : CoordIterator)","args_html":"(src, iter : <a href=\"../Phase/CoordIterator.html\">CoordIterator</a>)","location":{"filename":"src/iterators/elem_iterator.cr","line_number":9,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/elem_iterator.cr#L9"},"def":{"name":"of","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"iter","doc":null,"default_value":"","external_name":"iter","restriction":"CoordIterator"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(src, iter)"}},{"html_id":"of(src,region=nil)-class-method","name":"of","doc":null,"summary":null,"abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"region","doc":null,"default_value":"nil","external_name":"region","restriction":""}],"args_string":"(src, region = nil)","args_html":"(src, region = <span class=\"n\">nil</span>)","location":{"filename":"src/iterators/elem_iterator.cr","line_number":13,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/elem_iterator.cr#L13"},"def":{"name":"of","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"region","doc":null,"default_value":"nil","external_name":"region","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if region.nil?\n  iter = LexIterator.cover(src.shape)\nelse\n  iter = LexIterator.new(region)\nend\nnew(src, iter)\n"}}],"constructors":[{"html_id":"new(src,iter:CoordIterator)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"iter","doc":null,"default_value":"","external_name":"iter","restriction":"CoordIterator"}],"args_string":"(src, iter : CoordIterator)","args_html":"(src, iter : <a href=\"../Phase/CoordIterator.html\">CoordIterator</a>)","location":{"filename":"src/iterators/elem_iterator.cr","line_number":23,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/elem_iterator.cr#L23"},"def":{"name":"new","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"iter","doc":null,"default_value":"","external_name":"iter","restriction":"CoordIterator"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(ElemAndCoordIterator.new(src, iter))"}}],"instance_methods":[{"html_id":"coord_iter-instance-method","name":"coord_iter","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/iterators/elem_iterator.cr","line_number":42,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/elem_iterator.cr#L42"},"def":{"name":"coord_iter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@ec_iter.coord_iter"}},{"html_id":"ec_iter:ElemAndCoordIterator(E,I)-instance-method","name":"ec_iter","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ElemAndCoordIterator(E, I)","args_html":" : <a href=\"../Phase/ElemAndCoordIterator.html\">ElemAndCoordIterator</a>(E, I)","location":{"filename":"src/iterators/elem_iterator.cr","line_number":7,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/elem_iterator.cr#L7"},"def":{"name":"ec_iter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ElemAndCoordIterator(E, I)","visibility":"Public","body":"@ec_iter"}},{"html_id":"next-instance-method","name":"next","doc":"Returns the next element in this iterator, or `Iterator::Stop::INSTANCE` if there\nare no more elements.","summary":"<p>Returns the next element in this iterator, or <code>Iterator::Stop::INSTANCE</code> if there are no more elements.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/iterators/elem_iterator.cr","line_number":30,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/elem_iterator.cr#L30"},"def":{"name":"next","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@ec_iter.next_value"}},{"html_id":"reset-instance-method","name":"reset","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/iterators/elem_iterator.cr","line_number":38,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/elem_iterator.cr#L38"},"def":{"name":"reset","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@ec_iter.reset"}},{"html_id":"reverse-instance-method","name":"reverse","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/iterators/elem_iterator.cr","line_number":46,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/elem_iterator.cr#L46"},"def":{"name":"reverse","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(@src, @ec_iter.reverse)"}},{"html_id":"reverse!-instance-method","name":"reverse!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/iterators/elem_iterator.cr","line_number":50,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/elem_iterator.cr#L50"},"def":{"name":"reverse!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@ec_iter.reverse!"}},{"html_id":"unsafe_next-instance-method","name":"unsafe_next","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/iterators/elem_iterator.cr","line_number":34,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/elem_iterator.cr#L34"},"def":{"name":"unsafe_next","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@ec_iter.unsafe_next_value"}}],"macros":[],"types":[]},{"html_id":"ph-core/Phase/GeneralCoordIterator","path":"Phase/GeneralCoordIterator.html","kind":"class","full_name":"Phase::GeneralCoordIterator(T)","name":"GeneralCoordIterator","abstract":true,"superclass":{"html_id":"ph-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"ph-core/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"ph-core/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"ph-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"ph-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/iterators/general_coord_iterator.cr","line_number":4,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/general_coord_iterator.cr#L4"}],"repository_name":"ph-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"ph-core/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"}],"extended_modules":[],"subclasses":[{"html_id":"ph-core/Phase/CoordIterator","kind":"class","full_name":"Phase::CoordIterator(T)","name":"CoordIterator"}],"including_types":[],"namespace":{"html_id":"ph-core/Phase","kind":"module","full_name":"Phase","name":"Phase"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"html_id":"advance_coord-instance-method","name":"advance_coord","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","args_html":"","location":{"filename":"src/iterators/general_coord_iterator.cr","line_number":23,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/general_coord_iterator.cr#L23"},"def":{"name":"advance_coord","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"html_id":"coord:Array(T)-instance-method","name":"coord","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(T)","args_html":" : Array(T)","location":{"filename":"src/iterators/general_coord_iterator.cr","line_number":7,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/general_coord_iterator.cr#L7"},"def":{"name":"coord","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(T)","visibility":"Public","body":"@coord"}},{"html_id":"next:Array(T)|Stop-instance-method","name":"next","doc":"Returns the next element in this iterator, or `Iterator::Stop::INSTANCE` if there\nare no more elements.","summary":"<p>Returns the next element in this iterator, or <code>Iterator::Stop::INSTANCE</code> if there are no more elements.</p>","abstract":false,"args":[],"args_string":" : Array(T) | Stop","args_html":" : Array(T) | Stop","location":{"filename":"src/iterators/general_coord_iterator.cr","line_number":38,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/general_coord_iterator.cr#L38"},"def":{"name":"next","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(T) | Stop","visibility":"Public","body":"if @hold_coord\n  if @empty\n    return stop\n  end\n  @hold_coord = false\n  return @coord\nend\nadvance_coord\n"}},{"html_id":"reset:self-instance-method","name":"reset","doc":"Set up any incrementing variables (such as @coord) here prior to iteration.","summary":"<p>Set up any incrementing variables (such as @coord) here prior to iteration.</p>","abstract":false,"args":[],"args_string":" : self","args_html":" : <span class=\"k\">self</span>","location":{"filename":"src/iterators/general_coord_iterator.cr","line_number":32,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/general_coord_iterator.cr#L32"},"def":{"name":"reset","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"@coord = @first.dup\n@hold_coord = true\nself\n"}},{"html_id":"unsafe_next:Array(T)-instance-method","name":"unsafe_next","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(T)","args_html":" : Array(T)","location":{"filename":"src/iterators/general_coord_iterator.cr","line_number":48,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/general_coord_iterator.cr#L48"},"def":{"name":"unsafe_next","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(T)","visibility":"Public","body":"self.next.as(Array(T))"}},{"html_id":"unsafe_skip(axis,amount):Nil-instance-method","name":"unsafe_skip","doc":"TODO: constrain, figure out what +1 means and if it should depend on step, generally test heavily","summary":"<p><span class=\"flag orange\">TODO</span>  constrain, figure out what +1 means and if it should depend on step, generally test heavily</p>","abstract":false,"args":[{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":""},{"name":"amount","doc":null,"default_value":"","external_name":"amount","restriction":""}],"args_string":"(axis, amount) : Nil","args_html":"(axis, amount) : Nil","location":{"filename":"src/iterators/general_coord_iterator.cr","line_number":53,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/general_coord_iterator.cr#L53"},"def":{"name":"unsafe_skip","args":[{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":""},{"name":"amount","doc":null,"default_value":"","external_name":"amount","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"__temp_28 = axis\n@coord[__temp_28] = @coord[__temp_28] + (amount + 1)\n"}}],"macros":[],"types":[]},{"html_id":"ph-core/Phase/IdentityTransform","path":"Phase/IdentityTransform.html","kind":"struct","full_name":"Phase::IdentityTransform","name":"IdentityTransform","abstract":false,"superclass":{"html_id":"ph-core/Phase/CoordTransform","kind":"struct","full_name":"Phase::CoordTransform","name":"CoordTransform"},"ancestors":[{"html_id":"ph-core/Phase/CoordTransform","kind":"struct","full_name":"Phase::CoordTransform","name":"CoordTransform"},{"html_id":"ph-core/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"ph-core/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"ph-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/view_util/transforms.cr","line_number":89,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view_util/transforms.cr#L89"}],"repository_name":"ph-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"ph-core/Phase","kind":"module","full_name":"Phase","name":"Phase"},"doc":"done","summary":"<p>done</p>","class_methods":[],"constructors":[],"instance_methods":[{"html_id":"apply(coord:Array(Int32)):Array(Int32)-instance-method","name":"apply","doc":null,"summary":null,"abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Array(Int32)"}],"args_string":"(coord : Array(Int32)) : Array(Int32)","args_html":"(coord : Array(Int32)) : Array(Int32)","location":{"filename":"src/view_util/transforms.cr","line_number":94,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view_util/transforms.cr#L94"},"def":{"name":"apply","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Array(Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"coord"}},{"html_id":"compose(t:CoordTransform):CoordTransform-instance-method","name":"compose","doc":null,"summary":null,"abstract":false,"args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"CoordTransform"}],"args_string":"(t : CoordTransform) : CoordTransform","args_html":"(t : <a href=\"../Phase/CoordTransform.html\">CoordTransform</a>) : <a href=\"../Phase/CoordTransform.html\">CoordTransform</a>","location":{"filename":"src/view_util/transforms.cr","line_number":90,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view_util/transforms.cr#L90"},"def":{"name":"compose","args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"CoordTransform"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"CoordTransform","visibility":"Public","body":"t"}}],"macros":[],"types":[]},{"html_id":"ph-core/Phase/IndexRegion","path":"Phase/IndexRegion.html","kind":"struct","full_name":"Phase::IndexRegion(T)","name":"IndexRegion","abstract":false,"superclass":{"html_id":"ph-core/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"ph-core/Phase/MultiIndexable","kind":"module","full_name":"Phase::MultiIndexable","name":"MultiIndexable"},{"html_id":"ph-core/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"ph-core/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"ph-core/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"ph-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/index_region.cr","line_number":6,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/index_region.cr#L6"}],"repository_name":"ph-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"DROP_BY_DEFAULT","name":"DROP_BY_DEFAULT","value":"MultiIndexable::DROP_BY_DEFAULT","doc":null,"summary":null}],"included_modules":[{"html_id":"ph-core/Phase/MultiIndexable","kind":"module","full_name":"Phase::MultiIndexable","name":"MultiIndexable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"ph-core/Phase","kind":"module","full_name":"Phase","name":"Phase"},"doc":null,"summary":null,"class_methods":[{"html_id":"bounded?(range_literal:Range)-class-method","name":"bounded?","doc":null,"summary":null,"abstract":false,"args":[{"name":"range_literal","doc":null,"default_value":"","external_name":"range_literal","restriction":"Range"}],"args_string":"(range_literal : Range)","args_html":"(range_literal : Range)","location":{"filename":"src/index_region.cr","line_number":371,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/index_region.cr#L371"},"def":{"name":"bounded?","args":[{"name":"range_literal","doc":null,"default_value":"","external_name":"range_literal","restriction":"Range"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case first = range_literal.begin\nwhen Int\n  if range_literal.end.nil?\n    return false\n  end\nwhen Range\n  if first.end >= 0 && range_literal.end.nil?\n    return false\n  else\n    if first.begin.nil?\n      return false\n    end\n  end\nend\ntrue\n"}},{"html_id":"cover(bound_shape:Indexable(T))-class-method","name":"cover","doc":"Gets the region including all coordinates in the given bound_shape","summary":"<p>Gets the region including all coordinates in the given bound_shape</p>","abstract":false,"args":[{"name":"bound_shape","doc":null,"default_value":"","external_name":"bound_shape","restriction":"Indexable(T)"}],"args_string":"(bound_shape : Indexable(T))","args_html":"(bound_shape : Indexable(T))","location":{"filename":"src/index_region.cr","line_number":100,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/index_region.cr#L100"},"def":{"name":"cover","args":[{"name":"bound_shape","doc":null,"default_value":"","external_name":"bound_shape","restriction":"Indexable(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"start = Array.new(bound_shape.size, T.zero)\nstep = Array.new(bound_shape.size, T.zero + 1)\nstop = bound_shape.map(&.pred)\nshape = bound_shape.dup\nnew(start, step, stop, shape, DROP_BY_DEFAULT)\n"}}],"constructors":[{"html_id":"new(region:IndexRegion,bound_shape)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"IndexRegion"},{"name":"bound_shape","doc":null,"default_value":"","external_name":"bound_shape","restriction":""}],"args_string":"(region : IndexRegion, bound_shape)","args_html":"(region : <a href=\"../Phase/IndexRegion.html\">IndexRegion</a>, bound_shape)","location":{"filename":"src/index_region.cr","line_number":32,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/index_region.cr#L32"},"def":{"name":"new","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"IndexRegion"},{"name":"bound_shape","doc":null,"default_value":"","external_name":"bound_shape","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if region.fits_in?(bound_shape)\n  return region.clone\nend\nraise(IndexError.new(\"Region #{region} does not fit inside #{bound_shape}\"))\n"}},{"html_id":"new(region_literal:Enumerable,bound_shape:Indexable(T),drop:Bool=DROP_BY_DEFAULT):IndexRegion(T)-class-method","name":"new","doc":"Main constructor","summary":"<p>Main constructor</p>","abstract":false,"args":[{"name":"region_literal","doc":null,"default_value":"","external_name":"region_literal","restriction":"Enumerable"},{"name":"bound_shape","doc":null,"default_value":"","external_name":"bound_shape","restriction":"Indexable(T)"},{"name":"drop","doc":null,"default_value":"DROP_BY_DEFAULT","external_name":"drop","restriction":"Bool"}],"args_string":"(region_literal : Enumerable, bound_shape : Indexable(T), drop : Bool = DROP_BY_DEFAULT) : IndexRegion(T)","args_html":"(region_literal : Enumerable, bound_shape : Indexable(T), drop : Bool = <span class=\"t\">DROP_BY_DEFAULT</span>) : <a href=\"../Phase/IndexRegion.html\">IndexRegion</a>(T)","location":{"filename":"src/index_region.cr","line_number":73,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/index_region.cr#L73"},"def":{"name":"new","args":[{"name":"region_literal","doc":null,"default_value":"","external_name":"region_literal","restriction":"Enumerable"},{"name":"bound_shape","doc":null,"default_value":"","external_name":"bound_shape","restriction":"Indexable(T)"},{"name":"drop","doc":null,"default_value":"DROP_BY_DEFAULT","external_name":"drop","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IndexRegion(T)","visibility":"Public","body":"start = Array.new(bound_shape.size, T.zero)\nstep = Array.new(bound_shape.size, T.zero + 1)\nstop = Array.new(bound_shape.size, T.zero)\nshape = Array.new(bound_shape.size, T.zero)\ndegeneracy = Array(Bool).new(bound_shape.size, false)\nregion_literal.each_with_index do |range, i|\n  vals = canonicalize_range(range, bound_shape[i])\n  start[i], step[i], stop[i], shape[i] = vals\n  if range.is_a?(Int)\n    degeneracy[i] = true\n  end\nend\n(region_literal.size...bound_shape.size).each do |axis|\n  stop[axis] = bound_shape[axis] - 1\n  shape[axis] = bound_shape[axis]\nend\nnew(start, step, stop, shape, drop, degeneracy)\n"}},{"html_id":"new(region_literal:Enumerable,drop:Bool=DROP_BY_DEFAULT)-class-method","name":"new","doc":"creates an indexRegion from positive, bounded literals","summary":"<p>creates an indexRegion from positive, bounded literals</p>","abstract":false,"args":[{"name":"region_literal","doc":null,"default_value":"","external_name":"region_literal","restriction":"Enumerable"},{"name":"drop","doc":null,"default_value":"DROP_BY_DEFAULT","external_name":"drop","restriction":"Bool"}],"args_string":"(region_literal : Enumerable, drop : Bool = DROP_BY_DEFAULT)","args_html":"(region_literal : Enumerable, drop : Bool = <span class=\"t\">DROP_BY_DEFAULT</span>)","location":{"filename":"src/index_region.cr","line_number":109,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/index_region.cr#L109"},"def":{"name":"new","args":[{"name":"region_literal","doc":null,"default_value":"","external_name":"region_literal","restriction":"Enumerable"},{"name":"drop","doc":null,"default_value":"DROP_BY_DEFAULT","external_name":"drop","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"dims = region_literal.size\nstart = Array(T).new(dims, T.zero)\nstep = Array(T).new(dims, T.zero)\nstop = Array(T).new(dims, T.zero)\nshape = Array(T).new(dims, T.zero)\ndegeneracy = Array(Bool).new(dims, false)\nregion_literal.each_with_index do |range, i|\n  IndexRegion.ensure_nonnegative(range)\n  if !(IndexRegion.bounded?(range))\n    raise(\"Cannot create IndexRegion without an explicit upper bound unless you provide a bounding shape\")\n  end\n  if range.is_a?(Int)\n    degeneracy[i] = true\n  end\n  start[i], step[i], stop[i], shape[i] = IndexRegion.infer_range(range, T.zero)\nend\nnew(start, step, stop, shape, drop, degeneracy)\n"}},{"html_id":"new(region_literal:Enumerable,bound_shape:Indexable?=nil,drop:Bool=DROP_BY_DEFAULT,*,trim_to:Indexable(T))-class-method","name":"new","doc":"doesn't allow negative (relative) indices, and allows you to clip\na region_literal down so it will fit inside of *trim_to*.","summary":"<p>doesn't allow negative (relative) indices, and allows you to clip a region_literal down so it will fit inside of <em>trim_to</em>.</p>","abstract":false,"args":[{"name":"region_literal","doc":null,"default_value":"","external_name":"region_literal","restriction":"Enumerable"},{"name":"bound_shape","doc":null,"default_value":"nil","external_name":"bound_shape","restriction":"Indexable | ::Nil"},{"name":"drop","doc":null,"default_value":"DROP_BY_DEFAULT","external_name":"drop","restriction":"Bool"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"trim_to","doc":null,"default_value":"","external_name":"trim_to","restriction":"Indexable(T)"}],"args_string":"(region_literal : Enumerable, bound_shape : Indexable? = nil, drop : Bool = DROP_BY_DEFAULT, *, trim_to : Indexable(T))","args_html":"(region_literal : Enumerable, bound_shape : Indexable? = <span class=\"n\">nil</span>, drop : Bool = <span class=\"t\">DROP_BY_DEFAULT</span>, *, trim_to : Indexable(T))","location":{"filename":"src/index_region.cr","line_number":41,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/index_region.cr#L41"},"def":{"name":"new","args":[{"name":"region_literal","doc":null,"default_value":"","external_name":"region_literal","restriction":"Enumerable"},{"name":"bound_shape","doc":null,"default_value":"nil","external_name":"bound_shape","restriction":"Indexable | ::Nil"},{"name":"drop","doc":null,"default_value":"DROP_BY_DEFAULT","external_name":"drop","restriction":"Bool"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"trim_to","doc":null,"default_value":"","external_name":"trim_to","restriction":"Indexable(T)"}],"double_splat":null,"splat_index":3,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"start = Array.new(trim_to.size, T.zero)\nstep = Array.new(trim_to.size, T.zero + 1)\nstop = Array.new(trim_to.size, T.zero)\nshape = Array.new(trim_to.size, T.zero)\ndegeneracy = Array(Bool).new(trim_to.size, false)\nallow_relative = !bound_shape.nil?\nbound_shape || (bound_shape = trim_to)\nregion_literal.each_with_index do |range, i|\n  if allow_relative\n  else\n    IndexRegion.ensure_nonnegative(range)\n  end\n  start[i], step[i], stop[i], shape[i] = infer_range(range, bound_shape[i])\n  if range.is_a?(Int)\n    degeneracy[i] = true\n  end\nend\n(region_literal.size...bound_shape.size).each do |axis|\n  stop[axis] = bound_shape[axis] - 1\n  shape[axis] = bound_shape[axis]\nend\n(new(start, step, stop, shape, drop, degeneracy)).trim!(trim_to)\n"}}],"instance_methods":[{"html_id":"absolute_to_local(coord)-instance-method","name":"absolute_to_local","doc":null,"summary":null,"abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""}],"args_string":"(coord)","args_html":"(coord)","location":{"filename":"src/index_region.cr","line_number":321,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/index_region.cr#L321"},"def":{"name":"absolute_to_local","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"local = (coord.zip(@start, @step)).map do |idx, start, step|\n  (idx - start) // step\nend\nif @drop\n  drop_degenerate(local) do\n    [T.zero]\n  end\nelse\n  local\nend\n"}},{"html_id":"clone-instance-method","name":"clone","doc":"Returns a copy of `self` with all instance variables cloned.","summary":"<p>Returns a copy of <code>self</code> with all instance variables cloned.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/index_region.cr","line_number":224,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/index_region.cr#L224"},"def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{% if @type < Reference && (!@type.instance_vars.map(&.type).all? do |t|\n  ((((t == ::Bool) || (t == ::Char)) || (t == ::Symbol)) || (t == ::String)) || t < ::Number::Primitive\nend) %}\n        exec_recursive_clone do |hash|\n          clone = {{ @type }}.allocate\n          hash[object_id] = clone.object_id\n          clone.initialize_copy(self)\n          GC.add_finalizer(clone) if clone.responds_to?(:finalize)\n          clone\n        end\n      {% else %}\n        clone = {{ @type }}.allocate\n        clone.initialize_copy(self)\n        GC.add_finalizer(clone) if clone.responds_to?(:finalize)\n        clone\n      {% end %}"}},{"html_id":"degeneracy:Array(Bool)-instance-method","name":"degeneracy","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Bool)","args_html":" : Array(Bool)","location":{"filename":"src/index_region.cr","line_number":26,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/index_region.cr#L26"},"def":{"name":"degeneracy","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Bool)","visibility":"Public","body":"@degeneracy"}},{"html_id":"degeneracy=(degeneracy:Array(Bool))-instance-method","name":"degeneracy=","doc":null,"summary":null,"abstract":false,"args":[{"name":"degeneracy","doc":null,"default_value":"","external_name":"degeneracy","restriction":"Array(Bool)"}],"args_string":"(degeneracy : Array(Bool))","args_html":"(degeneracy : Array(Bool))","location":{"filename":"src/index_region.cr","line_number":26,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/index_region.cr#L26"},"def":{"name":"degeneracy=","args":[{"name":"degeneracy","doc":null,"default_value":"","external_name":"degeneracy","restriction":"Array(Bool)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@degeneracy = degeneracy"}},{"html_id":"drop:Bool-instance-method","name":"drop","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/index_region.cr","line_number":27,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/index_region.cr#L27"},"def":{"name":"drop","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@drop"}},{"html_id":"drop_degenerate(arr:Array,&when_full:->Array(T)):Array(T)-instance-method","name":"drop_degenerate","doc":null,"summary":null,"abstract":false,"args":[{"name":"arr","doc":null,"default_value":"","external_name":"arr","restriction":"Array"}],"args_string":"(arr : Array, &when_full :  -> Array(T)) : Array(T)","args_html":"(arr : Array, &when_full :  -> Array(T)) : Array(T)","location":{"filename":"src/index_region.cr","line_number":333,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/index_region.cr#L333"},"def":{"name":"drop_degenerate","args":[{"name":"arr","doc":null,"default_value":"","external_name":"arr","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"when_full","doc":null,"default_value":"","external_name":"when_full","restriction":"(-> Array(T))"},"return_type":"Array(T)","visibility":"Public","body":"new_arr = Array(T).new(arr.size)\narr.each_with_index do |value, idx|\n  if @degeneracy[idx]\n  else\n    new_arr << value\n  end\nend\nif new_arr.empty?\n  return yield\nend\nnew_arr\n"}},{"html_id":"each:CoordIterator(T)-instance-method","name":"each","doc":"The default iterator must be lexicographic","summary":"<p>The default iterator must be lexicographic</p>","abstract":false,"args":[],"args_string":" : CoordIterator(T)","args_html":" : <a href=\"../Phase/CoordIterator.html\">CoordIterator</a>(T)","location":{"filename":"src/index_region.cr","line_number":343,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/index_region.cr#L343"},"def":{"name":"each","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"CoordIterator(T)","visibility":"Public","body":"LexIterator.new(self)"}},{"html_id":"fits_in?(bound_shape):Bool-instance-method","name":"fits_in?","doc":"TODO: check dimensions","summary":"<p><span class=\"flag orange\">TODO</span>  check dimensions</p>","abstract":false,"args":[{"name":"bound_shape","doc":null,"default_value":"","external_name":"bound_shape","restriction":""}],"args_string":"(bound_shape) : Bool","args_html":"(bound_shape) : Bool","location":{"filename":"src/index_region.cr","line_number":236,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/index_region.cr#L236"},"def":{"name":"fits_in?","args":[{"name":"bound_shape","doc":null,"default_value":"","external_name":"bound_shape","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"(bound_shape.zip(@start, @stop)).each do |bound, a, b|\n  if bound <= {a, b}.max\n    return false\n  end\nend\ntrue\n"}},{"html_id":"includes?(coord)-instance-method","name":"includes?","doc":"Returns `true` if the collection contains *obj*, `false` otherwise.\n\n```\n[1, 2, 3].includes?(2) # => true\n[1, 2, 3].includes?(5) # => false\n```","summary":"<p>Returns <code>true</code> if the collection contains <em>obj</em>, <code>false</code> otherwise.</p>","abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""}],"args_string":"(coord)","args_html":"(coord)","location":{"filename":"src/index_region.cr","line_number":226,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/index_region.cr#L226"},"def":{"name":"includes?","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"coord.each_with_index do |value, i|\n  bounds = (  @step[i] > 0) ? (  @start[i]..@stop[i]) : (  @stop[i]..@start[i])\n  if bounds.includes?(value)\n  else\n    return false\n  end\n  if ((value - @start[i]) % @step[i]) == 0\n  else\n    return false\n  end\nend\ntrue\n"}},{"html_id":"local_to_absolute(coord)-instance-method","name":"local_to_absolute","doc":"TODO: in general, maybe use immediate methods rather than zip?","summary":"<p><span class=\"flag orange\">TODO</span>  in general, maybe use immediate methods rather than zip?</p>","abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""}],"args_string":"(coord)","args_html":"(coord)","location":{"filename":"src/index_region.cr","line_number":303,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/index_region.cr#L303"},"def":{"name":"local_to_absolute","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @drop\n  local_axis = 0\n  degeneracy.map_with_index do |degenerate, i|\n    if degenerate\n      @start[i]\n    else\n      local_axis = local_axis + 1\n      @start[i] + (coord[local_axis - 1] * @step[i])\n    end\n  end\nelse\n  (coord.zip(@start, @step)).map do |idx, start, step|\n    start + (idx * step)\n  end\nend"}},{"html_id":"proper_dimensions:Int32-instance-method","name":"proper_dimensions","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/index_region.cr","line_number":172,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/index_region.cr#L172"},"def":{"name":"proper_dimensions","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@proper_shape.size"}},{"html_id":"reverse:self-instance-method","name":"reverse","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : self","args_html":" : <span class=\"k\">self</span>","location":{"filename":"src/index_region.cr","line_number":270,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/index_region.cr#L270"},"def":{"name":"reverse","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"clone.reverse!"}},{"html_id":"reverse!:IndexRegion(T)-instance-method","name":"reverse!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : IndexRegion(T)","args_html":" : <a href=\"../Phase/IndexRegion.html\">IndexRegion</a>(T)","location":{"filename":"src/index_region.cr","line_number":264,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/index_region.cr#L264"},"def":{"name":"reverse!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IndexRegion(T)","visibility":"Public","body":"@start, @stop = @stop, @start\n@step = @step.map(&.-)\nself\n"}},{"html_id":"shape:Array(T)-instance-method","name":"shape","doc":"============= Methods required by MultiIndexable ===========================","summary":"<p>============= Methods required by MultiIndexable ===========================</p>","abstract":false,"args":[],"args_string":" : Array(T)","args_html":" : Array(T)","location":{"filename":"src/index_region.cr","line_number":160,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/index_region.cr#L160"},"def":{"name":"shape","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(T)","visibility":"Public","body":"@reduced_shape.dup"}},{"html_id":"shape_internal(drop=MultiIndexable::DROP_BY_DEFAULT)-instance-method","name":"shape_internal","doc":null,"summary":null,"abstract":false,"args":[{"name":"drop","doc":null,"default_value":"MultiIndexable::DROP_BY_DEFAULT","external_name":"drop","restriction":""}],"args_string":"(drop = MultiIndexable::DROP_BY_DEFAULT)","args_html":"(drop = <span class=\"t\">MultiIndexable</span><span class=\"t\">::</span><span class=\"t\">DROP_BY_DEFAULT</span>)","location":{"filename":"src/index_region.cr","line_number":164,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/index_region.cr#L164"},"def":{"name":"shape_internal","args":[{"name":"drop","doc":null,"default_value":"MultiIndexable::DROP_BY_DEFAULT","external_name":"drop","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@reduced_shape"}},{"html_id":"size-instance-method","name":"size","doc":"Returns the number of elements in the `{{@type}}`; equal to `shape.product`.","summary":"<p>Returns the number of elements in the <code>{{@type}}</code>; equal to <code>shape.product</code>.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/index_region.cr","line_number":168,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/index_region.cr#L168"},"def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@reduced_shape.product"}},{"html_id":"step:Array(Int32)-instance-method","name":"step","doc":"@start, @stop, @proper_shape, @reduced_shape must all be valid index representers but @step need not be (e.g. may be negative)\nTODO: see if there is a way to generalize to any SignedInt\n:nodoc:","summary":"<p>@start, @stop, @proper_shape, @reduced_shape must all be valid index representers but @step need not be (e.g.</p>","abstract":false,"args":[],"args_string":" : Array(Int32)","args_html":" : Array(Int32)","location":{"filename":"src/index_region.cr","line_number":22,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/index_region.cr#L22"},"def":{"name":"step","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"@step"}},{"html_id":"to_s(io)-instance-method","name":"to_s","doc":"FIXME: NArrayFormatter depends on buffer indices.","summary":"<p><span class=\"flag yellow\">FIXME</span>  NArrayFormatter depends on buffer indices.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","args_html":"(io)","location":{"filename":"src/index_region.cr","line_number":290,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/index_region.cr#L290"},"def":{"name":"to_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io << @degeneracy.map_with_index do |degen, i|\n  if degen\n    @start[i]\n  else\n    if @step[i].abs == 1\n      @start[i]..@stop[i]\n    else\n      (@start[i]..@step[i])..@stop[i]\n    end\n  end\nend"}},{"html_id":"translate(byoffset:Enumerable):self-instance-method","name":"translate","doc":null,"summary":null,"abstract":false,"args":[{"name":"offset","doc":null,"default_value":"","external_name":"by","restriction":"Enumerable"}],"args_string":"(by offset : Enumerable) : self","args_html":"(by offset : Enumerable) : <span class=\"k\">self</span>","location":{"filename":"src/index_region.cr","line_number":286,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/index_region.cr#L286"},"def":{"name":"translate","args":[{"name":"offset","doc":null,"default_value":"","external_name":"by","restriction":"Enumerable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"self.clone.translate!(offset)"}},{"html_id":"translate!(byoffset:Enumerable):self-instance-method","name":"translate!","doc":null,"summary":null,"abstract":false,"args":[{"name":"offset","doc":null,"default_value":"","external_name":"by","restriction":"Enumerable"}],"args_string":"(by offset : Enumerable) : self","args_html":"(by offset : Enumerable) : <span class=\"k\">self</span>","location":{"filename":"src/index_region.cr","line_number":278,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/index_region.cr#L278"},"def":{"name":"translate!","args":[{"name":"offset","doc":null,"default_value":"","external_name":"by","restriction":"Enumerable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"offset.each_with_index do |amount, axis|\n  __temp_24 = axis\n  @start[__temp_24] = @start[__temp_24] + amount\n  __temp_26 = axis\n  @stop[__temp_26] = @stop[__temp_26] + amount\nend\nself\n"}},{"html_id":"trim(bound_shape):self-instance-method","name":"trim","doc":null,"summary":null,"abstract":false,"args":[{"name":"bound_shape","doc":null,"default_value":"","external_name":"bound_shape","restriction":""}],"args_string":"(bound_shape) : self","args_html":"(bound_shape) : <span class=\"k\">self</span>","location":{"filename":"src/index_region.cr","line_number":274,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/index_region.cr#L274"},"def":{"name":"trim","args":[{"name":"bound_shape","doc":null,"default_value":"","external_name":"bound_shape","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"self.clone.trim!(bound_shape)"}},{"html_id":"trim!(bound_shape):self-instance-method","name":"trim!","doc":"TODO","summary":"<p><span class=\"flag orange\">TODO</span> </p>","abstract":false,"args":[{"name":"bound_shape","doc":null,"default_value":"","external_name":"bound_shape","restriction":""}],"args_string":"(bound_shape) : self","args_html":"(bound_shape) : <span class=\"k\">self</span>","location":{"filename":"src/index_region.cr","line_number":244,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/index_region.cr#L244"},"def":{"name":"trim!","args":[{"name":"bound_shape","doc":null,"default_value":"","external_name":"bound_shape","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"dims = @reduced_shape.size\nif bound_shape.size != dims\n  raise(DimensionError.new(\"invalid error :)\"))\nend\nbound_shape.each_with_index do |container_size, axis|\n  @start[axis], @step[axis], @stop[axis], @proper_shape[axis] = IndexRegion.trim_axis(container_size, @start[axis], @step[axis], @stop[axis], @proper_shape[axis])\nend\nif @drop\n  @reduced_shape = drop_degenerate(@proper_shape) do\n    [T.zero + 1]\n  end\nelse\n  @reduced_shape = @proper_shape.dup\nend\nself\n"}},{"html_id":"unsafe_fetch_chunk(region:IndexRegion,drop:Bool):IndexRegion(T)-instance-method","name":"unsafe_fetch_chunk","doc":"composes regions","summary":"<p>composes regions</p>","abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"IndexRegion"},{"name":"drop","doc":null,"default_value":"","external_name":"drop","restriction":"Bool"}],"args_string":"(region : IndexRegion, drop : Bool) : IndexRegion(T)","args_html":"(region : <a href=\"../Phase/IndexRegion.html\">IndexRegion</a>, drop : Bool) : <a href=\"../Phase/IndexRegion.html\">IndexRegion</a>(T)","location":{"filename":"src/index_region.cr","line_number":177,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/index_region.cr#L177"},"def":{"name":"unsafe_fetch_chunk","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"IndexRegion"},{"name":"drop","doc":null,"default_value":"","external_name":"drop","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IndexRegion(T)","visibility":"Public","body":"if drop\n  @degeneracy.map_with_index do |el, idx|\n    el || region.degeneracy[idx]\n  end\nend\nnew_start = local_to_absolute(region.start)\nnew_stop = local_to_absolute(region.stop)\nnew_step = (@step.zip(region.step)).map do |outer, inner|\n  outer * inner\nend\nIndexRegion(T).new(new_start, new_step, new_stop, region.shape)\n"}},{"html_id":"unsafe_fetch_element(coord:Coord):Array(T)-instance-method","name":"unsafe_fetch_element","doc":"gets absolute coordinate of a coord in the region's local reference frame","summary":"<p>gets absolute coordinate of a coord in the region's local reference frame</p>","abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Coord"}],"args_string":"(coord : Coord) : Array(T)","args_html":"(coord : <a href=\"../Phase/Coord.html\">Coord</a>) : Array(T)","location":{"filename":"src/index_region.cr","line_number":200,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/index_region.cr#L200"},"def":{"name":"unsafe_fetch_element","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Coord"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(T)","visibility":"Public","body":"local_to_absolute(coord)"}}],"macros":[],"types":[]},{"html_id":"ph-core/Phase/LexIterator","path":"Phase/LexIterator.html","kind":"class","full_name":"Phase::LexIterator(T)","name":"LexIterator","abstract":false,"superclass":{"html_id":"ph-core/Phase/CoordIterator","kind":"class","full_name":"Phase::CoordIterator","name":"CoordIterator"},"ancestors":[{"html_id":"ph-core/Phase/CoordIterator","kind":"class","full_name":"Phase::CoordIterator","name":"CoordIterator"},{"html_id":"ph-core/Phase/GeneralCoordIterator","kind":"class","full_name":"Phase::GeneralCoordIterator","name":"GeneralCoordIterator"},{"html_id":"ph-core/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"ph-core/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"ph-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"ph-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/iterators/lex_iterator.cr","line_number":4,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/lex_iterator.cr#L4"}],"repository_name":"ph-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"ph-core/Phase","kind":"module","full_name":"Phase","name":"Phase"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"html_id":"new(region:IndexRegion(T))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"IndexRegion(T)"}],"args_string":"(region : IndexRegion(T))","args_html":"(region : <a href=\"../Phase/IndexRegion.html\">IndexRegion</a>(T))","location":{"filename":"src/iterators/lex_iterator.cr","line_number":6,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/lex_iterator.cr#L6"},"def":{"name":"new","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"IndexRegion(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = LexIterator(T).allocate\n_.initialize(region)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(region_literal)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"region_literal","doc":null,"default_value":"","external_name":"region_literal","restriction":""}],"args_string":"(region_literal)","args_html":"(region_literal)","location":{"filename":"src/iterators/lex_iterator.cr","line_number":10,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/lex_iterator.cr#L10"},"def":{"name":"new","args":[{"name":"region_literal","doc":null,"default_value":"","external_name":"region_literal","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = LexIterator(T).allocate\n_.initialize(region_literal)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"advance_coord-instance-method","name":"advance_coord","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/iterators/lex_iterator.cr","line_number":14,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/lex_iterator.cr#L14"},"def":{"name":"advance_coord","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(@coord.size - 1).downto(0) do |i|\n  if @coord[i] == @last[i]\n    @coord[i] = @first[i]\n    if i == 0\n      return stop\n    end\n  else\n    __temp_32 = i\n    @coord[__temp_32] = @coord[__temp_32] + @step[i]\n    break\n  end\nend\n@coord\n"}},{"html_id":"clone-instance-method","name":"clone","doc":"Returns a copy of `self` with all instance variables cloned.","summary":"<p>Returns a copy of <code>self</code> with all instance variables cloned.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/iterators/lex_iterator.cr","line_number":5,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/lex_iterator.cr#L5"},"def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{% if @type < Reference && (!@type.instance_vars.map(&.type).all? do |t|\n  ((((t == ::Bool) || (t == ::Char)) || (t == ::Symbol)) || (t == ::String)) || t < ::Number::Primitive\nend) %}\n        exec_recursive_clone do |hash|\n          clone = {{ @type }}.allocate\n          hash[object_id] = clone.object_id\n          clone.initialize_copy(self)\n          GC.add_finalizer(clone) if clone.responds_to?(:finalize)\n          clone\n        end\n      {% else %}\n        clone = {{ @type }}.allocate\n        clone.initialize_copy(self)\n        GC.add_finalizer(clone) if clone.responds_to?(:finalize)\n        clone\n      {% end %}"}}],"macros":[],"types":[]},{"html_id":"ph-core/Phase/MultiIndexable","path":"Phase/MultiIndexable.html","kind":"module","full_name":"Phase::MultiIndexable(T)","name":"MultiIndexable","abstract":false,"superclass":null,"ancestors":[{"html_id":"ph-core/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"}],"locations":[{"filename":"src/formatter/formatter.cr","line_number":7,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/formatter.cr#L7"},{"filename":"src/formatter/settings.cr","line_number":4,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/settings.cr#L4"},{"filename":"src/multi_indexable.cr","line_number":5,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L5"}],"repository_name":"ph-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"DROP_BY_DEFAULT","name":"DROP_BY_DEFAULT","value":"true","doc":null,"summary":null}],"included_modules":[{"html_id":"ph-core/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"}],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"ph-core/Phase/CartesianProduct","kind":"class","full_name":"Phase::CartesianProduct(*U)","name":"CartesianProduct"},{"html_id":"ph-core/Phase/IndexRegion","kind":"struct","full_name":"Phase::IndexRegion(T)","name":"IndexRegion"},{"html_id":"ph-core/Phase/NArray","kind":"class","full_name":"Phase::NArray(T)","name":"NArray"},{"html_id":"ph-core/Phase/ReadonlyView","kind":"class","full_name":"Phase::ReadonlyView(S, R)","name":"ReadonlyView"}],"namespace":{"html_id":"ph-core/Phase","kind":"module","full_name":"Phase","name":"Phase"},"doc":"Assumptions:\n- length along every axis is finite and positive, and each element is positively indexed\n- size is stored as an Int32, i.e. there are no more than Int32::MAX elements.","summary":"<p>Assumptions: - length along every axis is finite and positive, and each element is positively indexed - size is stored as an Int32, i.e.</p>","class_methods":[],"constructors":[],"instance_methods":[{"html_id":"%(other:MultiIndexable(U))forallU-instance-method","name":"%","doc":"Invokes `#%` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code>#%</code> element-wise between <code>self</code> and <em>other</em>, returning an <code><a href=\"../Phase/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : <a href=\"../Phase/MultiIndexable.html\">MultiIndexable</a>(U)) forall U","location":{"filename":"src/multi_indexable.cr","line_number":329,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L329"},"def":{"name":"%","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if shape_internal != other.shape_internal\n  if scalar? || other.scalar?\n    raise(DimensionError.new(\"The shape of this MultiIndexable (#{shape_internal}) does not match the shape of the one provided (#{other.shape_internal}), so '%' cannot be applied element-wise. Did you mean to call to_scalar on one of the arguments?\"))\n  end\n  raise(DimensionError.new(\"The shape of this MultiIndexable (#{shape_internal}) does not match the shape of the one provided (#{other.shape_internal}), so '%' cannot be applied element-wise.\"))\nend\nmap_with_coord do |elem, coord|\n  elem % (other.unsafe_fetch_element(coord))\nend\n"}},{"html_id":"%(other)-instance-method","name":"%","doc":"Invokes `#%(other)` on each element in `self`, returning an\n`NArray` that contains the results.","summary":"<p>Invokes <code>#%(other)</code> on each element in <code>self</code>, returning an <code><a href=\"../Phase/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/multi_indexable.cr","line_number":329,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L329"},"def":{"name":"%","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map(&.%(other))"}},{"html_id":"&(other:MultiIndexable(U))forallU-instance-method","name":"&","doc":"Invokes `#&` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Phase/MultiIndexable.html#&(other:MultiIndexable(U))forallU-instance-method\">#&</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code><a href=\"../Phase/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : <a href=\"../Phase/MultiIndexable.html\">MultiIndexable</a>(U)) forall U","location":{"filename":"src/multi_indexable.cr","line_number":329,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L329"},"def":{"name":"&","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if shape_internal != other.shape_internal\n  if scalar? || other.scalar?\n    raise(DimensionError.new(\"The shape of this MultiIndexable (#{shape_internal}) does not match the shape of the one provided (#{other.shape_internal}), so '&' cannot be applied element-wise. Did you mean to call to_scalar on one of the arguments?\"))\n  end\n  raise(DimensionError.new(\"The shape of this MultiIndexable (#{shape_internal}) does not match the shape of the one provided (#{other.shape_internal}), so '&' cannot be applied element-wise.\"))\nend\nmap_with_coord do |elem, coord|\n  elem & (other.unsafe_fetch_element(coord))\nend\n"}},{"html_id":"&(other)-instance-method","name":"&","doc":"Invokes `#&(other)` on each element in `self`, returning an\n`NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Phase/MultiIndexable.html#&(other:MultiIndexable(U))forallU-instance-method\">#&(other)</a></code> on each element in <code>self</code>, returning an <code><a href=\"../Phase/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/multi_indexable.cr","line_number":329,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L329"},"def":{"name":"&","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map(&.&(other))"}},{"html_id":"&**(other:MultiIndexable(U))forallU-instance-method","name":"&**","doc":"Invokes `#&**` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Phase/MultiIndexable.html#&**(other:MultiIndexable(U))forallU-instance-method\">#&**</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code><a href=\"../Phase/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : <a href=\"../Phase/MultiIndexable.html\">MultiIndexable</a>(U)) forall U","location":{"filename":"src/multi_indexable.cr","line_number":329,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L329"},"def":{"name":"&**","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if shape_internal != other.shape_internal\n  if scalar? || other.scalar?\n    raise(DimensionError.new(\"The shape of this MultiIndexable (#{shape_internal}) does not match the shape of the one provided (#{other.shape_internal}), so '&**' cannot be applied element-wise. Did you mean to call to_scalar on one of the arguments?\"))\n  end\n  raise(DimensionError.new(\"The shape of this MultiIndexable (#{shape_internal}) does not match the shape of the one provided (#{other.shape_internal}), so '&**' cannot be applied element-wise.\"))\nend\nmap_with_coord do |elem, coord|\n  elem &** (other.unsafe_fetch_element(coord))\nend\n"}},{"html_id":"&**(other)-instance-method","name":"&**","doc":"Invokes `#&**(other)` on each element in `self`, returning an\n`NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Phase/MultiIndexable.html#&**(other:MultiIndexable(U))forallU-instance-method\">#&**(other)</a></code> on each element in <code>self</code>, returning an <code><a href=\"../Phase/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/multi_indexable.cr","line_number":329,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L329"},"def":{"name":"&**","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map(&.&**(other))"}},{"html_id":"&+(other:MultiIndexable(U))forallU-instance-method","name":"&+","doc":"Invokes `#&+` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Phase/MultiIndexable.html#&+(other:MultiIndexable(U))forallU-instance-method\">#&+</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code><a href=\"../Phase/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : <a href=\"../Phase/MultiIndexable.html\">MultiIndexable</a>(U)) forall U","location":{"filename":"src/multi_indexable.cr","line_number":329,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L329"},"def":{"name":"&+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if shape_internal != other.shape_internal\n  if scalar? || other.scalar?\n    raise(DimensionError.new(\"The shape of this MultiIndexable (#{shape_internal}) does not match the shape of the one provided (#{other.shape_internal}), so '&+' cannot be applied element-wise. Did you mean to call to_scalar on one of the arguments?\"))\n  end\n  raise(DimensionError.new(\"The shape of this MultiIndexable (#{shape_internal}) does not match the shape of the one provided (#{other.shape_internal}), so '&+' cannot be applied element-wise.\"))\nend\nmap_with_coord do |elem, coord|\n  elem &+ (other.unsafe_fetch_element(coord))\nend\n"}},{"html_id":"&+(other)-instance-method","name":"&+","doc":"Invokes `#&+(other)` on each element in `self`, returning an\n`NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Phase/MultiIndexable.html#&+(other:MultiIndexable(U))forallU-instance-method\">#&+(other)</a></code> on each element in <code>self</code>, returning an <code><a href=\"../Phase/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/multi_indexable.cr","line_number":329,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L329"},"def":{"name":"&+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map(&.&+(other))"}},{"html_id":"&-(other:MultiIndexable(U))forallU-instance-method","name":"&-","doc":"Invokes `#&-` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Phase/MultiIndexable.html#&-(other:MultiIndexable(U))forallU-instance-method\">#&-</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code><a href=\"../Phase/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : <a href=\"../Phase/MultiIndexable.html\">MultiIndexable</a>(U)) forall U","location":{"filename":"src/multi_indexable.cr","line_number":329,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L329"},"def":{"name":"&-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if shape_internal != other.shape_internal\n  if scalar? || other.scalar?\n    raise(DimensionError.new(\"The shape of this MultiIndexable (#{shape_internal}) does not match the shape of the one provided (#{other.shape_internal}), so '&-' cannot be applied element-wise. Did you mean to call to_scalar on one of the arguments?\"))\n  end\n  raise(DimensionError.new(\"The shape of this MultiIndexable (#{shape_internal}) does not match the shape of the one provided (#{other.shape_internal}), so '&-' cannot be applied element-wise.\"))\nend\nmap_with_coord do |elem, coord|\n  elem &- (other.unsafe_fetch_element(coord))\nend\n"}},{"html_id":"&-(other)-instance-method","name":"&-","doc":"Invokes `#&-(other)` on each element in `self`, returning an\n`NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Phase/MultiIndexable.html#&-(other:MultiIndexable(U))forallU-instance-method\">#&-(other)</a></code> on each element in <code>self</code>, returning an <code><a href=\"../Phase/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/multi_indexable.cr","line_number":329,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L329"},"def":{"name":"&-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map(&.&-(other))"}},{"html_id":"*(other:MultiIndexable(U))forallU-instance-method","name":"*","doc":"Invokes `#*` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Phase/MultiIndexable.html#*(other:MultiIndexable(U))forallU-instance-method\">#*</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code><a href=\"../Phase/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : <a href=\"../Phase/MultiIndexable.html\">MultiIndexable</a>(U)) forall U","location":{"filename":"src/multi_indexable.cr","line_number":329,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L329"},"def":{"name":"*","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if shape_internal != other.shape_internal\n  if scalar? || other.scalar?\n    raise(DimensionError.new(\"The shape of this MultiIndexable (#{shape_internal}) does not match the shape of the one provided (#{other.shape_internal}), so '*' cannot be applied element-wise. Did you mean to call to_scalar on one of the arguments?\"))\n  end\n  raise(DimensionError.new(\"The shape of this MultiIndexable (#{shape_internal}) does not match the shape of the one provided (#{other.shape_internal}), so '*' cannot be applied element-wise.\"))\nend\nmap_with_coord do |elem, coord|\n  elem * (other.unsafe_fetch_element(coord))\nend\n"}},{"html_id":"*(other)-instance-method","name":"*","doc":"Invokes `#*(other)` on each element in `self`, returning an\n`NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Phase/MultiIndexable.html#*(other:MultiIndexable(U))forallU-instance-method\">#*(other)</a></code> on each element in <code>self</code>, returning an <code><a href=\"../Phase/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/multi_indexable.cr","line_number":329,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L329"},"def":{"name":"*","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map(&.*(other))"}},{"html_id":"**(other:MultiIndexable(U))forallU-instance-method","name":"**","doc":"Invokes `#**` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Phase/MultiIndexable.html#**(other:MultiIndexable(U))forallU-instance-method\">#**</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code><a href=\"../Phase/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : <a href=\"../Phase/MultiIndexable.html\">MultiIndexable</a>(U)) forall U","location":{"filename":"src/multi_indexable.cr","line_number":329,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L329"},"def":{"name":"**","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if shape_internal != other.shape_internal\n  if scalar? || other.scalar?\n    raise(DimensionError.new(\"The shape of this MultiIndexable (#{shape_internal}) does not match the shape of the one provided (#{other.shape_internal}), so '**' cannot be applied element-wise. Did you mean to call to_scalar on one of the arguments?\"))\n  end\n  raise(DimensionError.new(\"The shape of this MultiIndexable (#{shape_internal}) does not match the shape of the one provided (#{other.shape_internal}), so '**' cannot be applied element-wise.\"))\nend\nmap_with_coord do |elem, coord|\n  elem ** (other.unsafe_fetch_element(coord))\nend\n"}},{"html_id":"**(other)-instance-method","name":"**","doc":"Invokes `#**(other)` on each element in `self`, returning an\n`NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Phase/MultiIndexable.html#**(other:MultiIndexable(U))forallU-instance-method\">#**(other)</a></code> on each element in <code>self</code>, returning an <code><a href=\"../Phase/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/multi_indexable.cr","line_number":329,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L329"},"def":{"name":"**","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map(&.**(other))"}},{"html_id":"+(other:MultiIndexable(U))forallU-instance-method","name":"+","doc":"Invokes `#+` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Phase/MultiIndexable.html#+-instance-method\">#+</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code><a href=\"../Phase/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : <a href=\"../Phase/MultiIndexable.html\">MultiIndexable</a>(U)) forall U","location":{"filename":"src/multi_indexable.cr","line_number":329,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L329"},"def":{"name":"+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if shape_internal != other.shape_internal\n  if scalar? || other.scalar?\n    raise(DimensionError.new(\"The shape of this MultiIndexable (#{shape_internal}) does not match the shape of the one provided (#{other.shape_internal}), so '+' cannot be applied element-wise. Did you mean to call to_scalar on one of the arguments?\"))\n  end\n  raise(DimensionError.new(\"The shape of this MultiIndexable (#{shape_internal}) does not match the shape of the one provided (#{other.shape_internal}), so '+' cannot be applied element-wise.\"))\nend\nmap_with_coord do |elem, coord|\n  elem + (other.unsafe_fetch_element(coord))\nend\n"}},{"html_id":"+(other)-instance-method","name":"+","doc":"Invokes `#+(other)` on each element in `self`, returning an\n`NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Phase/MultiIndexable.html#+(other:MultiIndexable(U))forallU-instance-method\">#+(other)</a></code> on each element in <code>self</code>, returning an <code><a href=\"../Phase/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/multi_indexable.cr","line_number":329,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L329"},"def":{"name":"+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map(&.+(other))"}},{"html_id":"+-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/multi_indexable.cr","line_number":329,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L329"},"def":{"name":"+","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map(&.+)"}},{"html_id":"-(other:MultiIndexable(U))forallU-instance-method","name":"-","doc":"Invokes `#-` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Phase/MultiIndexable.html#--instance-method\">#-</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code><a href=\"../Phase/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : <a href=\"../Phase/MultiIndexable.html\">MultiIndexable</a>(U)) forall U","location":{"filename":"src/multi_indexable.cr","line_number":329,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L329"},"def":{"name":"-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if shape_internal != other.shape_internal\n  if scalar? || other.scalar?\n    raise(DimensionError.new(\"The shape of this MultiIndexable (#{shape_internal}) does not match the shape of the one provided (#{other.shape_internal}), so '-' cannot be applied element-wise. Did you mean to call to_scalar on one of the arguments?\"))\n  end\n  raise(DimensionError.new(\"The shape of this MultiIndexable (#{shape_internal}) does not match the shape of the one provided (#{other.shape_internal}), so '-' cannot be applied element-wise.\"))\nend\nmap_with_coord do |elem, coord|\n  elem - (other.unsafe_fetch_element(coord))\nend\n"}},{"html_id":"-(other)-instance-method","name":"-","doc":"Invokes `#-(other)` on each element in `self`, returning an\n`NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Phase/MultiIndexable.html#-(other:MultiIndexable(U))forallU-instance-method\">#-(other)</a></code> on each element in <code>self</code>, returning an <code><a href=\"../Phase/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/multi_indexable.cr","line_number":329,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L329"},"def":{"name":"-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map(&.-(other))"}},{"html_id":"--instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/multi_indexable.cr","line_number":329,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L329"},"def":{"name":"-","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map(&.-)"}},{"html_id":"/(other:MultiIndexable(U))forallU-instance-method","name":"/","doc":"Invokes `#/` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Phase/MultiIndexable.html#/(other:MultiIndexable(U))forallU-instance-method\">#/</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code><a href=\"../Phase/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : <a href=\"../Phase/MultiIndexable.html\">MultiIndexable</a>(U)) forall U","location":{"filename":"src/multi_indexable.cr","line_number":329,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L329"},"def":{"name":"/","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if shape_internal != other.shape_internal\n  if scalar? || other.scalar?\n    raise(DimensionError.new(\"The shape of this MultiIndexable (#{shape_internal}) does not match the shape of the one provided (#{other.shape_internal}), so '/' cannot be applied element-wise. Did you mean to call to_scalar on one of the arguments?\"))\n  end\n  raise(DimensionError.new(\"The shape of this MultiIndexable (#{shape_internal}) does not match the shape of the one provided (#{other.shape_internal}), so '/' cannot be applied element-wise.\"))\nend\nmap_with_coord do |elem, coord|\n  elem / (other.unsafe_fetch_element(coord))\nend\n"}},{"html_id":"/(other)-instance-method","name":"/","doc":"Invokes `#/(other)` on each element in `self`, returning an\n`NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Phase/MultiIndexable.html#/(other:MultiIndexable(U))forallU-instance-method\">#/(other)</a></code> on each element in <code>self</code>, returning an <code><a href=\"../Phase/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/multi_indexable.cr","line_number":329,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L329"},"def":{"name":"/","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map(&./(other))"}},{"html_id":"//(other:MultiIndexable(U))forallU-instance-method","name":"//","doc":"Invokes `#//` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Phase/MultiIndexable.html#//(other:MultiIndexable(U))forallU-instance-method\">#//</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code><a href=\"../Phase/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : <a href=\"../Phase/MultiIndexable.html\">MultiIndexable</a>(U)) forall U","location":{"filename":"src/multi_indexable.cr","line_number":329,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L329"},"def":{"name":"//","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if shape_internal != other.shape_internal\n  if scalar? || other.scalar?\n    raise(DimensionError.new(\"The shape of this MultiIndexable (#{shape_internal}) does not match the shape of the one provided (#{other.shape_internal}), so '//' cannot be applied element-wise. Did you mean to call to_scalar on one of the arguments?\"))\n  end\n  raise(DimensionError.new(\"The shape of this MultiIndexable (#{shape_internal}) does not match the shape of the one provided (#{other.shape_internal}), so '//' cannot be applied element-wise.\"))\nend\nmap_with_coord do |elem, coord|\n  elem // (other.unsafe_fetch_element(coord))\nend\n"}},{"html_id":"//(other)-instance-method","name":"//","doc":"Invokes `#//(other)` on each element in `self`, returning an\n`NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Phase/MultiIndexable.html#//(other:MultiIndexable(U))forallU-instance-method\">#//(other)</a></code> on each element in <code>self</code>, returning an <code><a href=\"../Phase/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/multi_indexable.cr","line_number":329,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L329"},"def":{"name":"//","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map(&.//(other))"}},{"html_id":"<(other:MultiIndexable(U))forallU-instance-method","name":"<","doc":"Invokes `#<` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Phase/MultiIndexable.html#%3C(other:MultiIndexable(U))forallU-instance-method\">#<</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code><a href=\"../Phase/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : <a href=\"../Phase/MultiIndexable.html\">MultiIndexable</a>(U)) forall U","location":{"filename":"src/multi_indexable.cr","line_number":329,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L329"},"def":{"name":"<","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if shape_internal != other.shape_internal\n  if scalar? || other.scalar?\n    raise(DimensionError.new(\"The shape of this MultiIndexable (#{shape_internal}) does not match the shape of the one provided (#{other.shape_internal}), so '<' cannot be applied element-wise. Did you mean to call to_scalar on one of the arguments?\"))\n  end\n  raise(DimensionError.new(\"The shape of this MultiIndexable (#{shape_internal}) does not match the shape of the one provided (#{other.shape_internal}), so '<' cannot be applied element-wise.\"))\nend\nmap_with_coord do |elem, coord|\n  elem < (other.unsafe_fetch_element(coord))\nend\n"}},{"html_id":"<(other)-instance-method","name":"<","doc":"Invokes `#<(other)` on each element in `self`, returning an\n`NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Phase/MultiIndexable.html#%3C(other:MultiIndexable(U))forallU-instance-method\">#<(other)</a></code> on each element in <code>self</code>, returning an <code><a href=\"../Phase/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/multi_indexable.cr","line_number":329,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L329"},"def":{"name":"<","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map(&.<(other))"}},{"html_id":"<=(other:MultiIndexable(U))forallU-instance-method","name":"<=","doc":"Invokes `#<=` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Phase/MultiIndexable.html#%3C=(other:MultiIndexable(U))forallU-instance-method\">#<=</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code><a href=\"../Phase/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : <a href=\"../Phase/MultiIndexable.html\">MultiIndexable</a>(U)) forall U","location":{"filename":"src/multi_indexable.cr","line_number":329,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L329"},"def":{"name":"<=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if shape_internal != other.shape_internal\n  if scalar? || other.scalar?\n    raise(DimensionError.new(\"The shape of this MultiIndexable (#{shape_internal}) does not match the shape of the one provided (#{other.shape_internal}), so '<=' cannot be applied element-wise. Did you mean to call to_scalar on one of the arguments?\"))\n  end\n  raise(DimensionError.new(\"The shape of this MultiIndexable (#{shape_internal}) does not match the shape of the one provided (#{other.shape_internal}), so '<=' cannot be applied element-wise.\"))\nend\nmap_with_coord do |elem, coord|\n  elem <= (other.unsafe_fetch_element(coord))\nend\n"}},{"html_id":"<=(other)-instance-method","name":"<=","doc":"Invokes `#<=(other)` on each element in `self`, returning an\n`NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Phase/MultiIndexable.html#%3C=(other:MultiIndexable(U))forallU-instance-method\">#<=(other)</a></code> on each element in <code>self</code>, returning an <code><a href=\"../Phase/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/multi_indexable.cr","line_number":329,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L329"},"def":{"name":"<=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map(&.<=(other))"}},{"html_id":"<=>(other:MultiIndexable(U))forallU-instance-method","name":"<=>","doc":"Invokes `#<=>` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Phase/MultiIndexable.html#%3C=%3E(other:MultiIndexable(U))forallU-instance-method\">#<=></a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code><a href=\"../Phase/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : <a href=\"../Phase/MultiIndexable.html\">MultiIndexable</a>(U)) forall U","location":{"filename":"src/multi_indexable.cr","line_number":329,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L329"},"def":{"name":"<=>","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if shape_internal != other.shape_internal\n  if scalar? || other.scalar?\n    raise(DimensionError.new(\"The shape of this MultiIndexable (#{shape_internal}) does not match the shape of the one provided (#{other.shape_internal}), so '<=>' cannot be applied element-wise. Did you mean to call to_scalar on one of the arguments?\"))\n  end\n  raise(DimensionError.new(\"The shape of this MultiIndexable (#{shape_internal}) does not match the shape of the one provided (#{other.shape_internal}), so '<=>' cannot be applied element-wise.\"))\nend\nmap_with_coord do |elem, coord|\n  elem <=> (other.unsafe_fetch_element(coord))\nend\n"}},{"html_id":"<=>(other)-instance-method","name":"<=>","doc":"Invokes `#<=>(other)` on each element in `self`, returning an\n`NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Phase/MultiIndexable.html#%3C=%3E(other:MultiIndexable(U))forallU-instance-method\">#<=>(other)</a></code> on each element in <code>self</code>, returning an <code><a href=\"../Phase/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/multi_indexable.cr","line_number":329,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L329"},"def":{"name":"<=>","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map(&.<=>(other))"}},{"html_id":">(other:MultiIndexable(U))forallU-instance-method","name":">","doc":"Invokes `#>` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Phase/MultiIndexable.html#%3E(other:MultiIndexable(U))forallU-instance-method\">#></a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code><a href=\"../Phase/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : <a href=\"../Phase/MultiIndexable.html\">MultiIndexable</a>(U)) forall U","location":{"filename":"src/multi_indexable.cr","line_number":329,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L329"},"def":{"name":">","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if shape_internal != other.shape_internal\n  if scalar? || other.scalar?\n    raise(DimensionError.new(\"The shape of this MultiIndexable (#{shape_internal}) does not match the shape of the one provided (#{other.shape_internal}), so '>' cannot be applied element-wise. Did you mean to call to_scalar on one of the arguments?\"))\n  end\n  raise(DimensionError.new(\"The shape of this MultiIndexable (#{shape_internal}) does not match the shape of the one provided (#{other.shape_internal}), so '>' cannot be applied element-wise.\"))\nend\nmap_with_coord do |elem, coord|\n  elem > (other.unsafe_fetch_element(coord))\nend\n"}},{"html_id":">(other)-instance-method","name":">","doc":"Invokes `#>(other)` on each element in `self`, returning an\n`NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Phase/MultiIndexable.html#%3E(other:MultiIndexable(U))forallU-instance-method\">#>(other)</a></code> on each element in <code>self</code>, returning an <code><a href=\"../Phase/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/multi_indexable.cr","line_number":329,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L329"},"def":{"name":">","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map(&.>(other))"}},{"html_id":">=(other:MultiIndexable(U))forallU-instance-method","name":">=","doc":"Invokes `#>=` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Phase/MultiIndexable.html#%3E=(other:MultiIndexable(U))forallU-instance-method\">#>=</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code><a href=\"../Phase/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : <a href=\"../Phase/MultiIndexable.html\">MultiIndexable</a>(U)) forall U","location":{"filename":"src/multi_indexable.cr","line_number":329,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L329"},"def":{"name":">=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if shape_internal != other.shape_internal\n  if scalar? || other.scalar?\n    raise(DimensionError.new(\"The shape of this MultiIndexable (#{shape_internal}) does not match the shape of the one provided (#{other.shape_internal}), so '>=' cannot be applied element-wise. Did you mean to call to_scalar on one of the arguments?\"))\n  end\n  raise(DimensionError.new(\"The shape of this MultiIndexable (#{shape_internal}) does not match the shape of the one provided (#{other.shape_internal}), so '>=' cannot be applied element-wise.\"))\nend\nmap_with_coord do |elem, coord|\n  elem >= (other.unsafe_fetch_element(coord))\nend\n"}},{"html_id":">=(other)-instance-method","name":">=","doc":"Invokes `#>=(other)` on each element in `self`, returning an\n`NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Phase/MultiIndexable.html#%3E=(other:MultiIndexable(U))forallU-instance-method\">#>=(other)</a></code> on each element in <code>self</code>, returning an <code><a href=\"../Phase/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/multi_indexable.cr","line_number":329,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L329"},"def":{"name":">=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map(&.>=(other))"}},{"html_id":"[](bool_mask:MultiIndexable(Bool)):self-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"bool_mask","doc":null,"default_value":"","external_name":"bool_mask","restriction":"MultiIndexable(Bool)"}],"args_string":"(bool_mask : MultiIndexable(Bool)) : self","args_html":"(bool_mask : <a href=\"../Phase/MultiIndexable.html\">MultiIndexable</a>(Bool)) : <span class=\"k\">self</span>","location":{"filename":"src/multi_indexable.cr","line_number":142,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L142"},"def":{"name":"[]","args":[{"name":"bool_mask","doc":null,"default_value":"","external_name":"bool_mask","restriction":"MultiIndexable(Bool)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"self"}},{"html_id":"[](region:Indexable|IndexRegion,drop:Bool=MultiIndexable::DROP_BY_DEFAULT)-instance-method","name":"[]","doc":"Copies the elements in `region` to a new `{{@type}}`, and throws an error if `region` is out-of-bounds for this `{{@type}}`.","summary":"<p>Copies the elements in <code>region</code> to a new <code>{{@type}}</code>, and throws an error if <code>region</code> is out-of-bounds for this <code>{{@type}}</code>.</p>","abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"Indexable | IndexRegion"},{"name":"drop","doc":null,"default_value":"MultiIndexable::DROP_BY_DEFAULT","external_name":"drop","restriction":"Bool"}],"args_string":"(region : Indexable | IndexRegion, drop : Bool = MultiIndexable::DROP_BY_DEFAULT)","args_html":"(region : Indexable | <a href=\"../Phase/IndexRegion.html\">IndexRegion</a>, drop : Bool = <span class=\"t\">MultiIndexable</span><span class=\"t\">::</span><span class=\"t\">DROP_BY_DEFAULT</span>)","location":{"filename":"src/multi_indexable.cr","line_number":157,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L157"},"def":{"name":"[]","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"Indexable | IndexRegion"},{"name":"drop","doc":null,"default_value":"MultiIndexable::DROP_BY_DEFAULT","external_name":"drop","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"get_chunk(region)"}},{"html_id":"[](*tuple,drop:Bool=MultiIndexable::DROP_BY_DEFAULT)-instance-method","name":"[]","doc":"Tuple-accepting overload of `#\"[]\"`.","summary":"<p>Tuple-accepting overload of <code>#\"[]\"</code>.</p>","abstract":false,"args":[{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":""},{"name":"drop","doc":null,"default_value":"MultiIndexable::DROP_BY_DEFAULT","external_name":"drop","restriction":"Bool"}],"args_string":"(*tuple, drop : Bool = MultiIndexable::DROP_BY_DEFAULT)","args_html":"(*tuple, drop : Bool = <span class=\"t\">MultiIndexable</span><span class=\"t\">::</span><span class=\"t\">DROP_BY_DEFAULT</span>)","location":{"filename":"src/multi_indexable.cr","line_number":178,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L178"},"def":{"name":"[]","args":[{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":""},{"name":"drop","doc":null,"default_value":"MultiIndexable::DROP_BY_DEFAULT","external_name":"drop","restriction":"Bool"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self[tuple, drop]"}},{"html_id":"[]?(bool_mask:MultiIndexable(Bool)):MultiIndexable(T?)-instance-method","name":"[]?","doc":null,"summary":null,"abstract":false,"args":[{"name":"bool_mask","doc":null,"default_value":"","external_name":"bool_mask","restriction":"MultiIndexable(Bool)"}],"args_string":"(bool_mask : MultiIndexable(Bool)) : MultiIndexable(T?)","args_html":"(bool_mask : <a href=\"../Phase/MultiIndexable.html\">MultiIndexable</a>(Bool)) : <a href=\"../Phase/MultiIndexable.html\">MultiIndexable</a>(T?)","location":{"filename":"src/multi_indexable.cr","line_number":146,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L146"},"def":{"name":"[]?","args":[{"name":"bool_mask","doc":null,"default_value":"","external_name":"bool_mask","restriction":"MultiIndexable(Bool)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"MultiIndexable(T | ::Nil)","visibility":"Public","body":"if bool_mask.shape != shape_internal\n  raise(ShapeError.new(\"Could not use mask: mask shape #{bool_mask.shape} does not match this MultiIndexable's shape (#{shape_internal}).\"))\nend\nbool_mask.map_with_coord do |bool_val, coord|\n  bool_val ? unsafe_fetch_element(coord) : nil\nend\n"}},{"html_id":"[]?(region:Indexable|IndexRegion,drop:Bool=MultiIndexable::DROP_BY_DEFAULT):self?-instance-method","name":"[]?","doc":"Copies the elements in `region` to a new `{{@type}}`, or returns false if `region` is out-of-bounds for this `{{@type}}`.","summary":"<p>Copies the elements in <code>region</code> to a new <code>{{@type}}</code>, or returns false if <code>region</code> is out-of-bounds for this <code>{{@type}}</code>.</p>","abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"Indexable | IndexRegion"},{"name":"drop","doc":null,"default_value":"MultiIndexable::DROP_BY_DEFAULT","external_name":"drop","restriction":"Bool"}],"args_string":"(region : Indexable | IndexRegion, drop : Bool = MultiIndexable::DROP_BY_DEFAULT) : self?","args_html":"(region : Indexable | <a href=\"../Phase/IndexRegion.html\">IndexRegion</a>, drop : Bool = <span class=\"t\">MultiIndexable</span><span class=\"t\">::</span><span class=\"t\">DROP_BY_DEFAULT</span>) : <span class=\"k\">self</span>?","location":{"filename":"src/multi_indexable.cr","line_number":162,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L162"},"def":{"name":"[]?","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"Indexable | IndexRegion"},{"name":"drop","doc":null,"default_value":"MultiIndexable::DROP_BY_DEFAULT","external_name":"drop","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self | ::Nil","visibility":"Public","body":"if has_region?(region)\n  get_chunk(region)\nend\nfalse\n"}},{"html_id":"[]?(*tuple,drop:Bool=MultiIndexable::DROP_BY_DEFAULT)-instance-method","name":"[]?","doc":"Tuple-accepting overload of `#\"[]?\"`.","summary":"<p>Tuple-accepting overload of <code>#\"[]?\"</code>.</p>","abstract":false,"args":[{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":""},{"name":"drop","doc":null,"default_value":"MultiIndexable::DROP_BY_DEFAULT","external_name":"drop","restriction":"Bool"}],"args_string":"(*tuple, drop : Bool = MultiIndexable::DROP_BY_DEFAULT)","args_html":"(*tuple, drop : Bool = <span class=\"t\">MultiIndexable</span><span class=\"t\">::</span><span class=\"t\">DROP_BY_DEFAULT</span>)","location":{"filename":"src/multi_indexable.cr","line_number":178,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L178"},"def":{"name":"[]?","args":[{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":""},{"name":"drop","doc":null,"default_value":"MultiIndexable::DROP_BY_DEFAULT","external_name":"drop","restriction":"Bool"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self[tuple, drop]?"}},{"html_id":"^(other:MultiIndexable(U))forallU-instance-method","name":"^","doc":"Invokes `#^` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Phase/MultiIndexable.html#%5E(other:MultiIndexable(U))forallU-instance-method\">#^</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code><a href=\"../Phase/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : <a href=\"../Phase/MultiIndexable.html\">MultiIndexable</a>(U)) forall U","location":{"filename":"src/multi_indexable.cr","line_number":329,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L329"},"def":{"name":"^","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if shape_internal != other.shape_internal\n  if scalar? || other.scalar?\n    raise(DimensionError.new(\"The shape of this MultiIndexable (#{shape_internal}) does not match the shape of the one provided (#{other.shape_internal}), so '^' cannot be applied element-wise. Did you mean to call to_scalar on one of the arguments?\"))\n  end\n  raise(DimensionError.new(\"The shape of this MultiIndexable (#{shape_internal}) does not match the shape of the one provided (#{other.shape_internal}), so '^' cannot be applied element-wise.\"))\nend\nmap_with_coord do |elem, coord|\n  elem ^ (other.unsafe_fetch_element(coord))\nend\n"}},{"html_id":"^(other)-instance-method","name":"^","doc":"Invokes `#^(other)` on each element in `self`, returning an\n`NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Phase/MultiIndexable.html#%5E(other:MultiIndexable(U))forallU-instance-method\">#^(other)</a></code> on each element in <code>self</code>, returning an <code><a href=\"../Phase/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/multi_indexable.cr","line_number":329,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L329"},"def":{"name":"^","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map(&.^(other))"}},{"html_id":"dimensions:Int-instance-method","name":"dimensions","doc":"Returns the number of indices required to specify an element in `{{@type}}`.","summary":"<p>Returns the number of indices required to specify an element in <code>{{@type}}</code>.</p>","abstract":false,"args":[],"args_string":" : Int","args_html":" : Int","location":{"filename":"src/multi_indexable.cr","line_number":91,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L91"},"def":{"name":"dimensions","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int","visibility":"Public","body":"shape_internal.size"}},{"html_id":"each(iter:CoordIterator(I)):Iterator(T)forallI-instance-method","name":"each","doc":null,"summary":null,"abstract":false,"args":[{"name":"iter","doc":null,"default_value":"","external_name":"iter","restriction":"CoordIterator(I)"}],"args_string":"(iter : CoordIterator(I)) : Iterator(T) forall I","args_html":"(iter : <a href=\"../Phase/CoordIterator.html\">CoordIterator</a>(I)) : Iterator(T) forall I","location":{"filename":"src/multi_indexable.cr","line_number":206,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L206"},"def":{"name":"each","args":[{"name":"iter","doc":null,"default_value":"","external_name":"iter","restriction":"CoordIterator(I)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Iterator(T)","visibility":"Public","body":"ElemIterator.of(self, iter)"}},{"html_id":"each:Iterator(T)-instance-method","name":"each","doc":"The default iterator must be lexicographic","summary":"<p>The default iterator must be lexicographic</p>","abstract":false,"args":[],"args_string":" : Iterator(T)","args_html":" : Iterator(T)","location":{"filename":"src/multi_indexable.cr","line_number":202,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L202"},"def":{"name":"each","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Iterator(T)","visibility":"Public","body":"each(each_coord)"}},{"html_id":"each(&):Nil-instance-method","name":"each","doc":"Block accepting form of \"each\".","summary":"<p>Block accepting form of \"each\".</p>","abstract":false,"args":[],"args_string":"(&) : Nil","args_html":"(&) : Nil","location":{"filename":"src/multi_indexable.cr","line_number":253,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L253"},"def":{"name":"each","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"each.each do |arg|\n  yield arg\nend"}},{"html_id":"each_coord:Iterator-instance-method","name":"each_coord","doc":"Iterators ====================================================================","summary":"<p>Iterators ====================================================================</p>","abstract":false,"args":[],"args_string":" : Iterator","args_html":" : Iterator","location":{"filename":"src/multi_indexable.cr","line_number":197,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L197"},"def":{"name":"each_coord","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Iterator","visibility":"Public","body":"LexIterator.cover(shape)"}},{"html_id":"each_coord(&):Nil-instance-method","name":"each_coord","doc":"Block accepting form of \"each_coord\".","summary":"<p>Block accepting form of \"each_coord\".</p>","abstract":false,"args":[],"args_string":"(&) : Nil","args_html":"(&) : Nil","location":{"filename":"src/multi_indexable.cr","line_number":253,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L253"},"def":{"name":"each_coord","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"each_coord.each do |arg|\n  yield arg\nend"}},{"html_id":"each_slice(axis=0):Iterator-instance-method","name":"each_slice","doc":null,"summary":null,"abstract":false,"args":[{"name":"axis","doc":null,"default_value":"0","external_name":"axis","restriction":""}],"args_string":"(axis = 0) : Iterator","args_html":"(axis = <span class=\"n\">0</span>) : Iterator","location":{"filename":"src/multi_indexable.cr","line_number":241,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L241"},"def":{"name":"each_slice","args":[{"name":"axis","doc":null,"default_value":"0","external_name":"axis","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Iterator","visibility":"Public","body":"chunk_shape = shape\nchunk_shape[axis] = 1\ndegeneracy = Array.new(dimensions, false)\ndegeneracy[axis] = true\nChunkIterator.new(self, chunk_shape, degeneracy: degeneracy)\n"}},{"html_id":"each_slice(&):Nil-instance-method","name":"each_slice","doc":"Block accepting form of \"each_slice\".","summary":"<p>Block accepting form of \"each_slice\".</p>","abstract":false,"args":[],"args_string":"(&) : Nil","args_html":"(&) : Nil","location":{"filename":"src/multi_indexable.cr","line_number":253,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L253"},"def":{"name":"each_slice","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"each_slice.each do |arg|\n  yield arg\nend"}},{"html_id":"each_with_coord(iter:CoordIterator(I)):IteratorforallI-instance-method","name":"each_with_coord","doc":null,"summary":null,"abstract":false,"args":[{"name":"iter","doc":null,"default_value":"","external_name":"iter","restriction":"CoordIterator(I)"}],"args_string":"(iter : CoordIterator(I)) : Iterator forall I","args_html":"(iter : <a href=\"../Phase/CoordIterator.html\">CoordIterator</a>(I)) : Iterator forall I","location":{"filename":"src/multi_indexable.cr","line_number":214,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L214"},"def":{"name":"each_with_coord","args":[{"name":"iter","doc":null,"default_value":"","external_name":"iter","restriction":"CoordIterator(I)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Iterator","visibility":"Public","body":"ElemAndCoordIterator.of(self, iter)"}},{"html_id":"each_with_coord:Iterator-instance-method","name":"each_with_coord","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Iterator","args_html":" : Iterator","location":{"filename":"src/multi_indexable.cr","line_number":210,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L210"},"def":{"name":"each_with_coord","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Iterator","visibility":"Public","body":"each_with_coord(each_coord)"}},{"html_id":"each_with_coord(&):Nil-instance-method","name":"each_with_coord","doc":"Block accepting form of \"each_with_coord\".","summary":"<p>Block accepting form of \"each_with_coord\".</p>","abstract":false,"args":[],"args_string":"(&) : Nil","args_html":"(&) : Nil","location":{"filename":"src/multi_indexable.cr","line_number":253,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L253"},"def":{"name":"each_with_coord","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"each_with_coord.each do |arg|\n  yield arg\nend"}},{"html_id":"empty?:Bool-instance-method","name":"empty?","doc":"Checks that the `{{@type}}` contains no elements.","summary":"<p>Checks that the <code>{{@type}}</code> contains no elements.</p>","abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/multi_indexable.cr","line_number":38,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L38"},"def":{"name":"empty?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"size == 0"}},{"html_id":"eq(other:MultiIndexable(U)):MultiIndexable(Bool)forallU-instance-method","name":"eq","doc":"TODO: rename!\nProduces an NArray(Bool) (by default) describing which elements of self and other are equal.","summary":"<p><span class=\"flag orange\">TODO</span>  rename! Produces an NArray(Bool) (by default) describing which elements of self and other are equal.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) : MultiIndexable(Bool) forall U","args_html":"(other : <a href=\"../Phase/MultiIndexable.html\">MultiIndexable</a>(U)) : <a href=\"../Phase/MultiIndexable.html\">MultiIndexable</a>(Bool) forall U","location":{"filename":"src/multi_indexable.cr","line_number":305,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L305"},"def":{"name":"eq","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"MultiIndexable(Bool)","visibility":"Public","body":"if shape_internal != other.shape_internal\n  raise(DimensionError.new(\"Cannot compute the element-wise equality between this MultiIndexable (shape: #{shape_internal}) and the one provided (shape: #{other.shape_internal}).\"))\nend\nmap_with_coord do |elem, coord|\n  elem == (other.unsafe_fetch_element(coord))\nend\n"}},{"html_id":"eq(value):MultiIndexable(Bool)-instance-method","name":"eq","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value) : MultiIndexable(Bool)","args_html":"(value) : <a href=\"../Phase/MultiIndexable.html\">MultiIndexable</a>(Bool)","location":{"filename":"src/multi_indexable.cr","line_number":315,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L315"},"def":{"name":"eq","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"MultiIndexable(Bool)","visibility":"Public","body":"map do |elem|\n  elem == value\nend"}},{"html_id":"equals?(other:MultiIndexable):Bool-instance-method","name":"equals?","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable"}],"args_string":"(other : MultiIndexable) : Bool","args_html":"(other : <a href=\"../Phase/MultiIndexable.html\">MultiIndexable</a>) : Bool","location":{"filename":"src/multi_indexable.cr","line_number":272,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L272"},"def":{"name":"equals?","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"equals?(other) do |this_elem, other_elem|\n  this_elem == other_elem\nend"}},{"html_id":"equals?(other:MultiIndexable,&):Bool-instance-method","name":"equals?","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable"}],"args_string":"(other : MultiIndexable, &) : Bool","args_html":"(other : <a href=\"../Phase/MultiIndexable.html\">MultiIndexable</a>, &) : Bool","location":{"filename":"src/multi_indexable.cr","line_number":278,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L278"},"def":{"name":"equals?","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable"}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"if shape_internal != other.shape_internal\n  return false\nend\neach_with_coord do |elem, coord|\n  if yield elem, other.unsafe_fetch_element(coord)\n  else\n    return false\n  end\nend\ntrue\n"}},{"html_id":"fast:Iterator(T)-instance-method","name":"fast","doc":"A method to get all elements in this `{{@type}}` when order is irrelevant.\nRecommended that implementers override this method to take advantage of\nthe storage scheme the implementation uses","summary":"<p>A method to get all elements in this <code>{{@type}}</code> when order is irrelevant.</p>","abstract":false,"args":[],"args_string":" : Iterator(T)","args_html":" : Iterator(T)","location":{"filename":"src/multi_indexable.cr","line_number":234,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L234"},"def":{"name":"fast","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Iterator(T)","visibility":"Public","body":"ElemIterator.of(self)"}},{"html_id":"fast(&):Nil-instance-method","name":"fast","doc":"Block accepting form of \"fast\".","summary":"<p>Block accepting form of \"fast\".</p>","abstract":false,"args":[],"args_string":"(&) : Nil","args_html":"(&) : Nil","location":{"filename":"src/multi_indexable.cr","line_number":253,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L253"},"def":{"name":"fast","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"fast.each do |arg|\n  yield arg\nend"}},{"html_id":"first:T-instance-method","name":"first","doc":"Returns the element at position `0` along every axis.","summary":"<p>Returns the element at position <code>0</code> along every axis.</p>","abstract":false,"args":[],"args_string":" : T","args_html":" : T","location":{"filename":"src/multi_indexable.cr","line_number":66,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L66"},"def":{"name":"first","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"if size == 0\n  raise(IndexError.new(\"{{@type}} has zero elements (shape: #{shape_internal}).\"))\nend\nget_element(Array.new(shape_internal.size, 0))\n"}},{"html_id":"get(coord:Indexable):T-instance-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Indexable"}],"args_string":"(coord : Indexable) : T","args_html":"(coord : Indexable) : T","location":{"filename":"src/multi_indexable.cr","line_number":174,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L174"},"def":{"name":"get","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Indexable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"get_element(coord)"}},{"html_id":"get(*tuple)-instance-method","name":"get","doc":"Tuple-accepting overload of `#\"get\"`.","summary":"<p>Tuple-accepting overload of <code>#\"get\"</code>.</p>","abstract":false,"args":[{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":""}],"args_string":"(*tuple)","args_html":"(*tuple)","location":{"filename":"src/multi_indexable.cr","line_number":178,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L178"},"def":{"name":"get","args":[{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.get(tuple)"}},{"html_id":"get_available(region:Indexable,drop:Bool=DROP_BY_DEFAULT)-instance-method","name":"get_available","doc":null,"summary":null,"abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"Indexable"},{"name":"drop","doc":null,"default_value":"DROP_BY_DEFAULT","external_name":"drop","restriction":"Bool"}],"args_string":"(region : Indexable, drop : Bool = DROP_BY_DEFAULT)","args_html":"(region : Indexable, drop : Bool = <span class=\"t\">DROP_BY_DEFAULT</span>)","location":{"filename":"src/multi_indexable.cr","line_number":138,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L138"},"def":{"name":"get_available","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"Indexable"},{"name":"drop","doc":null,"default_value":"DROP_BY_DEFAULT","external_name":"drop","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"unsafe_get_chunk(IndexRegion.new(region, shape_internal, drop, trim_to: shape))"}},{"html_id":"get_available(region:IndexRegion,drop:Bool=DROP_BY_DEFAULT)-instance-method","name":"get_available","doc":null,"summary":null,"abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"IndexRegion"},{"name":"drop","doc":null,"default_value":"DROP_BY_DEFAULT","external_name":"drop","restriction":"Bool"}],"args_string":"(region : IndexRegion, drop : Bool = DROP_BY_DEFAULT)","args_html":"(region : <a href=\"../Phase/IndexRegion.html\">IndexRegion</a>, drop : Bool = <span class=\"t\">DROP_BY_DEFAULT</span>)","location":{"filename":"src/multi_indexable.cr","line_number":134,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L134"},"def":{"name":"get_available","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"IndexRegion"},{"name":"drop","doc":null,"default_value":"DROP_BY_DEFAULT","external_name":"drop","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"unsafe_get_chunk(region.trim!(shape_internal))"}},{"html_id":"get_chunk(region:Indexable,drop:Bool=DROP_BY_DEFAULT)-instance-method","name":"get_chunk","doc":"Copies the elements in `region` to a new `{{@type}}`, and throws an error if `region` is out-of-bounds for this `{{@type}}`.","summary":"<p>Copies the elements in <code>region</code> to a new <code>{{@type}}</code>, and throws an error if <code>region</code> is out-of-bounds for this <code>{{@type}}</code>.</p>","abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"Indexable"},{"name":"drop","doc":null,"default_value":"DROP_BY_DEFAULT","external_name":"drop","restriction":"Bool"}],"args_string":"(region : Indexable, drop : Bool = DROP_BY_DEFAULT)","args_html":"(region : Indexable, drop : Bool = <span class=\"t\">DROP_BY_DEFAULT</span>)","location":{"filename":"src/multi_indexable.cr","line_number":125,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L125"},"def":{"name":"get_chunk","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"Indexable"},{"name":"drop","doc":null,"default_value":"DROP_BY_DEFAULT","external_name":"drop","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"unsafe_fetch_chunk(IndexRegion.new(region, shape_internal, drop))"}},{"html_id":"get_chunk(coord:Indexable,region_shape:Indexable)-instance-method","name":"get_chunk","doc":"\"drags out\" a region of shape region_shape with coord as the top left corner","summary":"<p>\"drags out\" a region of shape region_shape with coord as the top left corner</p>","abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Indexable"},{"name":"region_shape","doc":null,"default_value":"","external_name":"region_shape","restriction":"Indexable"}],"args_string":"(coord : Indexable, region_shape : Indexable)","args_html":"(coord : Indexable, region_shape : Indexable)","location":{"filename":"src/multi_indexable.cr","line_number":130,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L130"},"def":{"name":"get_chunk","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Indexable"},{"name":"region_shape","doc":null,"default_value":"","external_name":"region_shape","restriction":"Indexable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"get_chunk((IndexRegion.new(region_shape)).translate!(coord))"}},{"html_id":"get_chunk(region:IndexRegion):MultiIndexable(T)-instance-method","name":"get_chunk","doc":"Copies the elements in `region` to a new `{{@type}}`, and throws an error if `region` is out-of-bounds for this `{{@type}}`.","summary":"<p>Copies the elements in <code>region</code> to a new <code>{{@type}}</code>, and throws an error if <code>region</code> is out-of-bounds for this <code>{{@type}}</code>.</p>","abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"IndexRegion"}],"args_string":"(region : IndexRegion) : MultiIndexable(T)","args_html":"(region : <a href=\"../Phase/IndexRegion.html\">IndexRegion</a>) : <a href=\"../Phase/MultiIndexable.html\">MultiIndexable</a>(T)","location":{"filename":"src/multi_indexable.cr","line_number":117,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L117"},"def":{"name":"get_chunk","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"IndexRegion"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"MultiIndexable(T)","visibility":"Public","body":"if region.proper_dimensions != dimensions\n  raise(DimensionError.new)\nend\nif region.fits_in?(shape_internal)\nelse\n  raise(ShapeError.new)\nend\nunsafe_fetch_chunk(region)\n"}},{"html_id":"get_chunk(*tuple,drop:Bool=MultiIndexable::DROP_BY_DEFAULT)-instance-method","name":"get_chunk","doc":"Tuple-accepting overload of `#\"get_chunk\"`.","summary":"<p>Tuple-accepting overload of <code>#\"get_chunk\"</code>.</p>","abstract":false,"args":[{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":""},{"name":"drop","doc":null,"default_value":"MultiIndexable::DROP_BY_DEFAULT","external_name":"drop","restriction":"Bool"}],"args_string":"(*tuple, drop : Bool = MultiIndexable::DROP_BY_DEFAULT)","args_html":"(*tuple, drop : Bool = <span class=\"t\">MultiIndexable</span><span class=\"t\">::</span><span class=\"t\">DROP_BY_DEFAULT</span>)","location":{"filename":"src/multi_indexable.cr","line_number":178,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L178"},"def":{"name":"get_chunk","args":[{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":""},{"name":"drop","doc":null,"default_value":"MultiIndexable::DROP_BY_DEFAULT","external_name":"drop","restriction":"Bool"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.get_chunk(tuple, drop)"}},{"html_id":"get_element(coord:Indexable):T-instance-method","name":"get_element","doc":"Retrieves the element specified by `coord`, and throws an error if `coord` is out-of-bounds for this `{{@type}}`.","summary":"<p>Retrieves the element specified by <code>coord</code>, and throws an error if <code>coord</code> is out-of-bounds for this <code>{{@type}}</code>.</p>","abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Indexable"}],"args_string":"(coord : Indexable) : T","args_html":"(coord : Indexable) : T","location":{"filename":"src/multi_indexable.cr","line_number":170,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L170"},"def":{"name":"get_element","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Indexable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"unsafe_fetch_element(CoordUtil.canonicalize_coord(coord, shape_internal))"}},{"html_id":"get_element(*tuple)-instance-method","name":"get_element","doc":"Tuple-accepting overload of `#\"get_element\"`.","summary":"<p>Tuple-accepting overload of <code>#\"get_element\"</code>.</p>","abstract":false,"args":[{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":""}],"args_string":"(*tuple)","args_html":"(*tuple)","location":{"filename":"src/multi_indexable.cr","line_number":178,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L178"},"def":{"name":"get_element","args":[{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.get_element(tuple)"}},{"html_id":"has_coord?(coord:Indexable):Bool-instance-method","name":"has_coord?","doc":"Checks that `coord` is in-bounds for this `{{@type}}`.","summary":"<p>Checks that <code>coord</code> is in-bounds for this <code>{{@type}}</code>.</p>","abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Indexable"}],"args_string":"(coord : Indexable) : Bool","args_html":"(coord : Indexable) : Bool","location":{"filename":"src/multi_indexable.cr","line_number":96,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L96"},"def":{"name":"has_coord?","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Indexable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"CoordUtil.has_coord?(coord, shape_internal)"}},{"html_id":"has_coord?(*tuple)-instance-method","name":"has_coord?","doc":"Tuple-accepting overload of `#\"has_coord?\"`.","summary":"<p>Tuple-accepting overload of <code>#\"has_coord?\"</code>.</p>","abstract":false,"args":[{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":""}],"args_string":"(*tuple)","args_html":"(*tuple)","location":{"filename":"src/multi_indexable.cr","line_number":178,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L178"},"def":{"name":"has_coord?","args":[{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.has_coord?(tuple)"}},{"html_id":"has_region?(region:Indexable):Bool-instance-method","name":"has_region?","doc":"Checks that `region` is in-bounds for this `{{@type}}`.","summary":"<p>Checks that <code>region</code> is in-bounds for this <code>{{@type}}</code>.</p>","abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"Indexable"}],"args_string":"(region : Indexable) : Bool","args_html":"(region : Indexable) : Bool","location":{"filename":"src/multi_indexable.cr","line_number":101,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L101"},"def":{"name":"has_region?","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"Indexable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"begin\n  IndexRegion.new(region, shape_internal)\n  true\nrescue ex : IndexError\n  false\nend"}},{"html_id":"has_region?(*tuple)-instance-method","name":"has_region?","doc":"Tuple-accepting overload of `#\"has_region?\"`.","summary":"<p>Tuple-accepting overload of <code>#\"has_region?\"</code>.</p>","abstract":false,"args":[{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":""}],"args_string":"(*tuple)","args_html":"(*tuple)","location":{"filename":"src/multi_indexable.cr","line_number":178,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L178"},"def":{"name":"has_region?","args":[{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.has_region?(tuple)"}},{"html_id":"hash(hasher)-instance-method","name":"hash","doc":null,"summary":null,"abstract":false,"args":[{"name":"hasher","doc":null,"default_value":"","external_name":"hasher","restriction":""}],"args_string":"(hasher)","args_html":"(hasher)","location":{"filename":"src/multi_indexable.cr","line_number":321,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L321"},"def":{"name":"hash","args":[{"name":"hasher","doc":null,"default_value":"","external_name":"hasher","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"hasher = shape_internal.hash(hasher)\neach do |el|\n  hasher = elem.hash(hasher)\nend\nhasher\n"}},{"html_id":"map(&block:T->R):MultiIndexable(R)forallR-instance-method","name":"map","doc":"By default, gives an NArray","summary":"<p>By default, gives an NArray</p>","abstract":false,"args":[],"args_string":"(&block : T -> R) : MultiIndexable(R) forall R","args_html":"(&block : T -> R) : <a href=\"../Phase/MultiIndexable.html\">MultiIndexable</a>(R) forall R","location":{"filename":"src/multi_indexable.cr","line_number":225,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L225"},"def":{"name":"map","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(T -> R)"},"return_type":"MultiIndexable(R)","visibility":"Public","body":"map_with_coord do |el, coord|\n  yield el\nend"}},{"html_id":"map_with_coord(&)-instance-method","name":"map_with_coord","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&)","args_html":"(&)","location":{"filename":"src/multi_indexable.cr","line_number":218,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L218"},"def":{"name":"map_with_coord","args":[],"double_splat":null,"splat_index":null,"yields":2,"block_arg":null,"return_type":"","visibility":"Public","body":"NArray.build(shape_internal) do |coord, i|\n  yield unsafe_fetch_element(coord), coord\nend"}},{"html_id":"permute(*args):MultiIndexable(T)-instance-method","name":"permute","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args) : MultiIndexable(T)","args_html":"(*args) : <a href=\"../Phase/MultiIndexable.html\">MultiIndexable</a>(T)","location":{"filename":"src/multi_indexable.cr","line_number":260,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L260"},"def":{"name":"permute","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"MultiIndexable(T)","visibility":"Public","body":"(view.permute(*args)).to_narr"}},{"html_id":"process(&block:T->R):ProcView(self,T,R)forallR-instance-method","name":"process","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&block : T -> R) : ProcView(self, T, R) forall R","args_html":"(&block : T -> R) : <a href=\"../Phase/ProcView.html\">ProcView</a>(<span class=\"k\">self</span>, T, R) forall R","location":{"filename":"src/multi_indexable.cr","line_number":295,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L295"},"def":{"name":"process","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(T -> R)"},"return_type":"ProcView(self, T, R)","visibility":"Public","body":"process(block)"}},{"html_id":"process(proc:Proc(T,R)):ProcView(self,T,R)forallR-instance-method","name":"process","doc":null,"summary":null,"abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"Proc(T, R)"}],"args_string":"(proc : Proc(T, R)) : ProcView(self, T, R) forall R","args_html":"(proc : Proc(T, R)) : <a href=\"../Phase/ProcView.html\">ProcView</a>(<span class=\"k\">self</span>, T, R) forall R","location":{"filename":"src/multi_indexable.cr","line_number":299,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L299"},"def":{"name":"process","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"Proc(T, R)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ProcView(self, T, R)","visibility":"Public","body":"ProcView.of(self, proc)"}},{"html_id":"reshape(*args):MultiIndexable(T)-instance-method","name":"reshape","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args) : MultiIndexable(T)","args_html":"(*args) : <a href=\"../Phase/MultiIndexable.html\">MultiIndexable</a>(T)","location":{"filename":"src/multi_indexable.cr","line_number":260,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L260"},"def":{"name":"reshape","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"MultiIndexable(T)","visibility":"Public","body":"(view.reshape(*args)).to_narr"}},{"html_id":"reverse(*args):MultiIndexable(T)-instance-method","name":"reverse","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args) : MultiIndexable(T)","args_html":"(*args) : <a href=\"../Phase/MultiIndexable.html\">MultiIndexable</a>(T)","location":{"filename":"src/multi_indexable.cr","line_number":260,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L260"},"def":{"name":"reverse","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"MultiIndexable(T)","visibility":"Public","body":"(view.reverse(*args)).to_narr"}},{"html_id":"sample(n:Int,random=Random::DEFAULT):Enumerable(T)-instance-method","name":"sample","doc":"Returns a random element from the `{{@type}}`. Note that this might not return\ndistinct elements if the random number generator returns the same coordinate twice.","summary":"<p>Returns a random element from the <code>{{@type}}</code>.</p>","abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Int"},{"name":"random","doc":null,"default_value":"Random::DEFAULT","external_name":"random","restriction":""}],"args_string":"(n : Int, random = Random::DEFAULT) : Enumerable(T)","args_html":"(n : Int, random = <span class=\"t\">Random</span><span class=\"t\">::</span><span class=\"t\">DEFAULT</span>) : Enumerable(T)","location":{"filename":"src/multi_indexable.cr","line_number":76,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L76"},"def":{"name":"sample","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Int"},{"name":"random","doc":null,"default_value":"Random::DEFAULT","external_name":"random","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Enumerable(T)","visibility":"Public","body":"if n < 0\n  raise(ArgumentError.new(\"Can't sample a negative number of elements. (n = #{n}, which is negative)\"))\nend\nArray(T).new(n) do\n  sample(random)\nend\n"}},{"html_id":"sample(random=Random::DEFAULT):T-instance-method","name":"sample","doc":"Returns a random element from the `{{@type}}`.","summary":"<p>Returns a random element from the <code>{{@type}}</code>.</p>","abstract":false,"args":[{"name":"random","doc":null,"default_value":"Random::DEFAULT","external_name":"random","restriction":""}],"args_string":"(random = Random::DEFAULT) : T","args_html":"(random = <span class=\"t\">Random</span><span class=\"t\">::</span><span class=\"t\">DEFAULT</span>) : T","location":{"filename":"src/multi_indexable.cr","line_number":85,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L85"},"def":{"name":"sample","args":[{"name":"random","doc":null,"default_value":"Random::DEFAULT","external_name":"random","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"if empty?\n  raise(ShapeError.new(\"Can't sample empty collection. (shape: #{shape_internal})\"))\nend\nunsafe_fetch_element(shape_internal.map do |dim|\n  random.rand(dim)\nend)\n"}},{"html_id":"scalar?:Bool-instance-method","name":"scalar?","doc":"Checks that this `{{@type}}` is one-dimensional, and contains a single element.","summary":"<p>Checks that this <code>{{@type}}</code> is one-dimensional, and contains a single element.</p>","abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/multi_indexable.cr","line_number":43,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L43"},"def":{"name":"scalar?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"size == 1"}},{"html_id":"shape:Array-instance-method","name":"shape","doc":"Returns the length of the `{{@type}}` in each dimension.\nFor a `coord` to specify an element of the `{{@type}}` it must satisfy `coord[i] < shape[i]` for each `i`.","summary":"<p>Returns the length of the <code>{{@type}}</code> in each dimension.</p>","abstract":true,"args":[],"args_string":" : Array","args_html":" : Array","location":{"filename":"src/multi_indexable.cr","line_number":21,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L21"},"def":{"name":"shape","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array","visibility":"Public","body":""}},{"html_id":"size-instance-method","name":"size","doc":"Returns the number of elements in the `{{@type}}`; equal to `shape.product`.","summary":"<p>Returns the number of elements in the <code>{{@type}}</code>; equal to <code>shape.product</code>.</p>","abstract":true,"args":[],"args_string":"","args_html":"","location":{"filename":"src/multi_indexable.cr","line_number":17,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L17"},"def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"html_id":"slices(axis=0):Enumerable-instance-method","name":"slices","doc":null,"summary":null,"abstract":false,"args":[{"name":"axis","doc":null,"default_value":"0","external_name":"axis","restriction":""}],"args_string":"(axis = 0) : Enumerable","args_html":"(axis = <span class=\"n\">0</span>) : Enumerable","location":{"filename":"src/multi_indexable.cr","line_number":249,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L249"},"def":{"name":"slices","args":[{"name":"axis","doc":null,"default_value":"0","external_name":"axis","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Enumerable","visibility":"Public","body":"each_slice.to_a"}},{"html_id":"to_f:Float-instance-method","name":"to_f","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Float","args_html":" : Float","location":{"filename":"src/multi_indexable.cr","line_number":61,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L61"},"def":{"name":"to_f","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float","visibility":"Public","body":"to_scalar.to_f"}},{"html_id":"to_literal_s(io:IO):Nil-instance-method","name":"to_literal_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","args_html":"(io : IO) : Nil","location":{"filename":"src/formatter/formatter.cr","line_number":261,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/formatter.cr#L261"},"def":{"name":"to_literal_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"Formatter.print_literal(self, io)"}},{"html_id":"to_narr:NArray(T)-instance-method","name":"to_narr","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : NArray(T)","args_html":" : <a href=\"../Phase/NArray.html\">NArray</a>(T)","location":{"filename":"src/multi_indexable.cr","line_number":266,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L266"},"def":{"name":"to_narr","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NArray(T)","visibility":"Public","body":"NArray.build(@shape.dup) do |coord, _|\n  unsafe_fetch_element(coord)\nend"}},{"html_id":"to_s(io:IO,settings=Formatter::Settings.new):Nil-instance-method","name":"to_s","doc":"FIXME: NArrayFormatter depends on buffer indices.","summary":"<p><span class=\"flag yellow\">FIXME</span>  NArrayFormatter depends on buffer indices.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"settings","doc":null,"default_value":"Formatter::Settings.new","external_name":"settings","restriction":""}],"args_string":"(io : IO, settings = Formatter::Settings.new) : Nil","args_html":"(io : IO, settings = <span class=\"t\">Formatter</span><span class=\"t\">::</span><span class=\"t\">Settings</span>.<span class=\"k\">new</span>) : Nil","location":{"filename":"src/formatter/formatter.cr","line_number":273,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/formatter.cr#L273"},"def":{"name":"to_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"settings","doc":null,"default_value":"Formatter::Settings.new","external_name":"settings","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"Formatter.print(self, io, settings: settings)"}},{"html_id":"to_s(settings=Formatter::Settings.new):String-instance-method","name":"to_s","doc":"FIXME: NArrayFormatter depends on buffer indices.","summary":"<p><span class=\"flag yellow\">FIXME</span>  NArrayFormatter depends on buffer indices.</p>","abstract":false,"args":[{"name":"settings","doc":null,"default_value":"Formatter::Settings.new","external_name":"settings","restriction":""}],"args_string":"(settings = Formatter::Settings.new) : String","args_html":"(settings = <span class=\"t\">Formatter</span><span class=\"t\">::</span><span class=\"t\">Settings</span>.<span class=\"k\">new</span>) : String","location":{"filename":"src/formatter/formatter.cr","line_number":266,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/formatter.cr#L266"},"def":{"name":"to_s","args":[{"name":"settings","doc":null,"default_value":"Formatter::Settings.new","external_name":"settings","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"String.build do |str|\n  Formatter.print(self, str, settings: settings)\nend"}},{"html_id":"to_scalar:T-instance-method","name":"to_scalar","doc":"Maps a single-element 1D `{{@type}}` to the element it contains.","summary":"<p>Maps a single-element 1D <code>{{@type}}</code> to the element it contains.</p>","abstract":false,"args":[],"args_string":" : T","args_html":" : T","location":{"filename":"src/multi_indexable.cr","line_number":48,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L48"},"def":{"name":"to_scalar","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"if scalar?\n  first\nelse\n  raise(ShapeError.new(\"Only single-element MultiIndexables can be converted to scalars, but this one has #{size} elements (shape: #{shape_internal}).\"))\nend"}},{"html_id":"to_scalar?:T?-instance-method","name":"to_scalar?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : T?","args_html":" : T?","location":{"filename":"src/multi_indexable.cr","line_number":56,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L56"},"def":{"name":"to_scalar?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T | ::Nil","visibility":"Public","body":"if scalar?\n  return first\nend\nfalse\n"}},{"html_id":"unsafe_fetch_chunk(region:IndexRegion)-instance-method","name":"unsafe_fetch_chunk","doc":"Copies the elements in `region` to a new `{{@type}}`, assuming that `region` is in canonical form and in-bounds for this `{{@type}}`.\nFor full specification of canonical form see `RegionHelpers` documentation. TODO: make this actually happen","summary":"<p>Copies the elements in <code>region</code> to a new <code>{{@type}}</code>, assuming that <code>region</code> is in canonical form and in-bounds for this <code>{{@type}}</code>.</p>","abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"IndexRegion"}],"args_string":"(region : IndexRegion)","args_html":"(region : <a href=\"../Phase/IndexRegion.html\">IndexRegion</a>)","location":{"filename":"src/multi_indexable.cr","line_number":110,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L110"},"def":{"name":"unsafe_fetch_chunk","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"IndexRegion"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"NArray.build(region.shape) do |coord|\n  unsafe_fetch_element(region.local_to_absolute(coord))\nend"}},{"html_id":"unsafe_fetch_element(coord:Coord):T-instance-method","name":"unsafe_fetch_element","doc":"Retrieves the element specified by `coord`, assuming that `coord` is in canonical form and in-bounds for this `{{@type}}`.\nFor full specification of canonical form see `RegionHelpers` documentation. TODO: make this actually happen","summary":"<p>Retrieves the element specified by <code>coord</code>, assuming that <code>coord</code> is in canonical form and in-bounds for this <code>{{@type}}</code>.</p>","abstract":true,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Coord"}],"args_string":"(coord : Coord) : T","args_html":"(coord : <a href=\"../Phase/Coord.html\">Coord</a>) : T","location":{"filename":"src/multi_indexable.cr","line_number":25,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L25"},"def":{"name":"unsafe_fetch_element","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Coord"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":""}},{"html_id":"view(region:Indexable?|IndexRegion=nil):View(self,T)-instance-method","name":"view","doc":null,"summary":null,"abstract":false,"args":[{"name":"region","doc":null,"default_value":"nil","external_name":"region","restriction":"Indexable | ::Nil | IndexRegion"}],"args_string":"(region : Indexable? | IndexRegion = nil) : View(self, T)","args_html":"(region : Indexable? | <a href=\"../Phase/IndexRegion.html\">IndexRegion</a> = <span class=\"n\">nil</span>) : <a href=\"../Phase/View.html\">View</a>(<span class=\"k\">self</span>, T)","location":{"filename":"src/multi_indexable.cr","line_number":286,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L286"},"def":{"name":"view","args":[{"name":"region","doc":null,"default_value":"nil","external_name":"region","restriction":"Indexable | ::Nil | IndexRegion"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"View(self, T)","visibility":"Public","body":"View.of(self, region)"}},{"html_id":"view(*region):View(self,T)-instance-method","name":"view","doc":null,"summary":null,"abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""}],"args_string":"(*region) : View(self, T)","args_html":"(*region) : <a href=\"../Phase/View.html\">View</a>(<span class=\"k\">self</span>, T)","location":{"filename":"src/multi_indexable.cr","line_number":291,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L291"},"def":{"name":"view","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"View(self, T)","visibility":"Public","body":"view(region)"}},{"html_id":"|(other:MultiIndexable(U))forallU-instance-method","name":"|","doc":"Invokes `#|` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Phase/MultiIndexable.html#%7C(other:MultiIndexable(U))forallU-instance-method\">#|</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code><a href=\"../Phase/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : <a href=\"../Phase/MultiIndexable.html\">MultiIndexable</a>(U)) forall U","location":{"filename":"src/multi_indexable.cr","line_number":329,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L329"},"def":{"name":"|","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if shape_internal != other.shape_internal\n  if scalar? || other.scalar?\n    raise(DimensionError.new(\"The shape of this MultiIndexable (#{shape_internal}) does not match the shape of the one provided (#{other.shape_internal}), so '|' cannot be applied element-wise. Did you mean to call to_scalar on one of the arguments?\"))\n  end\n  raise(DimensionError.new(\"The shape of this MultiIndexable (#{shape_internal}) does not match the shape of the one provided (#{other.shape_internal}), so '|' cannot be applied element-wise.\"))\nend\nmap_with_coord do |elem, coord|\n  elem | (other.unsafe_fetch_element(coord))\nend\n"}},{"html_id":"|(other)-instance-method","name":"|","doc":"Invokes `#|(other)` on each element in `self`, returning an\n`NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Phase/MultiIndexable.html#%7C(other:MultiIndexable(U))forallU-instance-method\">#|(other)</a></code> on each element in <code>self</code>, returning an <code><a href=\"../Phase/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/multi_indexable.cr","line_number":329,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L329"},"def":{"name":"|","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map(&.|(other))"}},{"html_id":"~-instance-method","name":"~","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/multi_indexable.cr","line_number":329,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_indexable.cr#L329"},"def":{"name":"~","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map(&.~)"}}],"macros":[],"types":[{"html_id":"ph-core/Phase/MultiIndexable/Formatter","path":"Phase/MultiIndexable/Formatter.html","kind":"class","full_name":"Phase::MultiIndexable::Formatter(E, I)","name":"Formatter","abstract":false,"superclass":{"html_id":"ph-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"ph-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"ph-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/formatter/formatter.cr","line_number":8,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/formatter.cr#L8"},{"filename":"src/formatter/settings.cr","line_number":5,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/settings.cr#L5"}],"repository_name":"ph-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"ph-core/Phase/MultiIndexable","kind":"module","full_name":"Phase::MultiIndexable(T)","name":"MultiIndexable"},"doc":null,"summary":null,"class_methods":[{"html_id":"print(narr:MultiIndexable(E),io:IO=STDOUT,settings=nil)-class-method","name":"print","doc":null,"summary":null,"abstract":false,"args":[{"name":"narr","doc":null,"default_value":"","external_name":"narr","restriction":"MultiIndexable(E)"},{"name":"io","doc":null,"default_value":"STDOUT","external_name":"io","restriction":"IO"},{"name":"settings","doc":null,"default_value":"nil","external_name":"settings","restriction":""}],"args_string":"(narr : MultiIndexable(E), io : IO = STDOUT, settings = nil)","args_html":"(narr : <a href=\"../../Phase/MultiIndexable.html\">MultiIndexable</a>(E), io : IO = <span class=\"t\">STDOUT</span>, settings = <span class=\"n\">nil</span>)","location":{"filename":"src/formatter/formatter.cr","line_number":27,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/formatter.cr#L27"},"def":{"name":"print","args":[{"name":"narr","doc":null,"default_value":"","external_name":"narr","restriction":"MultiIndexable(E)"},{"name":"io","doc":null,"default_value":"STDOUT","external_name":"io","restriction":"IO"},{"name":"settings","doc":null,"default_value":"nil","external_name":"settings","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"settings || (settings = Settings.new)\ndisplay_shape = narr.shape.map_with_index do |dim, i|\n  color = settings.colors[((-i) - 1) % settings.colors.size]\n  dim.to_s.colorize(color)\nend\nio << \"#{display_shape.join('x')} #{if narr.shape.size == 1\n  \"element \"\nend} #{narr.class}\\n\"\n(Formatter(E, typeof(narr.shape[0])).new(narr, io, settings)).print\n"}},{"html_id":"print_literal(narr:MultiIndexable(E),io=STDOUT)-class-method","name":"print_literal","doc":null,"summary":null,"abstract":false,"args":[{"name":"narr","doc":null,"default_value":"","external_name":"narr","restriction":"MultiIndexable(E)"},{"name":"io","doc":null,"default_value":"STDOUT","external_name":"io","restriction":""}],"args_string":"(narr : MultiIndexable(E), io = STDOUT)","args_html":"(narr : <a href=\"../../Phase/MultiIndexable.html\">MultiIndexable</a>(E), io = <span class=\"t\">STDOUT</span>)","location":{"filename":"src/formatter/formatter.cr","line_number":39,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/formatter.cr#L39"},"def":{"name":"print_literal","args":[{"name":"narr","doc":null,"default_value":"","external_name":"narr","restriction":"MultiIndexable(E)"},{"name":"io","doc":null,"default_value":"STDOUT","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"fmt = Formatter(E, typeof(narr.shape[0])).new(narr, io, Settings.new)\nfmt.print_literal\n"}}],"constructors":[{"html_id":"new(narr:MultiIndexable(E),io,settings)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"narr","doc":null,"default_value":"","external_name":"narr","restriction":"MultiIndexable(E)"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""},{"name":"settings","doc":null,"default_value":"","external_name":"settings","restriction":""}],"args_string":"(narr : MultiIndexable(E), io, settings)","args_html":"(narr : <a href=\"../../Phase/MultiIndexable.html\">MultiIndexable</a>(E), io, settings)","location":{"filename":"src/formatter/formatter.cr","line_number":44,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/formatter.cr#L44"},"def":{"name":"new","args":[{"name":"narr","doc":null,"default_value":"","external_name":"narr","restriction":"MultiIndexable(E)"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""},{"name":"settings","doc":null,"default_value":"","external_name":"settings","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Formatter(E, I).allocate\n_.initialize(narr, io, settings)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"close(height,idx)-instance-method","name":"close","doc":null,"summary":null,"abstract":false,"args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":""},{"name":"idx","doc":null,"default_value":"","external_name":"idx","restriction":""}],"args_string":"(height, idx)","args_html":"(height, idx)","location":{"filename":"src/formatter/formatter.cr","line_number":250,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/formatter.cr#L250"},"def":{"name":"close","args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":""},{"name":"idx","doc":null,"default_value":"","external_name":"idx","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"brackets = @settings.brackets[height % @settings.brackets.size]\nif compact?(height)\n  @current_indentation = @current_indentation - (brackets[0] % idx).size\nelse\n  if height != 0\n    newline(-1)\n  end\nend\ncolor_print(brackets[1] % idx, height)\n"}},{"html_id":"format_element(el:Int):String-instance-method","name":"format_element","doc":null,"summary":null,"abstract":false,"args":[{"name":"el","doc":null,"default_value":"","external_name":"el","restriction":"Int"}],"args_string":"(el : Int) : String","args_html":"(el : Int) : String","location":{"filename":"src/formatter/formatter.cr","line_number":172,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/formatter.cr#L172"},"def":{"name":"format_element","args":[{"name":"el","doc":null,"default_value":"","external_name":"el","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"str = @settings.integer_format % el\nif str.size > @justify_length\n  return format_element(BigFloat.new(el))\nend\nstr\n"}},{"html_id":"format_element(el:Float):String-instance-method","name":"format_element","doc":null,"summary":null,"abstract":false,"args":[{"name":"el","doc":null,"default_value":"","external_name":"el","restriction":"Float"}],"args_string":"(el : Float) : String","args_html":"(el : Float) : String","location":{"filename":"src/formatter/formatter.cr","line_number":180,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/formatter.cr#L180"},"def":{"name":"format_element","args":[{"name":"el","doc":null,"default_value":"","external_name":"el","restriction":"Float"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"str = @settings.decimal_format % el\nif str.size > @justify_length\n  separator = str.rindex(/[pe]/i)\n  if separator.nil?\n    str = \"%e\" % el\n    separator = (str.rindex(/[pe]/i)).not_nil!\n  end\n  truncate_length = str.size - @justify_length\n  if (separator - truncate_length) < 3\n    mantissa = str[0]\n  else\n    mantissa = str[...(separator - truncate_length)]\n  end\n  exponent = str[separator..]\n  str = mantissa + exponent\nend\nstr\n"}},{"html_id":"format_element(el:String):String-instance-method","name":"format_element","doc":null,"summary":null,"abstract":false,"args":[{"name":"el","doc":null,"default_value":"","external_name":"el","restriction":"String"}],"args_string":"(el : String) : String","args_html":"(el : String) : String","location":{"filename":"src/formatter/formatter.cr","line_number":209,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/formatter.cr#L209"},"def":{"name":"format_element","args":[{"name":"el","doc":null,"default_value":"","external_name":"el","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"str = el.inspect\nif str.size > @justify_length\n  str = str[0...(@justify_length - 4)] + \"\\\"...\"\nend\nstr\n"}},{"html_id":"format_element(el):String-instance-method","name":"format_element","doc":null,"summary":null,"abstract":false,"args":[{"name":"el","doc":null,"default_value":"","external_name":"el","restriction":""}],"args_string":"(el) : String","args_html":"(el) : String","location":{"filename":"src/formatter/formatter.cr","line_number":217,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/formatter.cr#L217"},"def":{"name":"format_element","args":[{"name":"el","doc":null,"default_value":"","external_name":"el","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"if el.responds_to?(:ph_to_s)\n  str = el.ph_to_s\nelse\n  str = el.inspect\nend\nif str.size > @justify_length\n  str = str[0...(@justify_length - 3)] + \"...\"\nend\nstr\n"}},{"html_id":"measure-instance-method","name":"measure","doc":"get the length of the longest element to be displayed (for justification purposes)","summary":"<p>get the length of the longest element to be displayed (for justification purposes)</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/formatter/formatter.cr","line_number":73,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/formatter.cr#L73"},"def":{"name":"measure","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@justify_length = @settings.max_element_width\n@justify_length = walk_n_measure\n@iter.reset\n"}},{"html_id":"newline(indent_change=0)-instance-method","name":"newline","doc":null,"summary":null,"abstract":false,"args":[{"name":"indent_change","doc":null,"default_value":"0","external_name":"indent_change","restriction":""}],"args_string":"(indent_change = 0)","args_html":"(indent_change = <span class=\"n\">0</span>)","location":{"filename":"src/formatter/formatter.cr","line_number":234,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/formatter.cr#L234"},"def":{"name":"newline","args":[{"name":"indent_change","doc":null,"default_value":"0","external_name":"indent_change","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@io << \"\\n\"\n@current_indentation = @current_indentation + (indent_change * @settings.indent_width)\n@io << (\" \" * @current_indentation)\n"}},{"html_id":"open(height,idx)-instance-method","name":"open","doc":null,"summary":null,"abstract":false,"args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":""},{"name":"idx","doc":null,"default_value":"","external_name":"idx","restriction":""}],"args_string":"(height, idx)","args_html":"(height, idx)","location":{"filename":"src/formatter/formatter.cr","line_number":240,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/formatter.cr#L240"},"def":{"name":"open","args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":""},{"name":"idx","doc":null,"default_value":"","external_name":"idx","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"brackets = @settings.brackets[height % @settings.brackets.size]\ncolor_print(brackets[0] % idx, height)\nif compact?(height)\n  @current_indentation = @current_indentation + (brackets[0] % idx).size\nelse\n  if height != 0\n    newline(1)\n  end\nend\n"}},{"html_id":"print-instance-method","name":"print","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/formatter/formatter.cr","line_number":79,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/formatter.cr#L79"},"def":{"name":"print","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"measure\nwalk_n_print\n@iter.reset\n"}},{"html_id":"print_literal-instance-method","name":"print_literal","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/formatter/formatter.cr","line_number":85,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/formatter.cr#L85"},"def":{"name":"print_literal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"walk_n_print_flat\n@iter.reset\n"}}],"macros":[],"types":[{"html_id":"ph-core/Phase/MultiIndexable/Formatter/Settings","path":"Phase/MultiIndexable/Formatter/Settings.html","kind":"class","full_name":"Phase::MultiIndexable::Formatter::Settings","name":"Settings","abstract":false,"superclass":{"html_id":"ph-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"ph-core/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"ph-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"ph-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/formatter/settings.cr","line_number":6,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/settings.cr#L6"}],"repository_name":"ph-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"USER_CONFIG_FILENAME","name":"USER_CONFIG_FILENAME","value":"\"formatter.yaml\"","doc":null,"summary":null}],"included_modules":[{"html_id":"ph-core/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"ph-core/Phase/MultiIndexable/Formatter","kind":"class","full_name":"Phase::MultiIndexable::Formatter(E, I)","name":"Formatter"},"doc":null,"summary":null,"class_methods":[{"html_id":"project_settings=(project_settings:self?)-class-method","name":"project_settings=","doc":null,"summary":null,"abstract":false,"args":[{"name":"project_settings","doc":null,"default_value":"","external_name":"project_settings","restriction":"self | ::Nil"}],"args_string":"(project_settings : self?)","args_html":"(project_settings : <span class=\"k\">self</span>?)","location":{"filename":"src/formatter/settings.cr","line_number":14,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/settings.cr#L14"},"def":{"name":"project_settings=","args":[{"name":"project_settings","doc":null,"default_value":"","external_name":"project_settings","restriction":"self | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@project_settings = project_settings"}}],"constructors":[{"html_id":"default:self-class-method","name":"default","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : self","args_html":" : <span class=\"k\">self</span>","location":{"filename":"src/formatter/settings.cr","line_number":76,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/settings.cr#L76"},"def":{"name":"default","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"new(indent_width: 4, max_element_width: 15, omit_after: [10, 5], brackets: [{\"[\", \"]\"}], colors: [:default], collapse_brackets_after: 5, integer_format: \"%d\", decimal_format: \"%.3g\")"}},{"html_id":"new(indent_width,max_element_width,omit_afterdisplay_limit,brackets,colors,collapse_brackets_aftercollapse_height,integer_format,decimal_format)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"indent_width","doc":null,"default_value":"","external_name":"indent_width","restriction":""},{"name":"max_element_width","doc":null,"default_value":"","external_name":"max_element_width","restriction":""},{"name":"display_limit","doc":null,"default_value":"","external_name":"omit_after","restriction":""},{"name":"brackets","doc":null,"default_value":"","external_name":"brackets","restriction":""},{"name":"colors","doc":null,"default_value":"","external_name":"colors","restriction":""},{"name":"collapse_height","doc":null,"default_value":"","external_name":"collapse_brackets_after","restriction":""},{"name":"integer_format","doc":null,"default_value":"","external_name":"integer_format","restriction":""},{"name":"decimal_format","doc":null,"default_value":"","external_name":"decimal_format","restriction":""}],"args_string":"(indent_width, max_element_width, omit_after display_limit, brackets, colors, collapse_brackets_after collapse_height, integer_format, decimal_format)","args_html":"(indent_width, max_element_width, omit_after display_limit, brackets, colors, collapse_brackets_after collapse_height, integer_format, decimal_format)","location":{"filename":"src/formatter/settings.cr","line_number":37,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/settings.cr#L37"},"def":{"name":"new","args":[{"name":"indent_width","doc":null,"default_value":"","external_name":"indent_width","restriction":""},{"name":"max_element_width","doc":null,"default_value":"","external_name":"max_element_width","restriction":""},{"name":"display_limit","doc":null,"default_value":"","external_name":"omit_after","restriction":""},{"name":"brackets","doc":null,"default_value":"","external_name":"brackets","restriction":""},{"name":"colors","doc":null,"default_value":"","external_name":"colors","restriction":""},{"name":"collapse_height","doc":null,"default_value":"","external_name":"collapse_brackets_after","restriction":""},{"name":"integer_format","doc":null,"default_value":"","external_name":"integer_format","restriction":""},{"name":"decimal_format","doc":null,"default_value":"","external_name":"decimal_format","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(indent_width, max_element_width, display_limit, brackets, colors, collapse_height, integer_format, decimal_format)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","location":{"filename":"src/formatter/settings.cr","line_number":7,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/settings.cr#L7"},"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new_from_yaml_node(ctx, node)"}},{"html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/formatter/settings.cr","line_number":33,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/settings.cr#L33"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(@@project_settings || user_settings) || default"}},{"html_id":"project_settings:self?-class-method","name":"project_settings","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : self?","args_html":" : <span class=\"k\">self</span>?","location":{"filename":"src/formatter/settings.cr","line_number":14,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/settings.cr#L14"},"def":{"name":"project_settings","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self | ::Nil","visibility":"Public","body":"@@project_settings"}},{"html_id":"user_settings:self?-class-method","name":"user_settings","doc":"TODO: document properly once this is set in stone\ntries to read from PHASE_CONFIG_DIR - if the file isn't there,\nreads from XDG_CONFIG_DIR/phase. if still not there, tries ~/.config\nTODO: Better error message for failed read","summary":"<p><span class=\"flag orange\">TODO</span>  document properly once this is set in stone tries to read from PHASE_CONFIG_DIR - if the file isn't there, reads from XDG_CONFIG_DIR/phase.</p>","abstract":false,"args":[],"args_string":" : self?","args_html":" : <span class=\"k\">self</span>?","location":{"filename":"src/formatter/settings.cr","line_number":47,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/settings.cr#L47"},"def":{"name":"user_settings","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self | ::Nil","visibility":"Public","body":"if @@disable_user_settings\n  return nil\nend\nif @@cached_user_settings\n  return @@cached_user_settings\nend\nif dir = ENV[\"PHASE_CONFIG_DIR\"]?\n  path = (Path[dir] / USER_CONFIG_FILENAME).expand(home: true)\n  if File.exists?(path)\n    return @@cached_user_settings = from_yaml(File.read(path))\n  end\nend\n{ENV[\"XDG_CONFIG_DIR\"]?, \"~/.config\"}.each do |dir|\n  if dir\n    path = ((Path[dir] / \"phase\") / USER_CONFIG_FILENAME).expand(home: true)\n    if File.exists?(path)\n      return @@cached_user_settings = from_yaml(File.read(path))\n    end\n  end\nend\n@@disable_user_settings = true\nreturn nil\n"}}],"instance_methods":[{"html_id":"brackets:Array(Tuple(String,String))-instance-method","name":"brackets","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Tuple(String, String))","args_html":" : Array(Tuple(String, String))","location":{"filename":"src/formatter/settings.cr","line_number":22,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/settings.cr#L22"},"def":{"name":"brackets","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Tuple(String, String))","visibility":"Public","body":"@brackets"}},{"html_id":"brackets=(brackets:Array(Tuple(String,String)))-instance-method","name":"brackets=","doc":null,"summary":null,"abstract":false,"args":[{"name":"brackets","doc":null,"default_value":"","external_name":"brackets","restriction":"Array(Tuple(String, String))"}],"args_string":"(brackets : Array(Tuple(String, String)))","args_html":"(brackets : Array(Tuple(String, String)))","location":{"filename":"src/formatter/settings.cr","line_number":22,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/settings.cr#L22"},"def":{"name":"brackets=","args":[{"name":"brackets","doc":null,"default_value":"","external_name":"brackets","restriction":"Array(Tuple(String, String))"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@brackets = brackets"}},{"html_id":"collapse_height:Int32-instance-method","name":"collapse_height","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/formatter/settings.cr","line_number":28,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/settings.cr#L28"},"def":{"name":"collapse_height","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@collapse_height"}},{"html_id":"collapse_height=(collapse_height:Int32)-instance-method","name":"collapse_height=","doc":null,"summary":null,"abstract":false,"args":[{"name":"collapse_height","doc":null,"default_value":"","external_name":"collapse_height","restriction":"Int32"}],"args_string":"(collapse_height : Int32)","args_html":"(collapse_height : Int32)","location":{"filename":"src/formatter/settings.cr","line_number":28,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/settings.cr#L28"},"def":{"name":"collapse_height=","args":[{"name":"collapse_height","doc":null,"default_value":"","external_name":"collapse_height","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@collapse_height = collapse_height"}},{"html_id":"colors:Array(Colorize::ColorRGB|Symbol)-instance-method","name":"colors","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Colorize::ColorRGB | Symbol)","args_html":" : Array(Colorize::ColorRGB | Symbol)","location":{"filename":"src/formatter/settings.cr","line_number":25,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/settings.cr#L25"},"def":{"name":"colors","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Colorize::ColorRGB | Symbol)","visibility":"Public","body":"@colors"}},{"html_id":"colors=(colors:Array(Colorize::ColorRGB|Symbol))-instance-method","name":"colors=","doc":null,"summary":null,"abstract":false,"args":[{"name":"colors","doc":null,"default_value":"","external_name":"colors","restriction":"Array(Colorize::ColorRGB | Symbol)"}],"args_string":"(colors : Array(Colorize::ColorRGB | Symbol))","args_html":"(colors : Array(Colorize::ColorRGB | Symbol))","location":{"filename":"src/formatter/settings.cr","line_number":25,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/settings.cr#L25"},"def":{"name":"colors=","args":[{"name":"colors","doc":null,"default_value":"","external_name":"colors","restriction":"Array(Colorize::ColorRGB | Symbol)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@colors = colors"}},{"html_id":"decimal_format:String-instance-method","name":"decimal_format","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/formatter/settings.cr","line_number":31,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/settings.cr#L31"},"def":{"name":"decimal_format","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@decimal_format"}},{"html_id":"decimal_format=(decimal_format:String)-instance-method","name":"decimal_format=","doc":null,"summary":null,"abstract":false,"args":[{"name":"decimal_format","doc":null,"default_value":"","external_name":"decimal_format","restriction":"String"}],"args_string":"(decimal_format : String)","args_html":"(decimal_format : String)","location":{"filename":"src/formatter/settings.cr","line_number":31,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/settings.cr#L31"},"def":{"name":"decimal_format=","args":[{"name":"decimal_format","doc":null,"default_value":"","external_name":"decimal_format","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@decimal_format = decimal_format"}},{"html_id":"display_limit:Array(Int32)-instance-method","name":"display_limit","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Int32)","args_html":" : Array(Int32)","location":{"filename":"src/formatter/settings.cr","line_number":20,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/settings.cr#L20"},"def":{"name":"display_limit","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"@display_limit"}},{"html_id":"display_limit=(display_limit:Array(Int32))-instance-method","name":"display_limit=","doc":null,"summary":null,"abstract":false,"args":[{"name":"display_limit","doc":null,"default_value":"","external_name":"display_limit","restriction":"Array(Int32)"}],"args_string":"(display_limit : Array(Int32))","args_html":"(display_limit : Array(Int32))","location":{"filename":"src/formatter/settings.cr","line_number":20,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/settings.cr#L20"},"def":{"name":"display_limit=","args":[{"name":"display_limit","doc":null,"default_value":"","external_name":"display_limit","restriction":"Array(Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@display_limit = display_limit"}},{"html_id":"indent_width:Int32-instance-method","name":"indent_width","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/formatter/settings.cr","line_number":16,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/settings.cr#L16"},"def":{"name":"indent_width","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@indent_width"}},{"html_id":"indent_width=(indent_width:Int32)-instance-method","name":"indent_width=","doc":null,"summary":null,"abstract":false,"args":[{"name":"indent_width","doc":null,"default_value":"","external_name":"indent_width","restriction":"Int32"}],"args_string":"(indent_width : Int32)","args_html":"(indent_width : Int32)","location":{"filename":"src/formatter/settings.cr","line_number":16,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/settings.cr#L16"},"def":{"name":"indent_width=","args":[{"name":"indent_width","doc":null,"default_value":"","external_name":"indent_width","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@indent_width = indent_width"}},{"html_id":"integer_format:String-instance-method","name":"integer_format","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/formatter/settings.cr","line_number":30,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/settings.cr#L30"},"def":{"name":"integer_format","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@integer_format"}},{"html_id":"integer_format=(integer_format:String)-instance-method","name":"integer_format=","doc":null,"summary":null,"abstract":false,"args":[{"name":"integer_format","doc":null,"default_value":"","external_name":"integer_format","restriction":"String"}],"args_string":"(integer_format : String)","args_html":"(integer_format : String)","location":{"filename":"src/formatter/settings.cr","line_number":30,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/settings.cr#L30"},"def":{"name":"integer_format=","args":[{"name":"integer_format","doc":null,"default_value":"","external_name":"integer_format","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@integer_format = integer_format"}},{"html_id":"max_element_width:Int32-instance-method","name":"max_element_width","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/formatter/settings.cr","line_number":17,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/settings.cr#L17"},"def":{"name":"max_element_width","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@max_element_width"}},{"html_id":"max_element_width=(max_element_width:Int32)-instance-method","name":"max_element_width=","doc":null,"summary":null,"abstract":false,"args":[{"name":"max_element_width","doc":null,"default_value":"","external_name":"max_element_width","restriction":"Int32"}],"args_string":"(max_element_width : Int32)","args_html":"(max_element_width : Int32)","location":{"filename":"src/formatter/settings.cr","line_number":17,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/settings.cr#L17"},"def":{"name":"max_element_width=","args":[{"name":"max_element_width","doc":null,"default_value":"","external_name":"max_element_width","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@max_element_width = max_element_width"}}],"macros":[],"types":[{"html_id":"ph-core/Phase/MultiIndexable/Formatter/Settings/ColorConverter","path":"Phase/MultiIndexable/Formatter/Settings/ColorConverter.html","kind":"class","full_name":"Phase::MultiIndexable::Formatter::Settings::ColorConverter","name":"ColorConverter","abstract":false,"superclass":{"html_id":"ph-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"ph-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"ph-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/formatter/settings.cr","line_number":90,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/settings.cr#L90"}],"repository_name":"ph-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"COLOR_MAP","name":"COLOR_MAP","value":"{\"default\" => :default, \"black\" => :black, \"red\" => :red, \"green\" => :green, \"yellow\" => :yellow, \"blue\" => :blue, \"magenta\" => :magenta, \"cyan\" => :cyan, \"light_gray\" => :light_gray, \"dark_gray\" => :dark_gray, \"light_red\" => :light_red, \"light_green\" => :light_green, \"light_yellow\" => :light_yellow, \"light_blue\" => :light_blue, \"light_magenta\" => :light_magenta, \"light_cyan\" => :light_cyan, \"white\" => :white}","doc":"NOTE: I tried generating this with macros, but nothing was\nas effective as just hardcoding it.","summary":"<p><span class=\"flag purple\">NOTE</span>  I tried generating this with macros, but nothing was as effective as just hardcoding it.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"ph-core/Phase/MultiIndexable/Formatter/Settings","kind":"class","full_name":"Phase::MultiIndexable::Formatter::Settings","name":"Settings"},"doc":null,"summary":null,"class_methods":[{"html_id":"from_yaml(ctx:YAML::ParseContext,node:YAML::Nodes::Node):Symbol|Colorize::ColorRGB-class-method","name":"from_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node) : Symbol | Colorize::ColorRGB","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node) : Symbol | Colorize::ColorRGB","location":{"filename":"src/formatter/settings.cr","line_number":111,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/settings.cr#L111"},"def":{"name":"from_yaml","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Symbol | Colorize::ColorRGB","visibility":"Public","body":"if node.is_a?(YAML::Nodes::Scalar)\nelse\n  node.raise(\"Expected scalar, not #{node.kind}\")\n  return :yikes\nend\nif str = node.value\n  if sym = COLOR_MAP[str]?\n    return sym\n  else\n    if (rgb = str.hexbytes?) && (rgb.size == 3)\n      return Colorize::ColorRGB.new(rgb[0], rgb[1], rgb[2])\n    end\n  end\nend\nnode.raise(\"  Expected #{(COLOR_MAP.keys.map(&.inspect)).join(\", \")}, \\n  or an RGB hex string, not #{node.value.inspect}. \\n  #{if node.value.empty?\n  \"Recall that '#' starts a comment in YAML, and should be \\n            omitted from your color codes.\"\nend}\")\nreturn Colorize::ColorRGB.new(0, 0, 0)\n"}},{"html_id":"to_yaml(value:Symbol,yaml:YAML::Nodes::Builder)-class-method","name":"to_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Symbol"},{"name":"yaml","doc":null,"default_value":"","external_name":"yaml","restriction":"YAML::Nodes::Builder"}],"args_string":"(value : Symbol, yaml : YAML::Nodes::Builder)","args_html":"(value : Symbol, yaml : YAML::Nodes::Builder)","location":{"filename":"src/formatter/settings.cr","line_number":139,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/settings.cr#L139"},"def":{"name":"to_yaml","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Symbol"},{"name":"yaml","doc":null,"default_value":"","external_name":"yaml","restriction":"YAML::Nodes::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"yaml.scalar(value.to_s)"}},{"html_id":"to_yaml(v:Colorize::ColorRGB,yaml:YAML::Nodes::Builder)-class-method","name":"to_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"Colorize::ColorRGB"},{"name":"yaml","doc":null,"default_value":"","external_name":"yaml","restriction":"YAML::Nodes::Builder"}],"args_string":"(v : Colorize::ColorRGB, yaml : YAML::Nodes::Builder)","args_html":"(v : Colorize::ColorRGB, yaml : YAML::Nodes::Builder)","location":{"filename":"src/formatter/settings.cr","line_number":143,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/formatter/settings.cr#L143"},"def":{"name":"to_yaml","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"Colorize::ColorRGB"},{"name":"yaml","doc":null,"default_value":"","external_name":"yaml","restriction":"YAML::Nodes::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"yaml.scalar(\"##{Bytes[v.red, v.green, v.blue].hexdump.upcase}\")"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]}]}]},{"html_id":"ph-core/Phase/MultiWritable","path":"Phase/MultiWritable.html","kind":"module","full_name":"Phase::MultiWritable(T)","name":"MultiWritable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/multi_writable.cr","line_number":2,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_writable.cr#L2"}],"repository_name":"ph-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"ph-core/Phase/NArray","kind":"class","full_name":"Phase::NArray(T)","name":"NArray"},{"html_id":"ph-core/Phase/View","kind":"class","full_name":"Phase::View(S, R)","name":"View"}],"namespace":{"html_id":"ph-core/Phase","kind":"module","full_name":"Phase","name":"Phase"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"html_id":"[]=(region:Indexable|IndexRegion,value)-instance-method","name":"[]=","doc":"See `#set_chunk(region : Enumerable, value)`","summary":"<p>See <code><a href=\"../Phase/MultiWritable.html#set_chunk(region_literal:Indexable,src:MultiIndexable(T))-instance-method\">#set_chunk(region : Enumerable, value)</a></code></p>","abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"Indexable | IndexRegion"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(region : Indexable | IndexRegion, value)","args_html":"(region : Indexable | <a href=\"../Phase/IndexRegion.html\">IndexRegion</a>, value)","location":{"filename":"src/multi_writable.cr","line_number":73,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_writable.cr#L73"},"def":{"name":"[]=","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"Indexable | IndexRegion"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"set_chunk(region, value)"}},{"html_id":"[]=(bool_mask:MultiIndexable(Bool),value)-instance-method","name":"[]=","doc":"The general form is a <op>= b and the compiler transform that into a = a <op> b.\na[i] ||= b transforms to a[i] = (a[i]? || b)\na[pred] *= -1\na[pred] = a[pred]? * -1\ndef []?(narr : MultiIndexable(Bool), value) # = this returns\ndef []=(pred : MultiIndexable(Bool), src : MultiIndexable(T?))\nTODO: consider overriding these in NArray, may benefit from speedup?","summary":"<p>The general form is a &lt;op>= b and the compiler transform that into a = a &lt;op> b.</p>","abstract":false,"args":[{"name":"bool_mask","doc":null,"default_value":"","external_name":"bool_mask","restriction":"MultiIndexable(Bool)"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(bool_mask : MultiIndexable(Bool), value)","args_html":"(bool_mask : <a href=\"../Phase/MultiIndexable.html\">MultiIndexable</a>(Bool), value)","location":{"filename":"src/multi_writable.cr","line_number":90,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_writable.cr#L90"},"def":{"name":"[]=","args":[{"name":"bool_mask","doc":null,"default_value":"","external_name":"bool_mask","restriction":"MultiIndexable(Bool)"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"set_mask(bool_mask, value)"}},{"html_id":"[]=(*args)-instance-method","name":"[]=","doc":"These two should go last","summary":"<p>These two should go last</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args)","args_html":"(*args)","location":{"filename":"src/multi_writable.cr","line_number":78,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_writable.cr#L78"},"def":{"name":"[]=","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"set_chunk(args[...-1].to_a, args.last)"}},{"html_id":"set_available(region:Indexable,value:T)-instance-method","name":"set_available","doc":null,"summary":null,"abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"Indexable"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"args_string":"(region : Indexable, value : T)","args_html":"(region : Indexable, value : T)","location":{"filename":"src/multi_writable.cr","line_number":68,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_writable.cr#L68"},"def":{"name":"set_available","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"Indexable"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"unsafe_set_chunk(IndexRegion.new(region, trim_to: shape))"}},{"html_id":"set_chunk(region_literal:Indexable,src:MultiIndexable(T))-instance-method","name":"set_chunk","doc":"NOTE: changed name from 'value' to 'src' - approve?\nCopies the elements from a MultiIndexable `src` into `region`.\nRaises an error if `region` is out-of-bounds for this `{{@type}}` or if the shape of `region` does not match `src.shape`","summary":"<p><span class=\"flag purple\">NOTE</span>  changed name from 'value' to 'src' - approve? Copies the elements from a MultiIndexable <code>src</code> into <code>region</code>.</p>","abstract":false,"args":[{"name":"region_literal","doc":null,"default_value":"","external_name":"region_literal","restriction":"Indexable"},{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"MultiIndexable(T)"}],"args_string":"(region_literal : Indexable, src : MultiIndexable(T))","args_html":"(region_literal : Indexable, src : <a href=\"../Phase/MultiIndexable.html\">MultiIndexable</a>(T))","location":{"filename":"src/multi_writable.cr","line_number":52,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_writable.cr#L52"},"def":{"name":"set_chunk","args":[{"name":"region_literal","doc":null,"default_value":"","external_name":"region_literal","restriction":"Indexable"},{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"MultiIndexable(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"idx_region = IndexRegion.new(region_literal, shape_internal)\nif !(ShapeUtil.compatible_shapes?(src.shape_internal, idx_region.shape))\n  raise(DimensionError.new(\"Cannot substitute #{typeof(src)}: the given #{typeof(src)} has shape #{src.shape_internal}, but region #{idx_region} has shape #{idx_region.shape}.\"))\nend\nunsafe_set_chunk(idx_region, src)\n"}},{"html_id":"set_chunk(region:Indexable|IndexRegion,value:T)-instance-method","name":"set_chunk","doc":"Sets each element in `region` to `value`.\nRaises an error if `region` is out-of-bounds for this `{{@type}}`.","summary":"<p>Sets each element in <code>region</code> to <code>value</code>.</p>","abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"Indexable | IndexRegion"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"args_string":"(region : Indexable | IndexRegion, value : T)","args_html":"(region : Indexable | <a href=\"../Phase/IndexRegion.html\">IndexRegion</a>, value : T)","location":{"filename":"src/multi_writable.cr","line_number":64,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_writable.cr#L64"},"def":{"name":"set_chunk","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"Indexable | IndexRegion"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"unsafe_set_chunk(IndexRegion.new(region, shape_internal), value)"}},{"html_id":"set_element(coord:Indexable,value:T)-instance-method","name":"set_element","doc":"Sets the element specified by `coord` to `value`.\nRaises an error if `coord` is out-of-bounds for this `{{@type}}`.","summary":"<p>Sets the element specified by <code>coord</code> to <code>value</code>.</p>","abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Indexable"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"args_string":"(coord : Indexable, value : T)","args_html":"(coord : Indexable, value : T)","location":{"filename":"src/multi_writable.cr","line_number":45,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_writable.cr#L45"},"def":{"name":"set_element","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Indexable"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"unsafe_set_element(CoordUtil.canonicalize_coord(coord, shape_internal), value)"}},{"html_id":"set_mask(bool_mask,src:MultiIndexable(T))-instance-method","name":"set_mask","doc":null,"summary":null,"abstract":false,"args":[{"name":"bool_mask","doc":null,"default_value":"","external_name":"bool_mask","restriction":""},{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"MultiIndexable(T)"}],"args_string":"(bool_mask, src : MultiIndexable(T))","args_html":"(bool_mask, src : <a href=\"../Phase/MultiIndexable.html\">MultiIndexable</a>(T))","location":{"filename":"src/multi_writable.cr","line_number":94,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_writable.cr#L94"},"def":{"name":"set_mask","args":[{"name":"bool_mask","doc":null,"default_value":"","external_name":"bool_mask","restriction":""},{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"MultiIndexable(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if src.shape != shape_internal\n  raise(ShapeError.new(\"Cannot perform masking: source shape #{src.shape} does not match array shape #{shape_internal}.\"))\nend\nset_mask(bool_mask) do |coord|\n  (src.unsafe_fetch_element(coord)).as(T)\nend\n"}},{"html_id":"set_mask(bool_mask,value)-instance-method","name":"set_mask","doc":null,"summary":null,"abstract":false,"args":[{"name":"bool_mask","doc":null,"default_value":"","external_name":"bool_mask","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(bool_mask, value)","args_html":"(bool_mask, value)","location":{"filename":"src/multi_writable.cr","line_number":101,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_writable.cr#L101"},"def":{"name":"set_mask","args":[{"name":"bool_mask","doc":null,"default_value":"","external_name":"bool_mask","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"set_mask(bool_mask) do\n  value\nend"}},{"html_id":"set_mask(bool_mask:MultiIndexable(Bool),&)-instance-method","name":"set_mask","doc":null,"summary":null,"abstract":false,"args":[{"name":"bool_mask","doc":null,"default_value":"","external_name":"bool_mask","restriction":"MultiIndexable(Bool)"}],"args_string":"(bool_mask : MultiIndexable(Bool), &)","args_html":"(bool_mask : <a href=\"../Phase/MultiIndexable.html\">MultiIndexable</a>(Bool), &)","location":{"filename":"src/multi_writable.cr","line_number":105,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_writable.cr#L105"},"def":{"name":"set_mask","args":[{"name":"bool_mask","doc":null,"default_value":"","external_name":"bool_mask","restriction":"MultiIndexable(Bool)"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"if bool_mask.shape != shape_internal\n  raise(ShapeError.new(\"Cannot perform masking: mask shape #{bool_mask.shape} does not match array shape #{shape_internal}.\"))\nend\nbool_mask.each_with_coord do |bool_val, coord|\n  if bool_val\n    unsafe_set_element(coord, yield coord)\n  end\nend\n"}},{"html_id":"shape:Shape-instance-method","name":"shape","doc":"Returns the length of the `{{@type}}` in each dimension.\nFor a `coord` to specify an element of the `{{@type}}` it must satisfy `coord[i] < shape[i]` for each `i`.","summary":"<p>Returns the length of the <code>{{@type}}</code> in each dimension.</p>","abstract":true,"args":[],"args_string":" : Shape","args_html":" : <a href=\"../Phase/Shape.html\">Shape</a>","location":{"filename":"src/multi_writable.cr","line_number":13,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_writable.cr#L13"},"def":{"name":"shape","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Shape","visibility":"Public","body":""}},{"html_id":"size-instance-method","name":"size","doc":"Returns the number of elements in the `{{@type}}`; equal to `shape.product`.","summary":"<p>Returns the number of elements in the <code>{{@type}}</code>; equal to <code>shape.product</code>.</p>","abstract":true,"args":[],"args_string":"","args_html":"","location":{"filename":"src/multi_writable.cr","line_number":9,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_writable.cr#L9"},"def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"html_id":"unsafe_set_chunk(region:IndexRegion,src:MultiIndexable(T))-instance-method","name":"unsafe_set_chunk","doc":"Copies the elements from a MultiIndexable `src` into `region`, assuming that `region` is in canonical form and in-bounds for this `{{@type}}`\nand the shape of `region` matches the shape of `src`.\nFor full specification of canonical form see `RegionHelpers` documentation. TODO: make this actually happen","summary":"<p>Copies the elements from a MultiIndexable <code>src</code> into <code>region</code>, assuming that <code>region</code> is in canonical form and in-bounds for this <code>{{@type}}</code> and the shape of <code>region</code> matches the shape of <code>src</code>.</p>","abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"IndexRegion"},{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"MultiIndexable(T)"}],"args_string":"(region : IndexRegion, src : MultiIndexable(T))","args_html":"(region : <a href=\"../Phase/IndexRegion.html\">IndexRegion</a>, src : <a href=\"../Phase/MultiIndexable.html\">MultiIndexable</a>(T))","location":{"filename":"src/multi_writable.cr","line_number":26,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_writable.cr#L26"},"def":{"name":"unsafe_set_chunk","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"IndexRegion"},{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"MultiIndexable(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"absolute_iter = region.each\nsrc_iter = src.each\nsrc_iter.each do |src_el|\n  unsafe_set_element(absolute_iter.unsafe_next, src_el)\nend\n"}},{"html_id":"unsafe_set_chunk(region:IndexRegion,value:T)-instance-method","name":"unsafe_set_chunk","doc":"Sets each element in `region` to `value`, assuming that `region` is in canonical form and in-bounds for this `{{@type}}`\nFor full specification of canonical form see `RegionHelpers` documentation. TODO: make this actually happen","summary":"<p>Sets each element in <code>region</code> to <code>value</code>, assuming that <code>region</code> is in canonical form and in-bounds for this <code>{{@type}}</code> For full specification of canonical form see <code>RegionHelpers</code> documentation.</p>","abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"IndexRegion"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"args_string":"(region : IndexRegion, value : T)","args_html":"(region : <a href=\"../Phase/IndexRegion.html\">IndexRegion</a>, value : T)","location":{"filename":"src/multi_writable.cr","line_number":37,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_writable.cr#L37"},"def":{"name":"unsafe_set_chunk","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"IndexRegion"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"region.each do |coord|\n  unsafe_set_element(coord, value)\nend"}},{"html_id":"unsafe_set_element(coord:Coord,value:T)-instance-method","name":"unsafe_set_element","doc":"Given a coordinate representing some location in the {{@type}} and a value, store the value at that coordinate.\nAssumes that the coordinate is in-bounds for this {{@type}}.","summary":"<p>Given a coordinate representing some location in the {{@type}} and a value, store the value at that coordinate.</p>","abstract":true,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Coord"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"args_string":"(coord : Coord, value : T)","args_html":"(coord : <a href=\"../Phase/Coord.html\">Coord</a>, value : T)","location":{"filename":"src/multi_writable.cr","line_number":17,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/multi_writable.cr#L17"},"def":{"name":"unsafe_set_element","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Coord"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"ph-core/Phase/NArray","path":"Phase/NArray.html","kind":"class","full_name":"Phase::NArray(T)","name":"NArray","abstract":false,"superclass":{"html_id":"ph-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"ph-core/Phase/NArray/BufferUtil","kind":"module","full_name":"Phase::NArray::BufferUtil","name":"BufferUtil"},{"html_id":"ph-core/Phase/MultiWritable","kind":"module","full_name":"Phase::MultiWritable","name":"MultiWritable"},{"html_id":"ph-core/Phase/MultiIndexable","kind":"module","full_name":"Phase::MultiIndexable","name":"MultiIndexable"},{"html_id":"ph-core/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"ph-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"ph-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/n_array.cr","line_number":13,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L13"},{"filename":"src/n_array/buffer_util.cr","line_number":6,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array/buffer_util.cr#L6"}],"repository_name":"ph-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"ph-core/Phase/MultiIndexable","kind":"module","full_name":"Phase::MultiIndexable","name":"MultiIndexable"},{"html_id":"ph-core/Phase/MultiWritable","kind":"module","full_name":"Phase::MultiWritable","name":"MultiWritable"},{"html_id":"ph-core/Phase/NArray/BufferUtil","kind":"module","full_name":"Phase::NArray::BufferUtil","name":"BufferUtil"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"ph-core/Phase","kind":"module","full_name":"Phase","name":"Phase"},"doc":"An `{{@type}}` is a multidimensional array for any arbitrary type.\nIt is the most general implementation of Abstract{{@type}}, and as a result\nonly implements primitive data operations (construction, data reading,\ndata writing, and region sampling / slicing).\n","summary":"<p>An <code>{{@type}}</code> is a multidimensional array for any arbitrary type.</p>","class_methods":[{"html_id":"[](*contents)-class-method","name":"[]","doc":"NArray[1, 2, 3] == NArray.new([1, 2, 3])\nNArray[[1, 2, 3]] == NArray.new([[1, 2, 3]])","summary":"<p>NArray[1, 2, 3] == NArray.new([1, 2, 3]) NArray[[1, 2, 3]] == NArray.new([[1, 2, 3]])</p>","abstract":false,"args":[{"name":"contents","doc":null,"default_value":"","external_name":"contents","restriction":""}],"args_string":"(*contents)","args_html":"(*contents)","location":{"filename":"src/n_array.cr","line_number":151,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L151"},"def":{"name":"[]","args":[{"name":"contents","doc":null,"default_value":"","external_name":"contents","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(contents)"}},{"html_id":"build(shape:Enumerable,&block:Array(Int32),Int32->T)-class-method","name":"build","doc":"Constructs an `{{@type}}` using a user-provided *shape* (see `shape`) and a callback.\nThe provided callback should map a multidimensional index, *coord*, (and an optional packed\nindex) to the value you wish to store at that position.\nFor example, to create the 2x2 identity matrix:\n```\nPhase::{{@type}}.build([2, 2]) do |coord|\n  if coord[0] == coord[1]\n    1\n  else\n    0\n  end\nend\n```\nWhich will create:\n```text\n[[1, 0, 0],\n  0, 1, 0],\n  0, 0, 1]]\n```\nThe buffer index allows you to easily index elements in lexicographic order.\nFor example:\n```\n{{@type}}.build([5, 1]) { |coord, index| index }\n```\nWill create:\n```text\n[[0],\n [1],\n [2],\n [3],\n [4]]\n```","summary":"<p>Constructs an <code>{{@type}}</code> using a user-provided <em>shape</em> (see <code><a href=\"../Phase/NArray.html#shape:Array(Int32)-instance-method\">#shape</a></code>) and a callback.</p>","abstract":false,"args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Enumerable"}],"args_string":"(shape : Enumerable, &block : Array(Int32), Int32 -> T)","args_html":"(shape : Enumerable, &block : Array(Int32), Int32 -> T)","location":{"filename":"src/n_array.cr","line_number":97,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L97"},"def":{"name":"build","args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Enumerable"}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Array(Int32), Int32 -> T)"},"return_type":"","visibility":"Public","body":"coord_iter = IndexedLexIterator.cover(shape.to_a)\n({{ @type }}).new(shape) do |idx|\n  yield *(  coord_iter.unsafe_next_with_index)\nend\n"}},{"html_id":"build(*shape:Int,&block:Array(Int32),Int32->T)-class-method","name":"build","doc":null,"summary":null,"abstract":false,"args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Int"}],"args_string":"(*shape : Int, &block : Array(Int32), Int32 -> T)","args_html":"(*shape : Int, &block : Array(Int32), Int32 -> T)","location":{"filename":"src/n_array.cr","line_number":104,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L104"},"def":{"name":"build","args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Int"}],"double_splat":null,"splat_index":0,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Array(Int32), Int32 -> T)"},"return_type":"","visibility":"Public","body":"build(shape, &block)"}},{"html_id":"common_container(*objects)-class-method","name":"common_container","doc":"Given a list of `{{@type}}`s, returns the smallest shape array in which any one of those `{{@type}}s` can be contained.\nTODO: Example","summary":"<p>Given a list of <code>{{@type}}</code>s, returns the smallest shape array in which any one of those <code>{{@type}}s</code> can be contained.</p>","abstract":false,"args":[{"name":"objects","doc":null,"default_value":"","external_name":"objects","restriction":""}],"args_string":"(*objects)","args_html":"(*objects)","location":{"filename":"src/n_array.cr","line_number":475,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L475"},"def":{"name":"common_container","args":[{"name":"objects","doc":null,"default_value":"","external_name":"objects","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"shapes = objects.to_a.map do |x|\n  x.shape\nend\nmax_dimension = (shapes.map(&.size)).max\ncontainer = (0...max_dimension).map do |dim_idx|\n  sizes_in_dim = shapes.map do |shape|\n    shape[dim_idx]?\n  end\n  sizes_in_dim.compact.max\nend\ncontainer\n"}},{"html_id":"compatible?(*narrs:MultiIndexable,axis=-1):Bool-class-method","name":"compatible?","doc":"Checks that the shape of this and other match in every dimension\n(except `axis`, if it is specified)","summary":"<p>Checks that the shape of this and other match in every dimension (except <code>axis</code>, if it is specified)</p>","abstract":false,"args":[{"name":"narrs","doc":null,"default_value":"","external_name":"narrs","restriction":"MultiIndexable"},{"name":"axis","doc":null,"default_value":"-1","external_name":"axis","restriction":""}],"args_string":"(*narrs : MultiIndexable, axis = -1) : Bool","args_html":"(*narrs : <a href=\"../Phase/MultiIndexable.html\">MultiIndexable</a>, axis = <span class=\"n\">-1</span>) : Bool","location":{"filename":"src/n_array.cr","line_number":498,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L498"},"def":{"name":"compatible?","args":[{"name":"narrs","doc":null,"default_value":"","external_name":"narrs","restriction":"MultiIndexable"},{"name":"axis","doc":null,"default_value":"-1","external_name":"axis","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"first = narrs.to_a.pop\nfirst.compatible?(narrs, axis: axis)\n"}},{"html_id":"concatenate(*narrs:MultiIndexable(T),axis=0):NArray(T)-class-method","name":"concatenate","doc":null,"summary":null,"abstract":false,"args":[{"name":"narrs","doc":null,"default_value":"","external_name":"narrs","restriction":"MultiIndexable(T)"},{"name":"axis","doc":null,"default_value":"0","external_name":"axis","restriction":""}],"args_string":"(*narrs : MultiIndexable(T), axis = 0) : NArray(T)","args_html":"(*narrs : <a href=\"../Phase/MultiIndexable.html\">MultiIndexable</a>(T), axis = <span class=\"n\">0</span>) : <a href=\"../Phase/NArray.html\">NArray</a>(T)","location":{"filename":"src/n_array.cr","line_number":542,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L542"},"def":{"name":"concatenate","args":[{"name":"narrs","doc":null,"default_value":"","external_name":"narrs","restriction":"MultiIndexable(T)"},{"name":"axis","doc":null,"default_value":"0","external_name":"axis","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"NArray(T)","visibility":"Public","body":"self.new(*(self.concatenate_to_slice(*narrs, axis: axis)))"}},{"html_id":"fill(shape,value:T)-class-method","name":"fill","doc":"Fills an `{{@type}}` of given shape with a specified value.\nFor example, to create a zero vector:\n```\n{{@type}}.fill([3, 1], 0)\n```\nWill produce\n```text\n[[0],\n [0],\n [0]]\n```\nNote that this method makes no effort to duplicate *value*, so this should only be used\nfor `Struct`s. If you want to populate an {{@type}} with `Object`s, see `new(shape, &block)`.","summary":"<p>Fills an <code>{{@type}}</code> of given shape with a specified value.</p>","abstract":false,"args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"args_string":"(shape, value : T)","args_html":"(shape, value : T)","location":{"filename":"src/n_array.cr","line_number":168,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L168"},"def":{"name":"fill","args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"({{ @type }}).new(shape) do\n  value\nend"}},{"html_id":"wrap(*objects)-class-method","name":"wrap","doc":"creates an {{@type}}-type vector from a tuple of scalars.","summary":"<p>creates an {{@type}}-type vector from a tuple of scalars.</p>","abstract":false,"args":[{"name":"objects","doc":null,"default_value":"","external_name":"objects","restriction":""}],"args_string":"(*objects)","args_html":"(*objects)","location":{"filename":"src/n_array.cr","line_number":260,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L260"},"def":{"name":"wrap","args":[{"name":"objects","doc":null,"default_value":"","external_name":"objects","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"NArray.new(objects.to_a)"}}],"constructors":[{"html_id":"new(shape,buffer:Slice(T))-class-method","name":"new","doc":"Creates an `{{@type}}` out of a shape and a pre-populated buffer.\nFrequently used internally (for example, this is used in\n`reshape` as of Feb 5th 2021).\nTODO: Should be protected, had to remove for testing","summary":"<p>Creates an <code>{{@type}}</code> out of a shape and a pre-populated buffer.</p>","abstract":false,"args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""},{"name":"buffer","doc":null,"default_value":"","external_name":"buffer","restriction":"Slice(T)"}],"args_string":"(shape, buffer : Slice(T))","args_html":"(shape, buffer : Slice(T))","location":{"filename":"src/n_array.cr","line_number":56,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L56"},"def":{"name":"new","args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""},{"name":"buffer","doc":null,"default_value":"","external_name":"buffer","restriction":"Slice(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = NArray(T).allocate\n_.initialize(shape, buffer)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","location":{"filename":"src/n_array.cr","line_number":690,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L690"},"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if node.is_a?(YAML::Nodes::Mapping)\n  ctx.read_alias(node, self) do |obj|\n    return obj\n  end\n  shape = nil\n  elements = nil\n  (node.nodes.each_with_index.step(2)).each do |child, idx|\n    if child.is_a?(YAML::Nodes::Scalar)\n      case child.value\n      when \"shape\"\n        shape = Array(Int32).new(ctx, node.nodes[idx + 1])\n      when \"elements\"\n        elements_node = node.nodes[idx + 1]\n        if elements_node.is_a?(YAML::Nodes::Sequence)\n          {% if true %}\n                elements = Array({{ @type.type_vars[0] }}).new(ctx, elements_node)\n                {% end %}\n        else\n          raise(YAML::Error.new(\"Could not read NArray from YAML: Expected sequence, found #{elements_node.class}\"))\n        end\n      end\n    else\n      raise(YAML::Error.new(\"Could not read NArray from YAML: Did not expect nested elements\"))\n    end\n  end\n  if shape.nil? || elements.nil?\n  else\n    if elements.size == shape.product\n      elements = Slice.new(elements.to_unsafe, elements.size)\n      ret = new(shape, elements)\n      ctx.record_anchor(node, ret)\n      return ret\n    else\n      raise(YAML::Error.new(\"Could not read NArray from YAML: wrong number of elements for shape #{shape}\"))\n    end\n  end\n  raise(YAML::Error.new(\"Could not read NArray from YAML: 'shape' and/or 'elements' were missing.\"))\nelse\n  raise(YAML::Error.new(\"Could not read NArray from YAML: Expected mapping, found #{node.class}\"))\nend"}},{"html_id":"new(data:Enumerable)-class-method","name":"new","doc":"Creates an `{{@type}}` from a nested array with uniform dimensions.\nFor example:\n```\n{{@type}}.new([[1, 0, 0], [0, 1, 0], [0, 0, 1]])\n```\nWould create the 3x3 identity matrix of type `{{@type}}(Int32)`.\n\nThis constructor will figure out the types of the scalars at the\nbottom of the nested array at compile time, which allows mixing\ndatatypes effortlessly.\nFor example, to create a matrix with 0.5 on the diagonals:\n```\n{{@type}}.new([[0.5, 0, 0], [0, 0.5, 0], [0, 0, 0.5]])\n```\nThis may seem trivial, but note that the `0.5`s are implicit\n`Float32` literals, whereas the `0`s are implicit `Int32` literals.\nSo, the type returned by that example will actually be an `{{@type}}(Float32 | Int32)`.\nThis also works for more disorganized examples:\n```\n{{@type}}.new([[\"We can mix types\", 2, :do], [\"C\", 0.0, \"l stuff.\"]])\n```\nThe above line will create an `{{@type}}(String | Int32 | Symbol | Float32)`.\n\nWhen a nested array with non-uniform dimensions is passed, this method will\nraise a `DimensionError`.\nFor example:\n```\n{{@type}}.new([[1], [1, 2]]) # => DimensionError\n```","summary":"<p>Creates an <code>{{@type}}</code> from a nested array with uniform dimensions.</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Enumerable"}],"args_string":"(data : Enumerable)","args_html":"(data : Enumerable)","location":{"filename":"src/n_array.cr","line_number":137,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L137"},"def":{"name":"new","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Enumerable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nested_array = data.to_a\nshape = measure_nested_array(nested_array)\nflattened = nested_array.flatten\nbuffer = Slice.new(flattened.to_unsafe, flattened.size)\nnew(shape, buffer)\n"}},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/n_array.cr","line_number":639,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L639"},"def":{"name":"new","args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{% if true %}\n        shape = [] of Int32\n        elements = [] of {{ @type.type_vars[0] }}\n\n        found_shape = false\n        found_elements = false\n\n        pull.read_object do |key, key_loc|\n          case key\n          when \"shape\"\n            found_shape = true\n            pull.read_array do\n              shape << pull.read?(Int32).not_nil!\n            end\n          when \"elements\"\n            pull.read_array do\n              found_elements = true\n              elements << {{ @type.type_vars[0] }}.new(pull)\n            end\n          end\n        end\n\n        if found_shape && found_elements\n          if shape.product == elements.size\n            buffer = Slice.new(elements.to_unsafe, elements.size)\n            return new(shape, buffer)\n          else\n            raise JSON::Error.new(\"Could not read NArray from YAML: wrong number of elements for shape #{shape}\")\n          end\n        else\n          raise JSON::Error.new(\"Could not read NArray from YAML: 'shape' and/or 'elements' were missing.\")\n        end\n        {% end %}"}},{"html_id":"wrap(*objects:AbstractNArray(T),pad=false):NArray-class-method","name":"wrap","doc":"Adds a dimension at highest level, where each \"row\" is an input {{@type}}.\nIf pad is false, then throw error if shapes of objects do not match;\notherwise, pad subarrays along each axis to match whichever is largest in that axis","summary":"<p>Adds a dimension at highest level, where each \"row\" is an input {{@type}}.</p>","abstract":false,"args":[{"name":"objects","doc":null,"default_value":"","external_name":"objects","restriction":"AbstractNArray(T)"},{"name":"pad","doc":null,"default_value":"false","external_name":"pad","restriction":""}],"args_string":"(*objects : AbstractNArray(T), pad = false) : NArray","args_html":"(*objects : AbstractNArray(T), pad = <span class=\"n\">false</span>) : <a href=\"../Phase/NArray.html\">NArray</a>","location":{"filename":"src/n_array.cr","line_number":238,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L238"},"def":{"name":"wrap","args":[{"name":"objects","doc":null,"default_value":"","external_name":"objects","restriction":"AbstractNArray(T)"},{"name":"pad","doc":null,"default_value":"false","external_name":"pad","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"NArray","visibility":"Public","body":"shapes = objects.to_a.map do |x|\n  x.shape\nend\nif pad\n  container = common_container(*objects)\n  raise(NotImplementedError.new(\"As of this time, {{@type}}.wrap() cannot pad arrays for you. Come back after reshaping has been implemented, or get off the couch and go do it yourself.\"))\nelse\n  container = shapes[0]\n  if shapes.any? do |shape|\n    shape != container\n  end\n    raise(DimensionError.new(\"Cannot wrap these arrays: shapes do not match. Pass argument pad:true if you want to reshape arrays as necessary.\"))\n  end\nend\ncontainer.insert(0, objects.size)\ncombined_buffer = objects.reduce([] of T) do |memo, i|\n  memo.concat(i.buffer.to_a)\nend\nNArray(T).new(container) do |i|\n  combined_buffer[i]\nend\n"}}],"instance_methods":[{"html_id":"<<(other:self):self-instance-method","name":"<<","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"args_string":"(other : self) : self","args_html":"(other : <span class=\"k\">self</span>) : <span class=\"k\">self</span>","location":{"filename":"src/n_array.cr","line_number":503,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L503"},"def":{"name":"<<","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"push(other)"}},{"html_id":"==(other:MultiIndexable):Bool-instance-method","name":"==","doc":"Checks for elementwise equality between `self` and *other*.","summary":"<p>Checks for elementwise equality between <code>self</code> and <em>other</em>.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable"}],"args_string":"(other : MultiIndexable) : Bool","args_html":"(other : <a href=\"../Phase/MultiIndexable.html\">MultiIndexable</a>) : Bool","location":{"filename":"src/n_array.cr","line_number":330,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L330"},"def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"equals?(other) do |x, y|\n  x == y\nend"}},{"html_id":"[](index:Int32):self-instance-method","name":"[]","doc":"Takes a single index into the {{@type}}, returning a slice of the largest dimension possible.\nFor example, if `a` is a matrix, `a[0]` will be a vector. There is a special case when\nindexing into a 1D `{{@type}}` - the scalar at the index provided will be wrapped in an\n`{{@type}}`. This is to preserve type-safety - if you want to extract the scalar as type `T`,\ninvoke `#to_scalar`.\nTODO: Either make the type restriction here go away (it was getting called when indexing\nwith a single range), or remove this method entirely in favor of read only views","summary":"<p>Takes a single index into the {{@type}}, returning a slice of the largest dimension possible.</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int32"}],"args_string":"(index : Int32) : self","args_html":"(index : Int32) : <span class=\"k\">self</span>","location":{"filename":"src/n_array.cr","line_number":354,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L354"},"def":{"name":"[]","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"index = CoordUtil.canonicalize_index(index, @shape, axis = 0)\nif dimensions == 1\n  new_shape = [1]\nelse\n  new_shape = @shape[1..]\nend\nstep = new_shape.product\nnew_buffer = @buffer[index * step, step]\n(typeof(self)).new(new_shape, new_buffer.clone)\n"}},{"html_id":"[]=(bool_mask:NArray(Bool),value:T)-instance-method","name":"[]=","doc":"replaces all values in a boolean mask with a given value","summary":"<p>replaces all values in a boolean mask with a given value</p>","abstract":false,"args":[{"name":"bool_mask","doc":null,"default_value":"","external_name":"bool_mask","restriction":"NArray(Bool)"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"args_string":"(bool_mask : NArray(Bool), value : T)","args_html":"(bool_mask : <a href=\"../Phase/NArray.html\">NArray</a>(Bool), value : T)","location":{"filename":"src/n_array.cr","line_number":394,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L394"},"def":{"name":"[]=","args":[{"name":"bool_mask","doc":null,"default_value":"","external_name":"bool_mask","restriction":"NArray(Bool)"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if bool_mask.shape != @shape\n  raise(DimensionError.new(\"Cannot perform masking: mask shape does not match array shape.\"))\nend\nbool_mask.buffer.each_with_index do |bool_val, idx|\n  if bool_val\n    @buffer[idx] = value\n  end\nend\n"}},{"html_id":"buffer:Slice(T)-instance-method","name":"buffer","doc":"Stores the elements of an `{{@type}}` in lexicographic (row-major) order.","summary":"<p>Stores the elements of an <code>{{@type}}</code> in lexicographic (row-major) order.</p>","abstract":false,"args":[],"args_string":" : Slice(T)","args_html":" : Slice(T)","location":{"filename":"src/n_array.cr","line_number":20,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L20"},"def":{"name":"buffer","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Slice(T)","visibility":"Public","body":"@buffer"}},{"html_id":"clone:self-instance-method","name":"clone","doc":"Creates a deep copy of this {{@type}};\nAllocates a new buffer of the same shape, and calls #clone on every item in the buffer.","summary":"<p>Creates a deep copy of this {{@type}}; Allocates a new buffer of the same shape, and calls #clone on every item in the buffer.</p>","abstract":false,"args":[],"args_string":" : self","args_html":" : <span class=\"k\">self</span>","location":{"filename":"src/n_array.cr","line_number":280,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L280"},"def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"({{ @type }}).new(@shape, @buffer.clone)"}},{"html_id":"compatible?(*others:MultiIndexable,axis=-1):Bool-instance-method","name":"compatible?","doc":"Checks that the shape of this and other match in every dimension\n(except `axis`, if it is specified)","summary":"<p>Checks that the shape of this and other match in every dimension (except <code>axis</code>, if it is specified)</p>","abstract":false,"args":[{"name":"others","doc":null,"default_value":"","external_name":"others","restriction":"MultiIndexable"},{"name":"axis","doc":null,"default_value":"-1","external_name":"axis","restriction":""}],"args_string":"(*others : MultiIndexable, axis = -1) : Bool","args_html":"(*others : <a href=\"../Phase/MultiIndexable.html\">MultiIndexable</a>, axis = <span class=\"n\">-1</span>) : Bool","location":{"filename":"src/n_array.cr","line_number":487,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L487"},"def":{"name":"compatible?","args":[{"name":"others","doc":null,"default_value":"","external_name":"others","restriction":"MultiIndexable"},{"name":"axis","doc":null,"default_value":"-1","external_name":"axis","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"shape.each_with_index do |dim, idx|\n  others.each do |narr|\n    if (dim != narr.shape[idx]) && (idx != axis)\n      return false\n    end\n  end\nend\ntrue\n"}},{"html_id":"concatenate(*others,axis=0):self-instance-method","name":"concatenate","doc":null,"summary":null,"abstract":false,"args":[{"name":"others","doc":null,"default_value":"","external_name":"others","restriction":""},{"name":"axis","doc":null,"default_value":"0","external_name":"axis","restriction":""}],"args_string":"(*others, axis = 0) : self","args_html":"(*others, axis = <span class=\"n\">0</span>) : <span class=\"k\">self</span>","location":{"filename":"src/n_array.cr","line_number":532,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L532"},"def":{"name":"concatenate","args":[{"name":"others","doc":null,"default_value":"","external_name":"others","restriction":""},{"name":"axis","doc":null,"default_value":"0","external_name":"axis","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"NArray.new(*(NArray(T).concatenate_to_slice(self, *others, axis: axis)))"}},{"html_id":"concatenate!(*others,axis=0):self-instance-method","name":"concatenate!","doc":null,"summary":null,"abstract":false,"args":[{"name":"others","doc":null,"default_value":"","external_name":"others","restriction":""},{"name":"axis","doc":null,"default_value":"0","external_name":"axis","restriction":""}],"args_string":"(*others, axis = 0) : self","args_html":"(*others, axis = <span class=\"n\">0</span>) : <span class=\"k\">self</span>","location":{"filename":"src/n_array.cr","line_number":536,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L536"},"def":{"name":"concatenate!","args":[{"name":"others","doc":null,"default_value":"","external_name":"others","restriction":""},{"name":"axis","doc":null,"default_value":"0","external_name":"axis","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"@shape, @buffer = NArray(T).concatenate_to_slice(self, *others, axis: axis)\n@axis_strides = BufferUtil.axis_strides(@shape)\nself\n"}},{"html_id":"dup:self-instance-method","name":"dup","doc":"Creates a shallow copy of this {{@type}};\nAllocates a new buffer of the same shape, and duplicates every item in the buffer.","summary":"<p>Creates a shallow copy of this {{@type}}; Allocates a new buffer of the same shape, and duplicates every item in the buffer.</p>","abstract":false,"args":[],"args_string":" : self","args_html":" : <span class=\"k\">self</span>","location":{"filename":"src/n_array.cr","line_number":286,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L286"},"def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"({{ @type }}).new(@shape, @buffer.dup)"}},{"html_id":"each-instance-method","name":"each","doc":"The default \"each\" with no iterator type passed is lexicographic.\nFor other orders, default to MultiIndexable's implementation.","summary":"<p>The default \"each\" with no iterator type passed is lexicographic.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/n_array.cr","line_number":410,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L410"},"def":{"name":"each","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@buffer.each"}},{"html_id":"each_coord-instance-method","name":"each_coord","doc":"Iterators ====================================================================","summary":"<p>Iterators ====================================================================</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/n_array.cr","line_number":418,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L418"},"def":{"name":"each_coord","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"IndexedLexIterator.cover(shape_internal)"}},{"html_id":"each_with_coord(iter:IndexedCoordIterator(I))forallI-instance-method","name":"each_with_coord","doc":null,"summary":null,"abstract":false,"args":[{"name":"iter","doc":null,"default_value":"","external_name":"iter","restriction":"IndexedCoordIterator(I)"}],"args_string":"(iter : IndexedCoordIterator(I)) forall I","args_html":"(iter : <a href=\"../Phase/NArray/BufferUtil/IndexedCoordIterator.html\">IndexedCoordIterator</a>(I)) forall I","location":{"filename":"src/n_array.cr","line_number":422,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L422"},"def":{"name":"each_with_coord","args":[{"name":"iter","doc":null,"default_value":"","external_name":"iter","restriction":"IndexedCoordIterator(I)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"BufferedECIterator.new(self, iter)"}},{"html_id":"each_with_index(&block:T,Int32->)-instance-method","name":"each_with_index","doc":"Iterates over the collection, yielding both the elements and their index.\n\n```\n[\"Alice\", \"Bob\"].each_with_index do |user, i|\n  puts \"User ##{i}: #{user}\"\nend\n```\n\nPrints:\n\n```text\nUser # 0: Alice\nUser # 1: Bob\n```\n\nAccepts an optional *offset* parameter, which tells it to start counting\nfrom there. So, a more human friendly version of the previous snippet would be:\n\n```\n[\"Alice\", \"Bob\"].each_with_index(1) do |user, i|\n  puts \"User ##{i}: #{user}\"\nend\n```\n\nWhich would print:\n\n```text\nUser # 1: Alice\nUser # 2: Bob\n```","summary":"<p>Iterates over the collection, yielding both the elements and their index.</p>","abstract":false,"args":[],"args_string":"(&block : T, Int32 -> )","args_html":"(&block : T, Int32 -> )","location":{"filename":"src/n_array.cr","line_number":426,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L426"},"def":{"name":"each_with_index","args":[],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(T, Int32 -> )"},"return_type":"","visibility":"Public","body":"@buffer.each_with_index do |elem, idx|\n  yield elem, idx\nend"}},{"html_id":"fast-instance-method","name":"fast","doc":"A method to get all elements in this `{{@type}}` when order is irrelevant.\nRecommended that implementers override this method to take advantage of\nthe storage scheme the implementation uses","summary":"<p>A method to get all elements in this <code>{{@type}}</code> when order is irrelevant.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/n_array.cr","line_number":414,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L414"},"def":{"name":"fast","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@buffer.each"}},{"html_id":"fit(new_shape,*,align:Hash(Int32,NArray::Alignment|Int32))-instance-method","name":"fit","doc":"This version requires you are only <= on each axis; cannot pad","summary":"<p>This version requires you are only &lt;= on each axis; cannot pad</p>","abstract":false,"args":[{"name":"new_shape","doc":null,"default_value":"","external_name":"new_shape","restriction":""},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"align","doc":null,"default_value":"","external_name":"align","restriction":"Hash(Int32, NArray::Alignment | Int32)"}],"args_string":"(new_shape, *, align : Hash(Int32, NArray::Alignment | Int32))","args_html":"(new_shape, *, align : Hash(Int32, NArray::Alignment | Int32))","location":{"filename":"src/n_array.cr","line_number":188,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L188"},"def":{"name":"fit","args":[{"name":"new_shape","doc":null,"default_value":"","external_name":"new_shape","restriction":""},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"align","doc":null,"default_value":"","external_name":"align","restriction":"Hash(Int32, NArray::Alignment | Int32)"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@shape.each_with_index do |size, idx|\n  if size > new_shape[idx]\n  end\nend\nraise(\"Can't fit array: provided shape is larger that shape of self. Provide a `pad_with` argument if padding is desired.\")\nreturn self.unsafe_fetch_chunk(region)\n"}},{"html_id":"fit(new_shape,*,align:Hash(Int32,NArray::Alignment|Int32)?=nil,pad_withvalue=nil)-instance-method","name":"fit","doc":null,"summary":null,"abstract":false,"args":[{"name":"new_shape","doc":null,"default_value":"","external_name":"new_shape","restriction":""},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"align","doc":null,"default_value":"nil","external_name":"align","restriction":"Hash(Int32, NArray::Alignment | Int32) | ::Nil"},{"name":"value","doc":null,"default_value":"nil","external_name":"pad_with","restriction":""}],"args_string":"(new_shape, *, align : Hash(Int32, NArray::Alignment | Int32)? = nil, pad_with value = nil)","args_html":"(new_shape, *, align : Hash(Int32, NArray::Alignment | Int32)? = <span class=\"n\">nil</span>, pad_with value = <span class=\"n\">nil</span>)","location":{"filename":"src/n_array.cr","line_number":205,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L205"},"def":{"name":"fit","args":[{"name":"new_shape","doc":null,"default_value":"","external_name":"new_shape","restriction":""},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"align","doc":null,"default_value":"nil","external_name":"align","restriction":"Hash(Int32, NArray::Alignment | Int32) | ::Nil"},{"name":"value","doc":null,"default_value":"nil","external_name":"pad_with","restriction":""}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if new_shape.size != @shape.size\n  raise(\"Cannot not fit a #{@shape.size} dimensional {{@type}} into a #{new_shape.size} dimensional shape. Consider calling `reshape` if you wish to change dimensionality.\")\nend"}},{"html_id":"fit!-instance-method","name":"fit!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/n_array.cr","line_number":215,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L215"},"def":{"name":"fit!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"html_id":"flatten:self-instance-method","name":"flatten","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : self","args_html":" : <span class=\"k\">self</span>","location":{"filename":"src/n_array.cr","line_number":312,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L312"},"def":{"name":"flatten","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"reshape(@buffer.size)"}},{"html_id":"map(&block:T->U)forallU-instance-method","name":"map","doc":"By default, gives an NArray","summary":"<p>By default, gives an NArray</p>","abstract":false,"args":[],"args_string":"(&block : T -> U) forall U","args_html":"(&block : T -> U) forall U","location":{"filename":"src/n_array.cr","line_number":432,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L432"},"def":{"name":"map","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(T -> U)"},"return_type":"","visibility":"Public","body":"map_with_index do |elem|\n  yield elem\nend"}},{"html_id":"map!(&block:T->T):self-instance-method","name":"map!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&block : T -> T) : self","args_html":"(&block : T -> T) : <span class=\"k\">self</span>","location":{"filename":"src/n_array.cr","line_number":451,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L451"},"def":{"name":"map!","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(T -> T)"},"return_type":"self","visibility":"Public","body":"map_with_index! do |elem|\n  yield elem\nend\nself\n"}},{"html_id":"map_with_coord(&block:T,Array(Int32),Int32->U)forallU-instance-method","name":"map_with_coord","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&block : T, Array(Int32), Int32 -> U) forall U","args_html":"(&block : T, Array(Int32), Int32 -> U) forall U","location":{"filename":"src/n_array.cr","line_number":445,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L445"},"def":{"name":"map_with_coord","args":[],"double_splat":null,"splat_index":null,"yields":3,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(T, Array(Int32), Int32 -> U)"},"return_type":"","visibility":"Public","body":"NArray(U).build(@shape) do |coord, idx|\n  yield @buffer[idx], coord, idx\nend"}},{"html_id":"map_with_coord!(&block:T,Array(Int32),Int32->T):self-instance-method","name":"map_with_coord!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&block : T, Array(Int32), Int32 -> T) : self","args_html":"(&block : T, Array(Int32), Int32 -> T) : <span class=\"k\">self</span>","location":{"filename":"src/n_array.cr","line_number":465,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L465"},"def":{"name":"map_with_coord!","args":[],"double_splat":null,"splat_index":null,"yields":3,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(T, Array(Int32), Int32 -> T)"},"return_type":"self","visibility":"Public","body":"iter = LexIterator.cover(shape_internal)\n@buffer.map_with_index! do |el, idx|\n  yield el, iter.unsafe_next, idx\nend\nself\n"}},{"html_id":"map_with_index(&block:T,Int32->U)forallU-instance-method","name":"map_with_index","doc":"Like `map`, but the block gets passed both the element and its index.\n\n```\n[\"Alice\", \"Bob\"].map_with_index { |name, i| \"User ##{i}: #{name}\" }\n# => [\"User #0: Alice\", \"User #1: Bob\"]\n```\n\nAccepts an optional *offset* parameter, which tells it to start counting\nfrom there.","summary":"<p>Like <code><a href=\"../Phase/NArray.html#map(&block:T-%3EU)forallU-instance-method\">#map</a></code>, but the block gets passed both the element and its index.</p>","abstract":false,"args":[],"args_string":"(&block : T, Int32 -> U) forall U","args_html":"(&block : T, Int32 -> U) forall U","location":{"filename":"src/n_array.cr","line_number":438,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L438"},"def":{"name":"map_with_index","args":[],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(T, Int32 -> U)"},"return_type":"","visibility":"Public","body":"new_buffer = @buffer.map_with_index do |elem, idx|\n  yield elem, idx\nend\nNArray.new(@shape.clone, new_buffer)\n"}},{"html_id":"map_with_index!(&block:T,Int32->T):self-instance-method","name":"map_with_index!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&block : T, Int32 -> T) : self","args_html":"(&block : T, Int32 -> T) : <span class=\"k\">self</span>","location":{"filename":"src/n_array.cr","line_number":458,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L458"},"def":{"name":"map_with_index!","args":[],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(T, Int32 -> T)"},"return_type":"self","visibility":"Public","body":"@buffer.map_with_index! do |elem, idx|\n  yield elem, idx\nend\nself\n"}},{"html_id":"pad(value,amounts:Hash(Int32,Tuple(Int32,Int32)))-instance-method","name":"pad","doc":"core\npad(0, {0 => {2, 2}, 1 => {3, 4}, -1 => {0, 5}})","summary":"<p>core pad(0, {0 => {2, 2}, 1 => {3, 4}, -1 => {0, 5}})</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"amounts","doc":null,"default_value":"","external_name":"amounts","restriction":"Hash(Int32, Tuple(Int32, Int32))"}],"args_string":"(value, amounts : Hash(Int32, Tuple(Int32, Int32)))","args_html":"(value, amounts : Hash(Int32, Tuple(Int32, Int32)))","location":{"filename":"src/n_array.cr","line_number":179,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L179"},"def":{"name":"pad","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"amounts","doc":null,"default_value":"","external_name":"amounts","restriction":"Hash(Int32, Tuple(Int32, Int32))"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"fit()"}},{"html_id":"pad!-instance-method","name":"pad!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/n_array.cr","line_number":212,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L212"},"def":{"name":"pad!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"html_id":"push(*others:self,axis=0):self-instance-method","name":"push","doc":"optimization for pushing other NArrays on axis 0, in-place","summary":"<p>optimization for pushing other NArrays on axis 0, in-place</p>","abstract":false,"args":[{"name":"others","doc":null,"default_value":"","external_name":"others","restriction":"self"},{"name":"axis","doc":null,"default_value":"0","external_name":"axis","restriction":""}],"args_string":"(*others : self, axis = 0) : self","args_html":"(*others : <span class=\"k\">self</span>, axis = <span class=\"n\">0</span>) : <span class=\"k\">self</span>","location":{"filename":"src/n_array.cr","line_number":508,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L508"},"def":{"name":"push","args":[{"name":"others","doc":null,"default_value":"","external_name":"others","restriction":"self"},{"name":"axis","doc":null,"default_value":"0","external_name":"axis","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"if !(compatible?(*others, axis: axis))\n  raise(DimensionError.new(\"Cannot concatenate these arrays along axis #{axis}: shapes do not match\"))\nend\nconcat_size = size + others.sum(&.size)\nfull_ptr = Pointer(T).malloc(concat_size)\nfull_ptr.move_from(@buffer.to_unsafe, size)\nptr = full_ptr + size\nothers.each do |narr|\n  ptr.move_from(narr.buffer.to_unsafe, narr.size)\n  ptr = ptr + narr.size\nend\n@shape[0] = @shape[0] + others.sum do |narr|\n  narr.shape[0]\nend\n@buffer = Slice.new(full_ptr, concat_size)\nself\n"}},{"html_id":"reshape(new_shape:Enumerable)-instance-method","name":"reshape","doc":null,"summary":null,"abstract":false,"args":[{"name":"new_shape","doc":null,"default_value":"","external_name":"new_shape","restriction":"Enumerable"}],"args_string":"(new_shape : Enumerable)","args_html":"(new_shape : Enumerable)","location":{"filename":"src/n_array.cr","line_number":316,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L316"},"def":{"name":"reshape","args":[{"name":"new_shape","doc":null,"default_value":"","external_name":"new_shape","restriction":"Enumerable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"({{ @type }}).new(new_shape.to_a, @buffer)"}},{"html_id":"reshape(*splat)-instance-method","name":"reshape","doc":null,"summary":null,"abstract":false,"args":[{"name":"splat","doc":null,"default_value":"","external_name":"splat","restriction":""}],"args_string":"(*splat)","args_html":"(*splat)","location":{"filename":"src/n_array.cr","line_number":320,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L320"},"def":{"name":"reshape","args":[{"name":"splat","doc":null,"default_value":"","external_name":"splat","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"reshape(splat)"}},{"html_id":"scalar?:Bool-instance-method","name":"scalar?","doc":"Checks that the array is a 1-vector (a \"zero-dimensional\" {{@type}})","summary":"<p>Checks that the array is a 1-vector (a \"zero-dimensional\" {{@type}})</p>","abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/n_array.cr","line_number":325,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L325"},"def":{"name":"scalar?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"(@shape.size == 1) && (@shape[0] == 1)"}},{"html_id":"shape:Array(Int32)-instance-method","name":"shape","doc":"Returns the number of elements in each axis of the `{{@type}}`.\nMore explicitly, axis *k* contains `shape[k]` elements.","summary":"<p>Returns the number of elements in each axis of the <code>{{@type}}</code>.</p>","abstract":false,"args":[],"args_string":" : Array(Int32)","args_html":" : Array(Int32)","location":{"filename":"src/n_array.cr","line_number":270,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L270"},"def":{"name":"shape","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"@shape.clone"}},{"html_id":"size:Int32-instance-method","name":"size","doc":"Returns the number of elements in the `{{@type}}`; equal to `shape.product`.","summary":"<p>Returns the number of elements in the <code>{{@type}}</code>; equal to <code>shape.product</code>.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/n_array.cr","line_number":274,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L274"},"def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@buffer.size"}},{"html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"JSON::Builder"}],"args_string":"(json : JSON::Builder)","args_html":"(json : JSON::Builder)","location":{"filename":"src/n_array.cr","line_number":627,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L627"},"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  json.scalar(\"shape\")\n  @shape.to_json(json)\n  json.scalar(\"elements\")\n  json.array do\n    @buffer.each(&.to_json(json))\n  end\nend"}},{"html_id":"to_yaml(yaml:YAML::Nodes::Builder)-instance-method","name":"to_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"yaml","doc":null,"default_value":"","external_name":"yaml","restriction":"YAML::Nodes::Builder"}],"args_string":"(yaml : YAML::Nodes::Builder)","args_html":"(yaml : YAML::Nodes::Builder)","location":{"filename":"src/n_array.cr","line_number":675,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L675"},"def":{"name":"to_yaml","args":[{"name":"yaml","doc":null,"default_value":"","external_name":"yaml","restriction":"YAML::Nodes::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"yaml.mapping do\n  yaml.scalar(\"shape\")\n  yaml.sequence(style: YAML::SequenceStyle::FLOW) do\n    @shape.each(&.to_yaml(yaml))\n  end\n  yaml.scalar(\"elements\")\n  style = T < Number::Primitive ? YAML::SequenceStyle::FLOW : YAML::SequenceStyle::BLOCK\n  yaml.sequence(style: style) do\n    @buffer.each(&.to_yaml(yaml))\n  end\nend"}},{"html_id":"unsafe_fetch_chunk(region:IndexRegion)-instance-method","name":"unsafe_fetch_chunk","doc":"Copies the elements in `region` to a new `{{@type}}`, assuming that `region` is in canonical form and in-bounds for this `{{@type}}`.\nFor full specification of canonical form see `RegionHelpers` documentation. TODO: make this actually happen","summary":"<p>Copies the elements in <code>region</code> to a new <code>{{@type}}</code>, assuming that <code>region</code> is in canonical form and in-bounds for this <code>{{@type}}</code>.</p>","abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"IndexRegion"}],"args_string":"(region : IndexRegion)","args_html":"(region : <a href=\"../Phase/IndexRegion.html\">IndexRegion</a>)","location":{"filename":"src/n_array.cr","line_number":336,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L336"},"def":{"name":"unsafe_fetch_chunk","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"IndexRegion"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"iter = BufferedECIterator.new(self, IndexedLexIterator.new(region, @shape))\n(typeof(self)).new(region.shape) do\n  iter.unsafe_next_value\nend\n"}},{"html_id":"unsafe_fetch_element(coord):T-instance-method","name":"unsafe_fetch_element","doc":"Retrieves the element specified by `coord`, assuming that `coord` is in canonical form and in-bounds for this `{{@type}}`.\nFor full specification of canonical form see `RegionHelpers` documentation. TODO: make this actually happen","summary":"<p>Retrieves the element specified by <code>coord</code>, assuming that <code>coord</code> is in canonical form and in-bounds for this <code>{{@type}}</code>.</p>","abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""}],"args_string":"(coord) : T","args_html":"(coord) : T","location":{"filename":"src/n_array.cr","line_number":343,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L343"},"def":{"name":"unsafe_fetch_element","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"@buffer.unsafe_fetch(BufferUtil.coord_to_index_fast(coord, @shape, @axis_strides))"}},{"html_id":"unsafe_set_chunk(region:IndexRegion,src:MultiIndexable(T))-instance-method","name":"unsafe_set_chunk","doc":"Copies the elements from a MultiIndexable `src` into `region`, assuming that `region` is in canonical form and in-bounds for this `{{type}}`\nand the shape of `region` matches the shape of `src`.","summary":"<p>Copies the elements from a MultiIndexable <code>src</code> into <code>region</code>, assuming that <code>region</code> is in canonical form and in-bounds for this <code>{{type}}</code> and the shape of <code>region</code> matches the shape of <code>src</code>.</p>","abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"IndexRegion"},{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"MultiIndexable(T)"}],"args_string":"(region : IndexRegion, src : MultiIndexable(T))","args_html":"(region : <a href=\"../Phase/IndexRegion.html\">IndexRegion</a>, src : <a href=\"../Phase/MultiIndexable.html\">MultiIndexable</a>(T))","location":{"filename":"src/n_array.cr","line_number":371,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L371"},"def":{"name":"unsafe_set_chunk","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"IndexRegion"},{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"MultiIndexable(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"absolute_iter = IndexedLexIterator.new(region, @shape)\nsrc_iter = src.each\nsrc_iter.each do |src_el|\n  absolute_iter.next\n  @buffer[absolute_iter.current_index] = src_el\nend\n"}},{"html_id":"unsafe_set_chunk(region:IndexRegion,value:T)-instance-method","name":"unsafe_set_chunk","doc":"Sets each element in `region` to `value`, assuming that `region` is in canonical form and in-bounds for this `{{type}}`","summary":"<p>Sets each element in <code>region</code> to <code>value</code>, assuming that <code>region</code> is in canonical form and in-bounds for this <code>{{type}}</code></p>","abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"IndexRegion"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"args_string":"(region : IndexRegion, value : T)","args_html":"(region : <a href=\"../Phase/IndexRegion.html\">IndexRegion</a>, value : T)","location":{"filename":"src/n_array.cr","line_number":382,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L382"},"def":{"name":"unsafe_set_chunk","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"IndexRegion"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"iter = IndexedLexIterator.new(region, @shape)\niter.each do\n  @buffer[iter.current_index] = value\nend\n"}},{"html_id":"unsafe_set_element(coord:Enumerable,value:T)-instance-method","name":"unsafe_set_element","doc":null,"summary":null,"abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Enumerable"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"args_string":"(coord : Enumerable, value : T)","args_html":"(coord : Enumerable, value : T)","location":{"filename":"src/n_array.cr","line_number":389,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array.cr#L389"},"def":{"name":"unsafe_set_element","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Enumerable"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@buffer[BufferUtil.coord_to_index_fast(coord, @shape, @axis_strides)] = value"}}],"macros":[],"types":[{"html_id":"ph-core/Phase/NArray/BufferUtil","path":"Phase/NArray/BufferUtil.html","kind":"module","full_name":"Phase::NArray::BufferUtil","name":"BufferUtil","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/n_array/buffer_util.cr","line_number":7,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array/buffer_util.cr#L7"}],"repository_name":"ph-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"ph-core/Phase/NArray","kind":"class","full_name":"Phase::NArray(T)","name":"NArray"}],"namespace":{"html_id":"ph-core/Phase/NArray","kind":"class","full_name":"Phase::NArray(T)","name":"NArray"},"doc":null,"summary":null,"class_methods":[{"html_id":"axis_strides(shape)-class-method","name":"axis_strides","doc":"Given an array of step sizes in each coordinate axis, returns the offset in the buffer\nthat a step of that size represents.\nThe buffer index of a multidimensional coordinate, x, is equal to x dotted with axis_strides","summary":"<p>Given an array of step sizes in each coordinate axis, returns the offset in the buffer that a step of that size represents.</p>","abstract":false,"args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"args_string":"(shape)","args_html":"(shape)","location":{"filename":"src/n_array/buffer_util.cr","line_number":15,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array/buffer_util.cr#L15"},"def":{"name":"axis_strides","args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ret = shape.clone\nret[-1] = (typeof(shape[0])).zero + 1\n((ret.size - 2)..0).step(-1) do |idx|\n  ret[idx] = ret[idx + 1] * shape[idx + 1]\nend\nret\n"}},{"html_id":"coord_to_index(coord,shape):Int-class-method","name":"coord_to_index","doc":"TODO: Talk about what this should be named","summary":"<p><span class=\"flag orange\">TODO</span>  Talk about what this should be named</p>","abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"args_string":"(coord, shape) : Int","args_html":"(coord, shape) : Int","location":{"filename":"src/n_array/buffer_util.cr","line_number":33,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array/buffer_util.cr#L33"},"def":{"name":"coord_to_index","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int","visibility":"Public","body":"coord = CoordUtil.canonicalize_coord(coord, shape)\nsteps = axis_strides(shape)\n({{ @type }}).coord_to_index_fast(coord, shape, steps)\n"}},{"html_id":"coord_to_index_fast(coord,shape,axis_strides):Int-class-method","name":"coord_to_index_fast","doc":"Assumes coord is canonical","summary":"<p>Assumes coord is canonical</p>","abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""},{"name":"axis_strides","doc":null,"default_value":"","external_name":"axis_strides","restriction":""}],"args_string":"(coord, shape, axis_strides) : Int","args_html":"(coord, shape, axis_strides) : Int","location":{"filename":"src/n_array/buffer_util.cr","line_number":40,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array/buffer_util.cr#L40"},"def":{"name":"coord_to_index_fast","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""},{"name":"axis_strides","doc":null,"default_value":"","external_name":"axis_strides","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int","visibility":"Public","body":"begin\n  index = (typeof(shape[0])).zero\n  coord.each_with_index do |elem, idx|\n    index = index + (elem * axis_strides[idx])\n  end\n  index\nrescue exception\n  raise(IndexError.new(\"Cannot convert coordinate to index: the given index is out of bounds for this {{@type}} along at least one dimension.\"))\nend"}},{"html_id":"index_to_coord(index,shape):Array-class-method","name":"index_to_coord","doc":"OPTIMIZE: This could (maybe) be improved with use of `axis_strides`","summary":"<p><span class=\"flag green\">OPTIMIZE</span>  This could (maybe) be improved with use of <code><a href=\"../../Phase/NArray/BufferUtil.html#axis_strides(shape)-class-method\">.axis_strides</a></code></p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"args_string":"(index, shape) : Array","args_html":"(index, shape) : Array","location":{"filename":"src/n_array/buffer_util.cr","line_number":56,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array/buffer_util.cr#L56"},"def":{"name":"index_to_coord","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array","visibility":"Public","body":"if index > shape.product\n  raise(IndexError.new(\"Cannot convert index to coordinate: the given index is out of bounds for this {{@type}} along at least one dimension.\"))\nend\ncoord = shape.dup\nshape.reverse.each_with_index do |length, dim|\n  coord[dim] = index % length\n  index = index // length\nend\ncoord.reverse\n"}}],"constructors":[],"instance_methods":[{"html_id":"coord_to_index(coord):Int-instance-method","name":"coord_to_index","doc":"Convert from n-dimensional indexing to a buffer location.","summary":"<p>Convert from n-dimensional indexing to a buffer location.</p>","abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""}],"args_string":"(coord) : Int","args_html":"(coord) : Int","location":{"filename":"src/n_array/buffer_util.cr","line_number":27,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array/buffer_util.cr#L27"},"def":{"name":"coord_to_index","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int","visibility":"Public","body":"coord = CoordUtil.canonicalize_coord(coord, @shape)\n({{ @type }}).coord_to_index_fast(coord, @shape, @axis_strides)\n"}},{"html_id":"index_to_coord(index):Array-instance-method","name":"index_to_coord","doc":"Convert from a buffer location to an n-dimensional coord","summary":"<p>Convert from a buffer location to an n-dimensional coord</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""}],"args_string":"(index) : Array","args_html":"(index) : Array","location":{"filename":"src/n_array/buffer_util.cr","line_number":51,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array/buffer_util.cr#L51"},"def":{"name":"index_to_coord","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array","visibility":"Public","body":"(typeof(self)).index_to_coord(index, @shape)"}}],"macros":[],"types":[{"html_id":"ph-core/Phase/NArray/BufferUtil/BufferedECIterator","path":"Phase/NArray/BufferUtil/BufferedECIterator.html","kind":"class","full_name":"Phase::NArray::BufferUtil::BufferedECIterator(T, I)","name":"BufferedECIterator","abstract":false,"superclass":{"html_id":"ph-core/Phase/ElemAndCoordIterator","kind":"class","full_name":"Phase::ElemAndCoordIterator","name":"ElemAndCoordIterator"},"ancestors":[{"html_id":"ph-core/Phase/ElemAndCoordIterator","kind":"class","full_name":"Phase::ElemAndCoordIterator","name":"ElemAndCoordIterator"},{"html_id":"ph-core/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"ph-core/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"ph-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"ph-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/n_array/buffer_util.cr","line_number":146,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array/buffer_util.cr#L146"}],"repository_name":"ph-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"ph-core/Phase/NArray/BufferUtil","kind":"module","full_name":"Phase::NArray::BufferUtil","name":"BufferUtil"},"doc":"TODO: Make generic coord","summary":"<p><span class=\"flag orange\">TODO</span>  Make generic coord</p>","class_methods":[{"html_id":"of(src,iter:CoordIterator(I))-class-method","name":"of","doc":"This is needed here to prevent the method below (def self.of(src, region = nil)) from taking priority","summary":"<p>This is needed here to prevent the method below (def self.of(src, region = nil)) from taking priority</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"iter","doc":null,"default_value":"","external_name":"iter","restriction":"CoordIterator(I)"}],"args_string":"(src, iter : CoordIterator(I))","args_html":"(src, iter : <a href=\"../../../Phase/CoordIterator.html\">CoordIterator</a>(I))","location":{"filename":"src/n_array/buffer_util.cr","line_number":149,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array/buffer_util.cr#L149"},"def":{"name":"of","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"iter","doc":null,"default_value":"","external_name":"iter","restriction":"CoordIterator(I)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(src, iter)"}},{"html_id":"of(src,region=nil)-class-method","name":"of","doc":"Overridden to replace default iterator type","summary":"<p>Overridden to replace default iterator type</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"region","doc":null,"default_value":"nil","external_name":"region","restriction":""}],"args_string":"(src, region = nil)","args_html":"(src, region = <span class=\"n\">nil</span>)","location":{"filename":"src/n_array/buffer_util.cr","line_number":154,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array/buffer_util.cr#L154"},"def":{"name":"of","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""},{"name":"region","doc":null,"default_value":"nil","external_name":"region","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if region.nil?\n  iter = IndexedLexIterator.cover(src.shape)\nelse\n  iter = IndexedLexIterator.new(region, src.shape)\nend\nnew(src, iter)\n"}}],"constructors":[],"instance_methods":[{"html_id":"next_value:T|Stop-instance-method","name":"next_value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : T | Stop","args_html":" : T | Stop","location":{"filename":"src/n_array/buffer_util.cr","line_number":171,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array/buffer_util.cr#L171"},"def":{"name":"next_value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T | Stop","visibility":"Public","body":"if @coord_iter.next.is_a?(Stop)\n  return stop\nend\nget_element\n"}},{"html_id":"unsafe_next_value:T-instance-method","name":"unsafe_next_value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : T","args_html":" : T","location":{"filename":"src/n_array/buffer_util.cr","line_number":176,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array/buffer_util.cr#L176"},"def":{"name":"unsafe_next_value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"@coord_iter.next\nget_element\n"}}],"macros":[],"types":[]},{"html_id":"ph-core/Phase/NArray/BufferUtil/IndexedColexIterator","path":"Phase/NArray/BufferUtil/IndexedColexIterator.html","kind":"class","full_name":"Phase::NArray::BufferUtil::IndexedColexIterator(I)","name":"IndexedColexIterator","abstract":false,"superclass":{"html_id":"ph-core/Phase/NArray/BufferUtil/IndexedCoordIterator","kind":"class","full_name":"Phase::NArray::BufferUtil::IndexedCoordIterator","name":"IndexedCoordIterator"},"ancestors":[{"html_id":"ph-core/Phase/NArray/BufferUtil/IndexedCoordIterator","kind":"class","full_name":"Phase::NArray::BufferUtil::IndexedCoordIterator","name":"IndexedCoordIterator"},{"html_id":"ph-core/Phase/CoordIterator","kind":"class","full_name":"Phase::CoordIterator","name":"CoordIterator"},{"html_id":"ph-core/Phase/GeneralCoordIterator","kind":"class","full_name":"Phase::GeneralCoordIterator","name":"GeneralCoordIterator"},{"html_id":"ph-core/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"ph-core/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"ph-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"ph-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/n_array/buffer_util.cr","line_number":127,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array/buffer_util.cr#L127"}],"repository_name":"ph-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"ph-core/Phase/NArray/BufferUtil","kind":"module","full_name":"Phase::NArray::BufferUtil","name":"BufferUtil"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"html_id":"advance_coord-instance-method","name":"advance_coord","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/n_array/buffer_util.cr","line_number":129,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array/buffer_util.cr#L129"},"def":{"name":"advance_coord","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"0.upto(@coord.size - 1) do |i|\n  if @coord[i] == @last[i]\n    @buffer_index = @buffer_index - ((@coord[i] - @first[i]) * @buffer_step[i])\n    @coord[i] = @first[i]\n    if i == (@coord.size - 1)\n      return stop\n    end\n  else\n    __temp_36 = i\n    @coord[__temp_36] = @coord[__temp_36] + @step[i]\n    @buffer_index = @buffer_index + (@buffer_step[i] * @step[i])\n    break\n  end\nend\n@coord\n"}},{"html_id":"clone-instance-method","name":"clone","doc":"Returns a copy of `self` with all instance variables cloned.","summary":"<p>Returns a copy of <code>self</code> with all instance variables cloned.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/n_array/buffer_util.cr","line_number":128,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array/buffer_util.cr#L128"},"def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{% if @type < Reference && (!@type.instance_vars.map(&.type).all? do |t|\n  ((((t == ::Bool) || (t == ::Char)) || (t == ::Symbol)) || (t == ::String)) || t < ::Number::Primitive\nend) %}\n        exec_recursive_clone do |hash|\n          clone = {{ @type }}.allocate\n          hash[object_id] = clone.object_id\n          clone.initialize_copy(self)\n          GC.add_finalizer(clone) if clone.responds_to?(:finalize)\n          clone\n        end\n      {% else %}\n        clone = {{ @type }}.allocate\n        clone.initialize_copy(self)\n        GC.add_finalizer(clone) if clone.responds_to?(:finalize)\n        clone\n      {% end %}"}}],"macros":[],"types":[]},{"html_id":"ph-core/Phase/NArray/BufferUtil/IndexedCoordIterator","path":"Phase/NArray/BufferUtil/IndexedCoordIterator.html","kind":"class","full_name":"Phase::NArray::BufferUtil::IndexedCoordIterator(I)","name":"IndexedCoordIterator","abstract":true,"superclass":{"html_id":"ph-core/Phase/CoordIterator","kind":"class","full_name":"Phase::CoordIterator","name":"CoordIterator"},"ancestors":[{"html_id":"ph-core/Phase/CoordIterator","kind":"class","full_name":"Phase::CoordIterator","name":"CoordIterator"},{"html_id":"ph-core/Phase/GeneralCoordIterator","kind":"class","full_name":"Phase::GeneralCoordIterator","name":"GeneralCoordIterator"},{"html_id":"ph-core/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"ph-core/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"ph-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"ph-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/n_array/buffer_util.cr","line_number":68,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array/buffer_util.cr#L68"}],"repository_name":"ph-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"ph-core/Phase/NArray/BufferUtil/IndexedColexIterator","kind":"class","full_name":"Phase::NArray::BufferUtil::IndexedColexIterator(I)","name":"IndexedColexIterator"},{"html_id":"ph-core/Phase/NArray/BufferUtil/IndexedLexIterator","kind":"class","full_name":"Phase::NArray::BufferUtil::IndexedLexIterator(I)","name":"IndexedLexIterator"}],"including_types":[],"namespace":{"html_id":"ph-core/Phase/NArray/BufferUtil","kind":"module","full_name":"Phase::NArray::BufferUtil","name":"BufferUtil"},"doc":null,"summary":null,"class_methods":[{"html_id":"cover(shape)-class-method","name":"cover","doc":null,"summary":null,"abstract":false,"args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"args_string":"(shape)","args_html":"(shape)","location":{"filename":"src/n_array/buffer_util.cr","line_number":72,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array/buffer_util.cr#L72"},"def":{"name":"cover","args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(IndexRegion.cover(shape), shape)"}}],"constructors":[],"instance_methods":[{"html_id":"current_index:I-instance-method","name":"current_index","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : I","args_html":" : I","location":{"filename":"src/n_array/buffer_util.cr","line_number":99,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array/buffer_util.cr#L99"},"def":{"name":"current_index","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"I","visibility":"Public","body":"@buffer_index"}},{"html_id":"reset:self-instance-method","name":"reset","doc":"Set up any incrementing variables (such as @coord) here prior to iteration.","summary":"<p>Set up any incrementing variables (such as @coord) here prior to iteration.</p>","abstract":false,"args":[],"args_string":" : self","args_html":" : <span class=\"k\">self</span>","location":{"filename":"src/n_array/buffer_util.cr","line_number":90,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array/buffer_util.cr#L90"},"def":{"name":"reset","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"@buffer_index = @buffer_step.map_with_index do |e, i|\n  e * @first[i]\nend.sum\nsuper()\n"}},{"html_id":"unsafe_next_index:I-instance-method","name":"unsafe_next_index","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : I","args_html":" : I","location":{"filename":"src/n_array/buffer_util.cr","line_number":103,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array/buffer_util.cr#L103"},"def":{"name":"unsafe_next_index","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"I","visibility":"Public","body":"self.next\n@buffer_index\n"}},{"html_id":"unsafe_next_with_index-instance-method","name":"unsafe_next_with_index","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/n_array/buffer_util.cr","line_number":95,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array/buffer_util.cr#L95"},"def":{"name":"unsafe_next_with_index","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{self.next.unsafe_as(Array(I)), @buffer_index}"}}],"macros":[],"types":[]},{"html_id":"ph-core/Phase/NArray/BufferUtil/IndexedLexIterator","path":"Phase/NArray/BufferUtil/IndexedLexIterator.html","kind":"class","full_name":"Phase::NArray::BufferUtil::IndexedLexIterator(I)","name":"IndexedLexIterator","abstract":false,"superclass":{"html_id":"ph-core/Phase/NArray/BufferUtil/IndexedCoordIterator","kind":"class","full_name":"Phase::NArray::BufferUtil::IndexedCoordIterator","name":"IndexedCoordIterator"},"ancestors":[{"html_id":"ph-core/Phase/NArray/BufferUtil/IndexedCoordIterator","kind":"class","full_name":"Phase::NArray::BufferUtil::IndexedCoordIterator","name":"IndexedCoordIterator"},{"html_id":"ph-core/Phase/CoordIterator","kind":"class","full_name":"Phase::CoordIterator","name":"CoordIterator"},{"html_id":"ph-core/Phase/GeneralCoordIterator","kind":"class","full_name":"Phase::GeneralCoordIterator","name":"GeneralCoordIterator"},{"html_id":"ph-core/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"ph-core/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"ph-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"ph-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/n_array/buffer_util.cr","line_number":109,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array/buffer_util.cr#L109"}],"repository_name":"ph-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"ph-core/Phase/NArray/BufferUtil","kind":"module","full_name":"Phase::NArray::BufferUtil","name":"BufferUtil"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"html_id":"advance_coord-instance-method","name":"advance_coord","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/n_array/buffer_util.cr","line_number":111,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array/buffer_util.cr#L111"},"def":{"name":"advance_coord","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(@coord.size - 1).downto(0) do |i|\n  if @coord[i] == @last[i]\n    @buffer_index = @buffer_index - ((@coord[i] - @first[i]) * @buffer_step[i])\n    @coord[i] = @first[i]\n    if i == 0\n      return stop\n    end\n  else\n    __temp_34 = i\n    @coord[__temp_34] = @coord[__temp_34] + @step[i]\n    @buffer_index = @buffer_index + (@buffer_step[i] * @step[i])\n    break\n  end\nend\n@coord\n"}},{"html_id":"clone-instance-method","name":"clone","doc":"Returns a copy of `self` with all instance variables cloned.","summary":"<p>Returns a copy of <code>self</code> with all instance variables cloned.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/n_array/buffer_util.cr","line_number":110,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/n_array/buffer_util.cr#L110"},"def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{% if @type < Reference && (!@type.instance_vars.map(&.type).all? do |t|\n  ((((t == ::Bool) || (t == ::Char)) || (t == ::Symbol)) || (t == ::String)) || t < ::Number::Primitive\nend) %}\n        exec_recursive_clone do |hash|\n          clone = {{ @type }}.allocate\n          hash[object_id] = clone.object_id\n          clone.initialize_copy(self)\n          GC.add_finalizer(clone) if clone.responds_to?(:finalize)\n          clone\n        end\n      {% else %}\n        clone = {{ @type }}.allocate\n        clone.initialize_copy(self)\n        GC.add_finalizer(clone) if clone.responds_to?(:finalize)\n        clone\n      {% end %}"}}],"macros":[],"types":[]}]}]},{"html_id":"ph-core/Phase/PermuteTransform","path":"Phase/PermuteTransform.html","kind":"struct","full_name":"Phase::PermuteTransform","name":"PermuteTransform","abstract":false,"superclass":{"html_id":"ph-core/Phase/CoordTransform","kind":"struct","full_name":"Phase::CoordTransform","name":"CoordTransform"},"ancestors":[{"html_id":"ph-core/Phase/CoordTransform","kind":"struct","full_name":"Phase::CoordTransform","name":"CoordTransform"},{"html_id":"ph-core/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"ph-core/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"ph-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/view_util/transforms.cr","line_number":195,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view_util/transforms.cr#L195"}],"repository_name":"ph-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"ph-core/Phase","kind":"module","full_name":"Phase","name":"Phase"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"html_id":"new(size:Int32)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"}],"args_string":"(size : Int32)","args_html":"(size : Int32)","location":{"filename":"src/view_util/transforms.cr","line_number":204,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view_util/transforms.cr#L204"},"def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(pattern)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"pattern","doc":null,"default_value":"","external_name":"pattern","restriction":""}],"args_string":"(pattern)","args_html":"(pattern)","location":{"filename":"src/view_util/transforms.cr","line_number":200,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view_util/transforms.cr#L200"},"def":{"name":"new","args":[{"name":"pattern","doc":null,"default_value":"","external_name":"pattern","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(pattern)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"apply(coord:Array(Int32)):Array(Int32)-instance-method","name":"apply","doc":null,"summary":null,"abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Array(Int32)"}],"args_string":"(coord : Array(Int32)) : Array(Int32)","args_html":"(coord : Array(Int32)) : Array(Int32)","location":{"filename":"src/view_util/transforms.cr","line_number":236,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view_util/transforms.cr#L236"},"def":{"name":"apply","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Array(Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"unpermute(coord, @buffer)"}},{"html_id":"compose(t:CoordTransform):CoordTransform-instance-method","name":"compose","doc":null,"summary":null,"abstract":false,"args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"CoordTransform"}],"args_string":"(t : CoordTransform) : CoordTransform","args_html":"(t : <a href=\"../Phase/CoordTransform.html\">CoordTransform</a>) : <a href=\"../Phase/CoordTransform.html\">CoordTransform</a>","location":{"filename":"src/view_util/transforms.cr","line_number":209,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view_util/transforms.cr#L209"},"def":{"name":"compose","args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"CoordTransform"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"CoordTransform","visibility":"Public","body":"case t\nwhen PermuteTransform\n  return new(t.permute(@pattern))\nelse\n  return super(t)\nend"}},{"html_id":"pattern:Array(Int32)-instance-method","name":"pattern","doc":"each of these has size = dimensions","summary":"<p>each of these has size = dimensions</p>","abstract":false,"args":[],"args_string":" : Array(Int32)","args_html":" : Array(Int32)","location":{"filename":"src/view_util/transforms.cr","line_number":197,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view_util/transforms.cr#L197"},"def":{"name":"pattern","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"@pattern"}},{"html_id":"permute(src_coord)-instance-method","name":"permute","doc":null,"summary":null,"abstract":false,"args":[{"name":"src_coord","doc":null,"default_value":"","external_name":"src_coord","restriction":""}],"args_string":"(src_coord)","args_html":"(src_coord)","location":{"filename":"src/view_util/transforms.cr","line_number":218,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view_util/transforms.cr#L218"},"def":{"name":"permute","args":[{"name":"src_coord","doc":null,"default_value":"","external_name":"src_coord","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"view_coord = Array.new(@pattern.size) do |src_idx|\n  src_coord[pattern[src_idx]]\nend"}},{"html_id":"unpermute(view_coord,src_coord_buffer)-instance-method","name":"unpermute","doc":null,"summary":null,"abstract":false,"args":[{"name":"view_coord","doc":null,"default_value":"","external_name":"view_coord","restriction":""},{"name":"src_coord_buffer","doc":null,"default_value":"","external_name":"src_coord_buffer","restriction":""}],"args_string":"(view_coord, src_coord_buffer)","args_html":"(view_coord, src_coord_buffer)","location":{"filename":"src/view_util/transforms.cr","line_number":229,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view_util/transforms.cr#L229"},"def":{"name":"unpermute","args":[{"name":"view_coord","doc":null,"default_value":"","external_name":"view_coord","restriction":""},{"name":"src_coord_buffer","doc":null,"default_value":"","external_name":"src_coord_buffer","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@pattern.each_with_index do |el, idx|\n  src_coord_buffer[el] = view_coord[idx]\nend\nsrc_coord_buffer\n"}},{"html_id":"unpermute(view_coord)-instance-method","name":"unpermute","doc":null,"summary":null,"abstract":false,"args":[{"name":"view_coord","doc":null,"default_value":"","external_name":"view_coord","restriction":""}],"args_string":"(view_coord)","args_html":"(view_coord)","location":{"filename":"src/view_util/transforms.cr","line_number":224,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view_util/transforms.cr#L224"},"def":{"name":"unpermute","args":[{"name":"view_coord","doc":null,"default_value":"","external_name":"view_coord","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"src_coord = view_coord.clone\nunpermute(view_coord, src_coord)\n"}}],"macros":[],"types":[]},{"html_id":"ph-core/Phase/ProcView","path":"Phase/ProcView.html","kind":"class","full_name":"Phase::ProcView(S, T, R)","name":"ProcView","abstract":false,"superclass":{"html_id":"ph-core/Phase/ReadonlyView","kind":"class","full_name":"Phase::ReadonlyView","name":"ReadonlyView"},"ancestors":[{"html_id":"ph-core/Phase/ReadonlyView","kind":"class","full_name":"Phase::ReadonlyView","name":"ReadonlyView"},{"html_id":"ph-core/Phase/MultiIndexable","kind":"module","full_name":"Phase::MultiIndexable","name":"MultiIndexable"},{"html_id":"ph-core/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"ph-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"ph-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/proc_view.cr","line_number":2,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/proc_view.cr#L2"}],"repository_name":"ph-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"ph-core/Phase","kind":"module","full_name":"Phase","name":"Phase"},"doc":null,"summary":null,"class_methods":[{"html_id":"of(src:S,proc:T->R):ProcView(S,T,R)forallT,R-class-method","name":"of","doc":"# TODO: document","summary":"<h1><a id=\"todo-document\" class=\"anchor\" href=\"#todo-document\">\n  <svg class=\"octicon-link\" aria-hidden=\"true\">\n    <use href=\"#octicon-link\"/>\n  </svg>\n</a>TODO: document</h1>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"S"},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"(T -> R)"}],"args_string":"(src : S, proc : T -> R) : ProcView(S, T, R) forall T, R","args_html":"(src : S, proc : T -> R) : <a href=\"../Phase/ProcView.html\">ProcView</a>(S, T, R) forall T, R","location":{"filename":"src/proc_view.cr","line_number":6,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/proc_view.cr#L6"},"def":{"name":"of","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"S"},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"(T -> R)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ProcView(S, T, R)","visibility":"Public","body":"{% if true %}\n                {% if S < MultiIndexable(T) %}{% else %}\n                    {% raise(\"Error creating ProcView: proc input type does not match source element type.\") %}\n                {% end %}\n            {% end %}\ncase src\nwhen ReadonlyView\n  return src.process(proc)\nelse\n  return ProcView(S, T, R).new(src, src.shape, proc)\nend\n"}},{"html_id":"of(src:B,&block:T->R):ProcView(S,T,R)forallT,R-class-method","name":"of","doc":null,"summary":null,"abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"B"}],"args_string":"(src : B, &block : T -> R) : ProcView(S, T, R) forall T, R","args_html":"(src : B, &block : T -> R) : <a href=\"../Phase/ProcView.html\">ProcView</a>(S, T, R) forall T, R","location":{"filename":"src/proc_view.cr","line_number":21,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/proc_view.cr#L21"},"def":{"name":"of","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"B"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(T -> R)"},"return_type":"ProcView(S, T, R)","visibility":"Public","body":"self.of(src, block)"}}],"constructors":[],"instance_methods":[{"html_id":"clone:self-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : self","args_html":" : <span class=\"k\">self</span>","location":{"filename":"src/proc_view.cr","line_number":28,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/proc_view.cr#L28"},"def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"new(@src, @shape.clone, @proc.clone, @transform.clone)"}},{"html_id":"process(new_proc:R->U):ProcView(S,T,U)forallU-instance-method","name":"process","doc":null,"summary":null,"abstract":false,"args":[{"name":"new_proc","doc":null,"default_value":"","external_name":"new_proc","restriction":"(R -> U)"}],"args_string":"(new_proc : R -> U) : ProcView(S, T, U) forall U","args_html":"(new_proc : R -> U) : <a href=\"../Phase/ProcView.html\">ProcView</a>(S, T, U) forall U","location":{"filename":"src/proc_view.cr","line_number":36,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/proc_view.cr#L36"},"def":{"name":"process","args":[{"name":"new_proc","doc":null,"default_value":"","external_name":"new_proc","restriction":"(R -> U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ProcView(S, T, U)","visibility":"Public","body":"composition = Proc(T, U).new do |x|\n  new_proc.call(@proc.clone.call(x))\nend\nProcView(S, T, U).new(@src, @shape.clone, composition, @transform.clone)\n"}},{"html_id":"unsafe_fetch_element(coord):R-instance-method","name":"unsafe_fetch_element","doc":null,"summary":null,"abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""}],"args_string":"(coord) : R","args_html":"(coord) : R","location":{"filename":"src/proc_view.cr","line_number":32,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/proc_view.cr#L32"},"def":{"name":"unsafe_fetch_element","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"R","visibility":"Public","body":"@proc.call(@src.unsafe_fetch_element(@transform.apply(coord)))"}}],"macros":[],"types":[]},{"html_id":"ph-core/Phase/ReadonlyView","path":"Phase/ReadonlyView.html","kind":"class","full_name":"Phase::ReadonlyView(S, R)","name":"ReadonlyView","abstract":false,"superclass":{"html_id":"ph-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"ph-core/Phase/MultiIndexable","kind":"module","full_name":"Phase::MultiIndexable","name":"MultiIndexable"},{"html_id":"ph-core/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"ph-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"ph-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/readonly_view.cr","line_number":2,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/readonly_view.cr#L2"}],"repository_name":"ph-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"ph-core/Phase/MultiIndexable","kind":"module","full_name":"Phase::MultiIndexable","name":"MultiIndexable"}],"extended_modules":[],"subclasses":[{"html_id":"ph-core/Phase/ProcView","kind":"class","full_name":"Phase::ProcView(S, T, R)","name":"ProcView"},{"html_id":"ph-core/Phase/View","kind":"class","full_name":"Phase::View(S, R)","name":"View"}],"including_types":[],"namespace":{"html_id":"ph-core/Phase","kind":"module","full_name":"Phase","name":"Phase"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"html_id":"of(src:S,region=nil):self-class-method","name":"of","doc":null,"summary":null,"abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"S"},{"name":"region","doc":null,"default_value":"nil","external_name":"region","restriction":""}],"args_string":"(src : S, region = nil) : self","args_html":"(src : S, region = <span class=\"n\">nil</span>) : <span class=\"k\">self</span>","location":{"filename":"src/readonly_view.cr","line_number":10,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/readonly_view.cr#L10"},"def":{"name":"of","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"S"},{"name":"region","doc":null,"default_value":"nil","external_name":"region","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"case src\nwhen ReadonlyView\n  return src.view(region)\nelse\n  new_view = ReadonlyView(S, typeof(src.sample)).new(src)\n  if region\n    new_view.restrict_to(region)\n  end\n  return new_view\nend"}}],"instance_methods":[{"html_id":"clone:self-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : self","args_html":" : <span class=\"k\">self</span>","location":{"filename":"src/readonly_view.cr","line_number":32,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/readonly_view.cr#L32"},"def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"(typeof(self)).new(@src, @shape.clone, @transform.clone)"}},{"html_id":"permute(order:Enumerable?=nil):self-instance-method","name":"permute","doc":null,"summary":null,"abstract":false,"args":[{"name":"order","doc":null,"default_value":"nil","external_name":"order","restriction":"Enumerable | ::Nil"}],"args_string":"(order : Enumerable? = nil) : self","args_html":"(order : Enumerable? = <span class=\"n\">nil</span>) : <span class=\"k\">self</span>","location":{"filename":"src/readonly_view.cr","line_number":73,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/readonly_view.cr#L73"},"def":{"name":"permute","args":[{"name":"order","doc":null,"default_value":"nil","external_name":"order","restriction":"Enumerable | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"clone.permute!(order)"}},{"html_id":"permute!(order:Enumerable?=nil):self-instance-method","name":"permute!","doc":null,"summary":null,"abstract":false,"args":[{"name":"order","doc":null,"default_value":"nil","external_name":"order","restriction":"Enumerable | ::Nil"}],"args_string":"(order : Enumerable? = nil) : self","args_html":"(order : Enumerable? = <span class=\"n\">nil</span>) : <span class=\"k\">self</span>","location":{"filename":"src/readonly_view.cr","line_number":66,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/readonly_view.cr#L66"},"def":{"name":"permute!","args":[{"name":"order","doc":null,"default_value":"nil","external_name":"order","restriction":"Enumerable | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"pt = PermuteTransform.new(order || self.dimensions)\n@shape = pt.permute(@shape)\n@transform.compose!(pt)\nself\n"}},{"html_id":"process(new_proc:R->U):ProcView(S,R,U)forallU-instance-method","name":"process","doc":null,"summary":null,"abstract":false,"args":[{"name":"new_proc","doc":null,"default_value":"","external_name":"new_proc","restriction":"(R -> U)"}],"args_string":"(new_proc : R -> U) : ProcView(S, R, U) forall U","args_html":"(new_proc : R -> U) : <a href=\"../Phase/ProcView.html\">ProcView</a>(S, R, U) forall U","location":{"filename":"src/readonly_view.cr","line_number":95,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/readonly_view.cr#L95"},"def":{"name":"process","args":[{"name":"new_proc","doc":null,"default_value":"","external_name":"new_proc","restriction":"(R -> U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ProcView(S, R, U)","visibility":"Public","body":"ProcView(S, R, U).new(@src, @shape.clone, new_proc, @transform.clone)"}},{"html_id":"process(&block:R->U):ProcView(S,R,U)forallU-instance-method","name":"process","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&block : R -> U) : ProcView(S, R, U) forall U","args_html":"(&block : R -> U) : <a href=\"../Phase/ProcView.html\">ProcView</a>(S, R, U) forall U","location":{"filename":"src/readonly_view.cr","line_number":99,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/readonly_view.cr#L99"},"def":{"name":"process","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(R -> U)"},"return_type":"ProcView(S, R, U)","visibility":"Public","body":"process(block)"}},{"html_id":"reshape(new_shape):self-instance-method","name":"reshape","doc":null,"summary":null,"abstract":false,"args":[{"name":"new_shape","doc":null,"default_value":"","external_name":"new_shape","restriction":""}],"args_string":"(new_shape) : self","args_html":"(new_shape) : <span class=\"k\">self</span>","location":{"filename":"src/readonly_view.cr","line_number":62,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/readonly_view.cr#L62"},"def":{"name":"reshape","args":[{"name":"new_shape","doc":null,"default_value":"","external_name":"new_shape","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"clone.reshape!(new_shape)"}},{"html_id":"reshape!(new_shape):self-instance-method","name":"reshape!","doc":null,"summary":null,"abstract":false,"args":[{"name":"new_shape","doc":null,"default_value":"","external_name":"new_shape","restriction":""}],"args_string":"(new_shape) : self","args_html":"(new_shape) : <span class=\"k\">self</span>","location":{"filename":"src/readonly_view.cr","line_number":54,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/readonly_view.cr#L54"},"def":{"name":"reshape!","args":[{"name":"new_shape","doc":null,"default_value":"","external_name":"new_shape","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"@transform.compose!(ReshapeTransform.new(@shape, new_shape))\n@shape = new_shape\nself\n"}},{"html_id":"reverse:self-instance-method","name":"reverse","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : self","args_html":" : <span class=\"k\">self</span>","location":{"filename":"src/readonly_view.cr","line_number":82,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/readonly_view.cr#L82"},"def":{"name":"reverse","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"clone.reverse!"}},{"html_id":"reverse!:self-instance-method","name":"reverse!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : self","args_html":" : <span class=\"k\">self</span>","location":{"filename":"src/readonly_view.cr","line_number":77,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/readonly_view.cr#L77"},"def":{"name":"reverse!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"@transform.compose!(ReverseTransform.new(@shape))\nself\n"}},{"html_id":"shape:Array(Int32)-instance-method","name":"shape","doc":"Returns the length of the `{{@type}}` in each dimension.\nFor a `coord` to specify an element of the `{{@type}}` it must satisfy `coord[i] < shape[i]` for each `i`.","summary":"<p>Returns the length of the <code>{{@type}}</code> in each dimension.</p>","abstract":false,"args":[],"args_string":" : Array(Int32)","args_html":" : Array(Int32)","location":{"filename":"src/readonly_view.cr","line_number":36,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/readonly_view.cr#L36"},"def":{"name":"shape","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"@shape.clone"}},{"html_id":"to_narr:NArray-instance-method","name":"to_narr","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : NArray","args_html":" : <a href=\"../Phase/NArray.html\">NArray</a>","location":{"filename":"src/readonly_view.cr","line_number":103,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/readonly_view.cr#L103"},"def":{"name":"to_narr","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NArray","visibility":"Public","body":"iter = self.each\nNArray.build(@shape) do |coord, i|\n  unsafe_fetch_element(coord)\nend\n"}},{"html_id":"unsafe_fetch_chunk(region:IndexRegion,drop:Bool):self-instance-method","name":"unsafe_fetch_chunk","doc":null,"summary":null,"abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"IndexRegion"},{"name":"drop","doc":null,"default_value":"","external_name":"drop","restriction":"Bool"}],"args_string":"(region : IndexRegion, drop : Bool) : self","args_html":"(region : <a href=\"../Phase/IndexRegion.html\">IndexRegion</a>, drop : Bool) : <span class=\"k\">self</span>","location":{"filename":"src/readonly_view.cr","line_number":86,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/readonly_view.cr#L86"},"def":{"name":"unsafe_fetch_chunk","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"IndexRegion"},{"name":"drop","doc":null,"default_value":"","external_name":"drop","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"view(region)"}},{"html_id":"unsafe_fetch_element(coord):R-instance-method","name":"unsafe_fetch_element","doc":null,"summary":null,"abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""}],"args_string":"(coord) : R","args_html":"(coord) : R","location":{"filename":"src/readonly_view.cr","line_number":91,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/readonly_view.cr#L91"},"def":{"name":"unsafe_fetch_element","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"R","visibility":"Public","body":"(@src.unsafe_fetch_element(@transform.apply(coord))).unsafe_as(R)"}},{"html_id":"view(region=nil):self-instance-method","name":"view","doc":null,"summary":null,"abstract":false,"args":[{"name":"region","doc":null,"default_value":"nil","external_name":"region","restriction":""}],"args_string":"(region = nil) : self","args_html":"(region = <span class=\"n\">nil</span>) : <span class=\"k\">self</span>","location":{"filename":"src/readonly_view.cr","line_number":40,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/readonly_view.cr#L40"},"def":{"name":"view","args":[{"name":"region","doc":null,"default_value":"nil","external_name":"region","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"new_view = clone\nif region\n  new_view.restrict_to(region)\nend\nnew_view\n"}}],"macros":[],"types":[]},{"html_id":"ph-core/Phase/RegionIterator","path":"Phase/RegionIterator.html","kind":"class","full_name":"Phase::RegionIterator(I)","name":"RegionIterator","abstract":false,"superclass":{"html_id":"ph-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"ph-core/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"ph-core/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"ph-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"ph-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/iterators/region_iterator.cr","line_number":2,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/region_iterator.cr#L2"}],"repository_name":"ph-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"ph-core/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"ph-core/Phase","kind":"module","full_name":"Phase","name":"Phase"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"html_id":"new(src_shape:Indexable(I),chunk_shape=nil,strides=nil,degeneracy=nil,fringe_behaviour:FringeBehaviour=FringeBehaviour::DISCARD,&block:IndexRegion(I)->CoordIterator(I))-class-method","name":"new","doc":"getter size : Int32\nTODO: iter inputs, etc","summary":"<p>getter size : Int32 TODO: iter inputs, etc</p>","abstract":false,"args":[{"name":"src_shape","doc":null,"default_value":"","external_name":"src_shape","restriction":"Indexable(I)"},{"name":"chunk_shape","doc":null,"default_value":"nil","external_name":"chunk_shape","restriction":""},{"name":"strides","doc":null,"default_value":"nil","external_name":"strides","restriction":""},{"name":"degeneracy","doc":null,"default_value":"nil","external_name":"degeneracy","restriction":""},{"name":"fringe_behaviour","doc":null,"default_value":"FringeBehaviour::DISCARD","external_name":"fringe_behaviour","restriction":"FringeBehaviour"}],"args_string":"(src_shape : Indexable(I), chunk_shape = nil, strides = nil, degeneracy = nil, fringe_behaviour : FringeBehaviour = FringeBehaviour::DISCARD, &block : IndexRegion(I) -> CoordIterator(I))","args_html":"(src_shape : Indexable(I), chunk_shape = <span class=\"n\">nil</span>, strides = <span class=\"n\">nil</span>, degeneracy = <span class=\"n\">nil</span>, fringe_behaviour : <a href=\"../Phase/RegionIterator/FringeBehaviour.html\">FringeBehaviour</a> = <span class=\"t\">FringeBehaviour</span><span class=\"t\">::</span><span class=\"t\">DISCARD</span>, &block : <a href=\"../Phase/IndexRegion.html\">IndexRegion</a>(I) -> <a href=\"../Phase/CoordIterator.html\">CoordIterator</a>(I))","location":{"filename":"src/iterators/region_iterator.cr","line_number":14,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/region_iterator.cr#L14"},"def":{"name":"new","args":[{"name":"src_shape","doc":null,"default_value":"","external_name":"src_shape","restriction":"Indexable(I)"},{"name":"chunk_shape","doc":null,"default_value":"nil","external_name":"chunk_shape","restriction":""},{"name":"strides","doc":null,"default_value":"nil","external_name":"strides","restriction":""},{"name":"degeneracy","doc":null,"default_value":"nil","external_name":"degeneracy","restriction":""},{"name":"fringe_behaviour","doc":null,"default_value":"FringeBehaviour::DISCARD","external_name":"fringe_behaviour","restriction":"FringeBehaviour"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(IndexRegion(I) -> CoordIterator(I))"},"return_type":"","visibility":"Public","body":"puts(fringe_behaviour, degeneracy, chunk_shape)\nstrides || (strides = chunk_shape)\nif strides.any? do |x|\n  x <= 0\nend\n  raise(DimensionError.new(\"Stride size must be greater than 0.\"))\nend\nlast = self.compute_lasts(src_shape, chunk_shape, strides, fringe_behaviour)\nregion = IndexRegion.new(Array(I).new(src_shape.size, 0), strides, stop: last)\ncoord_iter = yield region\nnew(src_shape, chunk_shape, coord_iter, degeneracy, fringe_behaviour)\n"}},{"html_id":"new(src_shape:Indexable(I),chunk_shape,strides=nil,degeneracy=nil,fringe_behaviour:FringeBehaviour=FringeBehaviour::DISCARD)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"src_shape","doc":null,"default_value":"","external_name":"src_shape","restriction":"Indexable(I)"},{"name":"chunk_shape","doc":null,"default_value":"","external_name":"chunk_shape","restriction":""},{"name":"strides","doc":null,"default_value":"nil","external_name":"strides","restriction":""},{"name":"degeneracy","doc":null,"default_value":"nil","external_name":"degeneracy","restriction":""},{"name":"fringe_behaviour","doc":null,"default_value":"FringeBehaviour::DISCARD","external_name":"fringe_behaviour","restriction":"FringeBehaviour"}],"args_string":"(src_shape : Indexable(I), chunk_shape, strides = nil, degeneracy = nil, fringe_behaviour : FringeBehaviour = FringeBehaviour::DISCARD)","args_html":"(src_shape : Indexable(I), chunk_shape, strides = <span class=\"n\">nil</span>, degeneracy = <span class=\"n\">nil</span>, fringe_behaviour : <a href=\"../Phase/RegionIterator/FringeBehaviour.html\">FringeBehaviour</a> = <span class=\"t\">FringeBehaviour</span><span class=\"t\">::</span><span class=\"t\">DISCARD</span>)","location":{"filename":"src/iterators/region_iterator.cr","line_number":30,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/region_iterator.cr#L30"},"def":{"name":"new","args":[{"name":"src_shape","doc":null,"default_value":"","external_name":"src_shape","restriction":"Indexable(I)"},{"name":"chunk_shape","doc":null,"default_value":"","external_name":"chunk_shape","restriction":""},{"name":"strides","doc":null,"default_value":"nil","external_name":"strides","restriction":""},{"name":"degeneracy","doc":null,"default_value":"nil","external_name":"degeneracy","restriction":""},{"name":"fringe_behaviour","doc":null,"default_value":"FringeBehaviour::DISCARD","external_name":"fringe_behaviour","restriction":"FringeBehaviour"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(src_shape, chunk_shape, strides, degeneracy, fringe_behaviour) do |region|\n  LexIterator.new(region)\nend"}}],"instance_methods":[{"html_id":"next-instance-method","name":"next","doc":"Returns the next element in this iterator, or `Iterator::Stop::INSTANCE` if there\nare no more elements.","summary":"<p>Returns the next element in this iterator, or <code>Iterator::Stop::INSTANCE</code> if there are no more elements.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/iterators/region_iterator.cr","line_number":109,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/region_iterator.cr#L109"},"def":{"name":"next","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"coord = @coord_iter.next\ncase coord\nwhen Stop\n  return stop\nelse\n  compute_region(coord)\nend\n"}},{"html_id":"reset-instance-method","name":"reset","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/iterators/region_iterator.cr","line_number":123,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/region_iterator.cr#L123"},"def":{"name":"reset","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@coord_iter.reset"}},{"html_id":"unsafe_next-instance-method","name":"unsafe_next","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/iterators/region_iterator.cr","line_number":119,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/region_iterator.cr#L119"},"def":{"name":"unsafe_next","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"compute_region(@coord_iter.next)"}}],"macros":[],"types":[{"html_id":"ph-core/Phase/RegionIterator/FringeBehaviour","path":"Phase/RegionIterator/FringeBehaviour.html","kind":"enum","full_name":"Phase::RegionIterator::FringeBehaviour","name":"FringeBehaviour","abstract":false,"superclass":null,"ancestors":[{"html_id":"ph-core/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"ph-core/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"ph-core/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"ph-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/iterators/region_iterator.cr","line_number":127,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/region_iterator.cr#L127"}],"repository_name":"ph-core","program":false,"enum":true,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"DISCARD","name":"DISCARD","value":"0","doc":null,"summary":null},{"id":"COVER","name":"COVER","value":"1","doc":null,"summary":null},{"id":"ALL_START_POINTS","name":"ALL_START_POINTS","value":"2","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"ph-core/Phase/RegionIterator","kind":"class","full_name":"Phase::RegionIterator(I)","name":"RegionIterator"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"html_id":"all_start_points?-instance-method","name":"all_start_points?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/iterators/region_iterator.cr","line_number":130,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/region_iterator.cr#L130"},"def":{"name":"all_start_points?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ALL_START_POINTS"}},{"html_id":"cover?-instance-method","name":"cover?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/iterators/region_iterator.cr","line_number":129,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/region_iterator.cr#L129"},"def":{"name":"cover?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == COVER"}},{"html_id":"discard?-instance-method","name":"discard?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/iterators/region_iterator.cr","line_number":128,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/iterators/region_iterator.cr#L128"},"def":{"name":"discard?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == DISCARD"}}],"macros":[],"types":[]}]},{"html_id":"ph-core/Phase/RegionTransform","path":"Phase/RegionTransform.html","kind":"struct","full_name":"Phase::RegionTransform","name":"RegionTransform","abstract":false,"superclass":{"html_id":"ph-core/Phase/CoordTransform","kind":"struct","full_name":"Phase::CoordTransform","name":"CoordTransform"},"ancestors":[{"html_id":"ph-core/Phase/CoordTransform","kind":"struct","full_name":"Phase::CoordTransform","name":"CoordTransform"},{"html_id":"ph-core/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"ph-core/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"ph-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/view_util/transforms.cr","line_number":168,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view_util/transforms.cr#L168"}],"repository_name":"ph-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"ph-core/Phase","kind":"module","full_name":"Phase","name":"Phase"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"html_id":"new(region)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""}],"args_string":"(region)","args_html":"(region)","location":{"filename":"src/view_util/transforms.cr","line_number":174,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view_util/transforms.cr#L174"},"def":{"name":"new","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(region)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"apply(coord:Array(Int32)):Array(Int32)-instance-method","name":"apply","doc":null,"summary":null,"abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Array(Int32)"}],"args_string":"(coord : Array(Int32)) : Array(Int32)","args_html":"(coord : Array(Int32)) : Array(Int32)","location":{"filename":"src/view_util/transforms.cr","line_number":190,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view_util/transforms.cr#L190"},"def":{"name":"apply","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Array(Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"@region.unsafe_fetch_element(coord)"}},{"html_id":"compose(t:CoordTransform):CoordTransform-instance-method","name":"compose","doc":"TODO: check reaaaaally carefully","summary":"<p><span class=\"flag orange\">TODO</span>  check reaaaaally carefully</p>","abstract":false,"args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"CoordTransform"}],"args_string":"(t : CoordTransform) : CoordTransform","args_html":"(t : <a href=\"../Phase/CoordTransform.html\">CoordTransform</a>) : <a href=\"../Phase/CoordTransform.html\">CoordTransform</a>","location":{"filename":"src/view_util/transforms.cr","line_number":179,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view_util/transforms.cr#L179"},"def":{"name":"compose","args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"CoordTransform"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"CoordTransform","visibility":"Public","body":"case t\nwhen self\n  @region.unsafe_fetch_chunk(t.region)\nwhen ReverseTransform\nelse\n  return super(t)\nend"}},{"html_id":"region:IndexRegion(Int32)-instance-method","name":"region","doc":"each of these has size = dimensions\nTODO: Try to make this accept a generic coordinate type","summary":"<p>each of these has size = dimensions TODO: Try to make this accept a generic coordinate type</p>","abstract":false,"args":[],"args_string":" : IndexRegion(Int32)","args_html":" : <a href=\"../Phase/IndexRegion.html\">IndexRegion</a>(Int32)","location":{"filename":"src/view_util/transforms.cr","line_number":171,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view_util/transforms.cr#L171"},"def":{"name":"region","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IndexRegion(Int32)","visibility":"Public","body":"@region"}}],"macros":[],"types":[]},{"html_id":"ph-core/Phase/ReshapeTransform","path":"Phase/ReshapeTransform.html","kind":"struct","full_name":"Phase::ReshapeTransform","name":"ReshapeTransform","abstract":false,"superclass":{"html_id":"ph-core/Phase/CoordTransform","kind":"struct","full_name":"Phase::CoordTransform","name":"CoordTransform"},"ancestors":[{"html_id":"ph-core/Phase/CoordTransform","kind":"struct","full_name":"Phase::CoordTransform","name":"CoordTransform"},{"html_id":"ph-core/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"ph-core/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"ph-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/view_util/transforms.cr","line_number":100,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view_util/transforms.cr#L100"}],"repository_name":"ph-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"ph-core/Phase","kind":"module","full_name":"Phase","name":"Phase"},"doc":"probably done","summary":"<p>probably done</p>","class_methods":[],"constructors":[{"html_id":"new(src_shape,new_shape)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"src_shape","doc":null,"default_value":"","external_name":"src_shape","restriction":""},{"name":"new_shape","doc":null,"default_value":"","external_name":"new_shape","restriction":""}],"args_string":"(src_shape, new_shape)","args_html":"(src_shape, new_shape)","location":{"filename":"src/view_util/transforms.cr","line_number":107,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view_util/transforms.cr#L107"},"def":{"name":"new","args":[{"name":"src_shape","doc":null,"default_value":"","external_name":"src_shape","restriction":""},{"name":"new_shape","doc":null,"default_value":"","external_name":"new_shape","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(src_shape, new_shape)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"apply(coord:Array(Int32)):Array(Int32)-instance-method","name":"apply","doc":null,"summary":null,"abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Array(Int32)"}],"args_string":"(coord : Array(Int32)) : Array(Int32)","args_html":"(coord : Array(Int32)) : Array(Int32)","location":{"filename":"src/view_util/transforms.cr","line_number":162,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view_util/transforms.cr#L162"},"def":{"name":"apply","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Array(Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"index = coord_to_index(coord, @view_axis_strides)\nindex_to_coord(index, @src_shape, @buffer)\n"}},{"html_id":"compose(t:CoordTransform):CoordTransform-instance-method","name":"compose","doc":null,"summary":null,"abstract":false,"args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"CoordTransform"}],"args_string":"(t : CoordTransform) : CoordTransform","args_html":"(t : <a href=\"../Phase/CoordTransform.html\">CoordTransform</a>) : <a href=\"../Phase/CoordTransform.html\">CoordTransform</a>","location":{"filename":"src/view_util/transforms.cr","line_number":112,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view_util/transforms.cr#L112"},"def":{"name":"compose","args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"CoordTransform"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"CoordTransform","visibility":"Public","body":"case t\nwhen self\n  return t\nelse\n  return super(t)\nend"}}],"macros":[],"types":[]},{"html_id":"ph-core/Phase/ReverseTransform","path":"Phase/ReverseTransform.html","kind":"struct","full_name":"Phase::ReverseTransform","name":"ReverseTransform","abstract":false,"superclass":{"html_id":"ph-core/Phase/CoordTransform","kind":"struct","full_name":"Phase::CoordTransform","name":"CoordTransform"},"ancestors":[{"html_id":"ph-core/Phase/CoordTransform","kind":"struct","full_name":"Phase::CoordTransform","name":"CoordTransform"},{"html_id":"ph-core/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"ph-core/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"ph-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/view_util/transforms.cr","line_number":241,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view_util/transforms.cr#L241"}],"repository_name":"ph-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"ph-core/Phase","kind":"module","full_name":"Phase","name":"Phase"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"html_id":"new(shape)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"args_string":"(shape)","args_html":"(shape)","location":{"filename":"src/view_util/transforms.cr","line_number":246,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view_util/transforms.cr#L246"},"def":{"name":"new","args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(shape)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"apply(coord:Array(Int32)):Array(Int32)-instance-method","name":"apply","doc":null,"summary":null,"abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Array(Int32)"}],"args_string":"(coord : Array(Int32)) : Array(Int32)","args_html":"(coord : Array(Int32)) : Array(Int32)","location":{"filename":"src/view_util/transforms.cr","line_number":264,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view_util/transforms.cr#L264"},"def":{"name":"apply","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Array(Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"coord.each_with_index do |el, i|\n  @buffer[i] = (@shape[i] - 1) - el\nend\n@buffer\n"}},{"html_id":"compose(t:CoordTransform):CoordTransform-instance-method","name":"compose","doc":null,"summary":null,"abstract":false,"args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"CoordTransform"}],"args_string":"(t : CoordTransform) : CoordTransform","args_html":"(t : <a href=\"../Phase/CoordTransform.html\">CoordTransform</a>) : <a href=\"../Phase/CoordTransform.html\">CoordTransform</a>","location":{"filename":"src/view_util/transforms.cr","line_number":250,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view_util/transforms.cr#L250"},"def":{"name":"compose","args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"CoordTransform"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"CoordTransform","visibility":"Public","body":"case t\nwhen self\n  return IdentityTransform.new\nelse\n  return super(t)\nend"}}],"macros":[],"types":[]},{"html_id":"ph-core/Phase/Shape","path":"Phase/Shape.html","kind":"alias","full_name":"Phase::Shape","name":"Shape","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/type_aliases.cr","line_number":13,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/type_aliases.cr#L13"}],"repository_name":"ph-core","program":false,"enum":false,"alias":true,"aliased":"Indexable(T)","aliased_html":"Indexable(T)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"ph-core/Phase","kind":"module","full_name":"Phase","name":"Phase"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"ph-core/Phase/ShapeError","path":"Phase/ShapeError.html","kind":"class","full_name":"Phase::ShapeError","name":"ShapeError","abstract":false,"superclass":{"html_id":"ph-core/IndexError","kind":"class","full_name":"IndexError","name":"IndexError"},"ancestors":[{"html_id":"ph-core/IndexError","kind":"class","full_name":"IndexError","name":"IndexError"},{"html_id":"ph-core/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"ph-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"ph-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/exceptions/exceptions.cr","line_number":8,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/exceptions/exceptions.cr#L8"}],"repository_name":"ph-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"ph-core/Phase","kind":"module","full_name":"Phase","name":"Phase"},"doc":null,"summary":null,"class_methods":[{"html_id":"initialize(message=\"Shapewasinvalidforthisoperation.\")-class-method","name":"initialize","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"\"Shape was invalid for this operation.\"","external_name":"message","restriction":""}],"args_string":"(message = \"Shape was invalid for this operation.\")","args_html":"(message = <span class=\"s\">&quot;Shape was invalid for this operation.&quot;</span>)","location":{"filename":"src/exceptions/exceptions.cr","line_number":9,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/exceptions/exceptions.cr#L9"},"def":{"name":"initialize","args":[{"name":"message","doc":null,"default_value":"\"Shape was invalid for this operation.\"","external_name":"message","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"super(message)"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"ph-core/Phase/ShapeUtil","path":"Phase/ShapeUtil.html","kind":"module","full_name":"Phase::ShapeUtil","name":"ShapeUtil","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/shape_util.cr","line_number":2,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/shape_util.cr#L2"}],"repository_name":"ph-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"ph-core/Phase/ShapeUtil","kind":"module","full_name":"Phase::ShapeUtil","name":"ShapeUtil"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"ph-core/Phase","kind":"module","full_name":"Phase","name":"Phase"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"html_id":"compatible_shapes?(shape1,shape2)-instance-method","name":"compatible_shapes?","doc":"checks if two shapes define the same data layout, i.e. are equal up to trailing ones.","summary":"<p>checks if two shapes define the same data layout, i.e.</p>","abstract":false,"args":[{"name":"shape1","doc":null,"default_value":"","external_name":"shape1","restriction":""},{"name":"shape2","doc":null,"default_value":"","external_name":"shape2","restriction":""}],"args_string":"(shape1, shape2)","args_html":"(shape1, shape2)","location":{"filename":"src/shape_util.cr","line_number":6,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/shape_util.cr#L6"},"def":{"name":"compatible_shapes?","args":[{"name":"shape1","doc":null,"default_value":"","external_name":"shape1","restriction":""},{"name":"shape2","doc":null,"default_value":"","external_name":"shape2","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if shape1.size > shape2.size\n  larger = shape1\n  shared_dims = shape2.size\nelse\n  larger = shape2\n  shared_dims = shape1.size\nend\nshared_dims.times do |i|\n  if shape1[i] != shape2[i]\n    return false\n  end\nend\n(shared_dims...larger.size).step(1) do |i|\n  if larger[i] != 1\n    return false\n  end\nend\ntrue\n"}}],"macros":[],"types":[]},{"html_id":"ph-core/Phase/SpecificCartesianProduct","path":"Phase/SpecificCartesianProduct.html","kind":"class","full_name":"Phase::SpecificCartesianProduct","name":"SpecificCartesianProduct","abstract":false,"superclass":{"html_id":"ph-core/Phase/CartesianProduct","kind":"class","full_name":"Phase::CartesianProduct","name":"CartesianProduct"},"ancestors":[{"html_id":"ph-core/Phase/CartesianProduct","kind":"class","full_name":"Phase::CartesianProduct","name":"CartesianProduct"},{"html_id":"ph-core/Phase/MultiIndexable","kind":"module","full_name":"Phase::MultiIndexable","name":"MultiIndexable"},{"html_id":"ph-core/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"ph-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"ph-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cartesian_product.cr","line_number":97,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/cartesian_product.cr#L97"}],"repository_name":"ph-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"ph-core/Phase","kind":"module","full_name":"Phase","name":"Phase"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"html_id":"new(lists)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"lists","doc":null,"default_value":"","external_name":"lists","restriction":""}],"args_string":"(lists)","args_html":"(lists)","location":{"filename":"src/cartesian_product.cr","line_number":22,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/cartesian_product.cr#L22"},"def":{"name":"new","args":[{"name":"lists","doc":null,"default_value":"","external_name":"lists","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(lists)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"ph-core/Phase/View","path":"Phase/View.html","kind":"class","full_name":"Phase::View(S, R)","name":"View","abstract":false,"superclass":{"html_id":"ph-core/Phase/ReadonlyView","kind":"class","full_name":"Phase::ReadonlyView","name":"ReadonlyView"},"ancestors":[{"html_id":"ph-core/Phase/MultiWritable","kind":"module","full_name":"Phase::MultiWritable","name":"MultiWritable"},{"html_id":"ph-core/Phase/ReadonlyView","kind":"class","full_name":"Phase::ReadonlyView","name":"ReadonlyView"},{"html_id":"ph-core/Phase/MultiIndexable","kind":"module","full_name":"Phase::MultiIndexable","name":"MultiIndexable"},{"html_id":"ph-core/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"ph-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"ph-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/view.cr","line_number":2,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view.cr#L2"}],"repository_name":"ph-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"ph-core/Phase/MultiWritable","kind":"module","full_name":"Phase::MultiWritable","name":"MultiWritable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"ph-core/Phase","kind":"module","full_name":"Phase","name":"Phase"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"html_id":"of(src:S,region:Enumerable?=nil):self-class-method","name":"of","doc":null,"summary":null,"abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"S"},{"name":"region","doc":null,"default_value":"nil","external_name":"region","restriction":"Enumerable | ::Nil"}],"args_string":"(src : S, region : Enumerable? = nil) : self","args_html":"(src : S, region : Enumerable? = <span class=\"n\">nil</span>) : <span class=\"k\">self</span>","location":{"filename":"src/view.cr","line_number":5,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view.cr#L5"},"def":{"name":"of","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"S"},{"name":"region","doc":null,"default_value":"nil","external_name":"region","restriction":"Enumerable | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"case src\nwhen ReadonlyView\n  return src.view(region)\nelse\n  new_view = View(S, typeof(src.sample)).new(src)\n  if region\n    new_view.restrict_to(region)\n  end\n  return new_view\nend"}}],"instance_methods":[{"html_id":"unsafe_set_element(coord:Indexable,value:R)-instance-method","name":"unsafe_set_element","doc":null,"summary":null,"abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Indexable"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"R"}],"args_string":"(coord : Indexable, value : R)","args_html":"(coord : Indexable, value : R)","location":{"filename":"src/view.cr","line_number":22,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view.cr#L22"},"def":{"name":"unsafe_set_element","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Indexable"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"R"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ensure_writable\n@src.unsafe_set_element(@transform.apply(coord), value)\n"}}],"macros":[{"html_id":"ensure_writable-macro","name":"ensure_writable","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/view.cr","line_number":16,"url":"https://github.com/in-phase/ph-core/blob/0ca19eb664ef717074bac168f5d3ad57ad063bb9/src/view.cr#L16"},"def":{"name":"ensure_writable","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% if S < MultiWritable %}{% else %}\n        {% raise(\"Could not write to #{@type}: #{S} is not a MultiWritable.\") %}\n      {% end %}\n\n    \n"}}],"types":[]}]}]}}